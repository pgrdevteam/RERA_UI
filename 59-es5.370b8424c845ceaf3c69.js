function _classCallCheck(s,e){if(!(s instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(s,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(s,o.key,o)}}function _createClass(s,e,r){return e&&_defineProperties(s.prototype,e),r&&_defineProperties(s,r),s}(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{FUz8:function(s,e,r){"use strict";r.r(e),e.default='\r\n\r\n<div id="labels" class="card shadow mb-4"> \r\n    \x3c!-- .card-body --\x3e\r\n    <div class="card-header"><b>Change Password</b></div>\r\n    <div class="card-body asd">\r\n    <div class="row">\r\n      <div class="col-md-12 mb-3">\r\n        <p>1. Password should be of minimum 8 characters and maximum of 20 characters in length.</p>\r\n        <p>2. Password should contain at least 1 Upper Case, 1 Lower Case and 1 numeral value from 0 to 9</p>\r\n        <p>3. Password should contain at least 1 special character from the allowed !, @, #, $, %, ^, &, *.</p>\r\n      </div>\r\n    <div class="col-md-12">\r\n      <form autocomplete="off" [formGroup]="passForm" id="validateFoem">\r\n          <div class="row">\r\n           \r\n        <div class="form-group col-md-4">\r\n          <label class="control-label"><strong> Old Password<sup>*</sup> </strong></label>\r\n          <input type="hidden" [(ngModel)]="profileId" class="form-control" formControlName="profileId" >\r\n          <input type="hidden" [(ngModel)]="userType" class="form-control" formControlName="userType" >\r\n          <input type="hidden" [(ngModel)]="userId" class="form-control" formControlName="userId" >\r\n          <input autocomplete="off" onKeyPress="if(this.value.length==20) return false;" type="password" class="form-control" formControlName="oldPassword" placeholder="Old Password">\r\n          <div class="error-box"><small class="error"> Old Password required</small></div>\r\n        </div>\r\n        <div class="form-group col-md-4">\r\n          <label class="control-label"><strong> New Password </strong><sup>*</sup></label>\r\n          <input autocomplete="off" type="password"onKeyPress="if(this.value.length==20) return false;" class="form-control" #newPass formControlName="newPassword" placeholder="New Password" (focusout)="matchPassword()">\r\n          <div class="error-box"><small class="error"> The entered New Password is not matching with the policy mentioned above.</small></div>\r\n        </div> \r\n        <div class="form-group col-md-4">\r\n          <label class="control-label"><strong>Confirm New Password </strong><sup>*</sup></label>\r\n          <input autocomplete="off" onKeyPress="if(this.value.length==20) return false;" type="password" class="form-control"  #confrimNewPass  formControlName="confirmPassword" placeholder="Confirm New Password" (focusout)="matchPassword()" >\r\n          <div class="error-box"><small class="error"> {{confirmPasswordMsg}}</small></div>\r\n\r\n        </div> \r\n      </div>\r\n      <div class="text-center">\r\n        <button type="submit" [disabled]="this.passForm.invalid" class="btn btn-primary" (click)="submitPass()"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Change Password</button>\r\n       \r\n      </div>\r\n      </form>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      <app-validation-message [message]="inputJson"></app-validation-message>'},JamI:function(s,e,r){"use strict";r.r(e),e.default=""},n9Ye:function(s,e,r){"use strict";r.r(e);var o=r("mrSG"),a=r("8Y7J"),n=r("SVse"),t=r("iInd"),l=r("s7LF"),i=r("FvaC"),d=r("p87Y"),c=r("FoHH"),p=r("2Vo4"),u=function(){function s(e,r,o){_classCallCheck(this,s),this._apiURL=e,this._regex=r,this._change=o,this.confirmPasswordMsg="The entered Confirm New Password is not matching with the policy mentioned above.",this.inputJson=new p.a({})}return _createClass(s,[{key:"ngOnInit",value:function(){this.passForm=new l.d({profileId:new l.c(null),userId:new l.c(null),userType:new l.c(null),oldPassword:new l.c(null,[l.h.required]),newPassword:new l.c(null,[l.h.required,l.h.minLength(8),l.h.pattern(this._regex.passwordRegex)]),confirmPassword:new l.c(null,[l.h.required,l.h.minLength(8),l.h.pattern(this._regex.passwordRegex)])}),this.profileId=sessionStorage.getItem("userProfileId"),this.userType=sessionStorage.getItem("userType"),this.userId=sessionStorage.getItem("userId")}},{key:"submitPass",value:function(){var s=this;console.log("passwordJson"),this.loader=!0,this.passForm.value.oldPassword=window.btoa(this.passForm.controls.oldPassword.value),this.passForm.value.newPassword=window.btoa(this.passForm.controls.newPassword.value),this.passForm.value.confirmPassword=window.btoa(this.passForm.controls.confirmPassword.value),console.log(this.passForm.value),this._change.updatePassword(this.passForm.value).subscribe((function(e){console.log(e),"200"==e.status?(s.inputJson.next({popShow:!0,popMsg:"Your password changed successfully.",popClass:"alert alert-success",popRoute:"logout"}),s.loginModal=!1,s.loader=!1,s.forget=!1):(s.inputJson.next({popShow:!0,popMsg:e.message,popClass:"alert alert-danger",popRoute:""}),s.errorMsg=!0,s.loader=!1,s.errorMsgText=e.message)}),(function(e){s.loader=!1,console.log(e),s.inputJson.next({popShow:!0,popMsg:e.message,popClass:"alert alert-danger",popRoute:""})}))}},{key:"matchPassword",value:function(){var s=this.passForm.get("newPassword"),e=this.passForm.get("confirmPassword");s.value!==e.value&&(e.setErrors({incorrect:!0}),this.confirmPasswordMsg="The entered New Password and Confirm New Password are not matching.")}}]),s}();u.ctorParameters=function(){return[{type:i.a},{type:d.a},{type:c.a}]};var m=[{path:"change-password",component:u=o.b([Object(a.n)({selector:"app-changepassword",template:o.c(r("FUz8")).default,styles:[o.c(r("JamI")).default]})],u)}],f=function s(){_classCallCheck(this,s)};f=o.b([Object(a.J)({imports:[t.f.forChild(m)],exports:[t.f]})],f);var w=r("UPf0"),h=r("4nBV");r.d(e,"ChangePasswordModule",(function(){return g}));var g=function s(){_classCallCheck(this,s)};g=o.b([Object(a.J)({declarations:[u],imports:[n.b,f,l.g,w.a,h.a]})],g)}}]);