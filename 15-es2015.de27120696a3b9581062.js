(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"+F3Z":function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4">\r\n  \x3c!-- .card-body --\x3e\r\n  <div class="card-header"><b>{{showDataVariable}} Services</b></div>\r\n  <div class="card-body asd">\r\n    <div class="row">\r\n      <div class="col-md-12">\r\n\r\n\r\n        <form [formGroup]="serviceForm" id="validateFoem">\r\n          <div class="row">\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Name<sup>*</sup></label>\r\n              <input type="text" class="form-control" placeholder="" formControlName="name">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  Please enter service name</small></div>\r\n            </div>\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Description<sup>*</sup></label>\r\n              <textarea class="form-control" placeholder="" formControlName="description" maxlength="900"></textarea>\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  Please enter description</small></div>\r\n            </div>\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Value (either in days for date or in currency (INR))<sup>*</sup></label>\r\n              <input type="number" class="form-control" placeholder="" formControlName="value">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  Please enter value</small></div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n\r\n          <div class="text-center">\r\n\r\n            <button [disabled]="this.serviceForm.invalid" class="btn btn-primary" (click)="postInService()"><i\r\n                class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Submit</button>\r\n          </div>\r\n\r\n        </form>\r\n        \r\n        <div class="table-responsive">\r\n          \r\n        <div class="tabel-text-right  font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n        \r\n        <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n          <table class=" mt-5 mb-0 table table-bordered">\r\n                            \r\n    <thead>\r\n      <tr class="bg-light  text-size-small text-center">\r\n          <th>S.No.</th>\r\n          <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n            <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n            <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n          </div>\r\n        </th>   \r\n        <th>View Change History</th>\r\n      </tr>\r\n  </thead>\r\n            \x3c!-- <thead class="bg-light">\r\n              <tr>\r\n                <th>SrNo.</th>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n                <th>Value</th>\r\n                <th>Date From</th>\r\n                <th>Date To</th>\r\n                <th>View Change History</th>\r\n              </tr>\r\n            </thead> --\x3e\r\n            <tbody *ngIf="filterDataArray?.length > 0; else _noRecord">\r\n              <tr *ngFor="let rec of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }; let ij = index">\r\n                <td class="tabel-text-right">{{((currentPageNo-1)*10)+(ij+1) }} </td>\r\n\r\n                \x3c!-- <td> {{ij+1}} </td> --\x3e\r\n                <td>{{rec.name}}</td>\r\n                <td class="moreLinkTd">\r\n                  <div class="d-flex justify-content-between" *ngIf="rec?.description!=null">\r\n                  <div [ngClass]="{textViewMore: checkRemark(rec?.description)}">\r\n                    {{rec.description}}\r\n                  </div> \r\n                  <a *ngIf="checkRemark(rec.description)" class="link-color showMore" href="javascript:void(0);">View More</a> \r\n                  <a class="link-color hideMore" href="javascript:void(0);">Hide</a>\r\n                </div>\r\n                </td>\r\n                <td>{{transformAmount(rec.value)}}</td>\r\n                <td class="text-nowrap">{{rec.fromDate | date: \'dd-MM-yyyy, h:mm a\'}}</td>\r\n                <td class="text-nowrap">{{rec.toDate | date: \'dd-MM-yyyy, h:mm a\'}}</td>\r\n                <td>\r\n                  <u>\r\n                    <a href="javascript:void(0);" (click)="showHistoryOnRecord(rec?.name)">View</a>\r\n                  </u>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <ng-template #_noRecord>\r\n              <tbody>\r\n                <tr>\r\n                  <td colspan="7" class="text-center error">{{MessageDisplay}}</td>\r\n                </tr>\r\n              </tbody>\r\n            </ng-template>\r\n          </table>\r\n\r\n          <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n            <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\x3c!-- /.card-body --\x3e\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class="modal show" *ngIf="modalPopup">\r\n  <div class="modal-dialog modal-lg">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">\r\n          View Change History\r\n        </h4>\r\n        <button type="button" class="close" (click)="closePopup()">&times;</button>\r\n      </div>\r\n\r\n\r\n      <div class="table-responsive">\r\n        <table class=" mt-5 mb-0 table table-bordered">\r\n          <thead class="bg-light">\r\n            <tr>\r\n              <th>SrNo.</th>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n              <th>Value</th>\r\n              <th>Last Updated on</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody *ngIf="popUpRecord.length > 0; else _noRecord_popUpRecord">\r\n            <tr *ngFor="let rec of popUpRecord; let ij = index">\r\n              <td> {{ij+1}} </td>\r\n              <td>{{rec.name}}</td>\r\n              \r\n              <td class="moreLinkTd">\r\n                <div class="d-flex justify-content-between" *ngIf="rec.description!=null">\r\n                <div [ngClass]="{textViewMore: checkRemark(rec.description)}">\r\n                  {{rec.description}}\r\n                </div> \r\n                <a *ngIf="checkRemark(rec.description)" class="link-color showMore" href="javascript:void()">View More</a> \r\n                <a class="link-color hideMore" href="javascript:void()">Hide More</a>\r\n              </div>\r\n              </td>\r\n              <td>{{transformAmount(rec.value)}}</td>\r\n              <td>{{rec.fromDate  | date: \'dd-MM-yyyy, h:mm a\'}}</td>\r\n              <td>{{rec.status}}</td>\r\n            </tr>\r\n          </tbody>\r\n          <ng-template #_noRecord_popUpRecord>\r\n            <tbody>\r\n              <tr>\r\n                <td colspan="6" class="text-center error">{{MessageDisplay}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </ng-template>\r\n        </table>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n<app-loader *ngIf="loadingSpinner"></app-loader>'},"+O5n":function(t,e,r){"use strict";r.r(e),e.default='<div class="row mb-4 mt-4">\r\n\r\n  \r\n  <div class="container-fluid">\r\n  <div class="col-md-12 text-center mb-2">\r\n      <h2 class="text-dark">User Group Listing</h2>\r\n    </div>\r\n    <div class="col-md-12 mb-2">\r\n      <form [formGroup]="searchFormTeam" (ngSubmit)="teamFormSubmit()" >\r\n  \r\n      <div class="row mb-4">\r\n        <div class="col-md-12">\r\n          <div class="card shadow"> \r\n    \r\n            <div class="card-body">\r\n              <div class="col-md-12">           \r\n                <div class="form-group col-md-3"> \r\n                  <label class="control-label font-weight-bold">User Group<sup>*</sup> \r\n                  \r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    \r\n                    <input class="form-control"  type="text"formControlName="team"  onkeyup="this.value = this.value.toUpperCase();" >\r\n                  </div>\r\n                </div>\r\n        \r\n                \r\n                <div class="form-group col-md-3">\r\n                 \r\n                  <label class="control-label font-weight-bold">Group Category\r\n                  \r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                  \r\n\r\n                    <select class="form-control" formControlName="groupCategory"  >\r\n                      <option value="">---Select groupCategory---</option>\r\n                      <option value="GENERAL_BENCH">GENERAL_BENCH</option>\r\n                      <option value="APPEAL_BENCH">APPEAL_BENCH</option>\r\n                      <option value="REVIEW_BENCH">REVIEW_BENCH</option>  \r\n                      <option value="INV">INV</option>          \r\n                      </select>\r\n\r\n\r\n                  </div>\r\n                </div>\r\n\r\n              \r\n\r\n\t\t\t\t\r\n\t\t\r\n              </div>\r\n  \r\n              <div class="form-group col-md-12  text-center">\r\n                \x3c!--<button class="btn btn-primary" [disabled]="this.detailsOfAppelForm.invalid" id="submitBtn" (click)="formSubmit()"><i\r\n                  class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>SUBMIT</button>--\x3e\r\n                 \r\n                  <button type="submit" class="btn btn-primary btn-small mt-2" [disabled]="this.searchFormTeam.invalid" >Submit</button>\r\n \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     </form>\r\n      </div>\r\n  \r\n  <div class="mt-3">\r\n      <div class="col-md-12">\r\n      <div class="card ">\r\n        \r\n        <div class="card-body">\r\n          <div class="row">\r\n            <div class=" col-md-12 table-responsive mb-4">\r\n              <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n              <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n              <table class="table table-bordered">\r\n                <thead>\r\n                  <tr class="bg-light  text-size-small text-center">\r\n               \r\n                    <th>Sr.No.</th>\r\n                    \r\n                      <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                      </div>\r\n                    </th>   \r\n                    \r\n                    <th>Action</th>\r\n              \r\n                  </tr>\r\n              </thead>\r\n                \x3c!-- <thead>\r\n                  <tr class="text-center bg-light  text-size-small">\r\n                    <td>Sr.No.</td>\r\n                    \r\n                    <td>User Group</td>\r\n                    <td>Group Category</td>\r\n                  <td>Action</td>              \r\n                  </tr>\r\n                </thead> --\x3e\r\n                <tbody  *ngIf="filterDataArray?.length > 0; else no_allData">\r\n                 \r\n                  <tr class="text-center" *ngFor="let data of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }, let i= index" >\r\n                      <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n                      \x3c!-- <td>{{i+1}}</td> --\x3e\r\n                    <td>{{data.userGroup}}</td>  \r\n                    <td>{{data.groupCategory}}</td>\r\n                    <td><button type="button" class="btn btn-small bg-success" (click)=editGroup(data.groupId,data.userGroup,data.groupCategory)>Edit</button></td>               \r\n                  </tr>\r\n\x3c!--                 \r\n                <ng-template #norecords>\r\n                  <tr><td colspan=9>No Records Found</td></tr>\r\n                </ng-template> --\x3e\r\n                </tbody>\r\n                         \r\n<ng-template #no_allData>\r\n  <tbody>\r\n    <tr>\r\n      <td class="error text-center alert alert-danger" colspan="4">No record found!</td>\r\n    </tr>\r\n  </tbody>\r\n</ng-template>\r\n              </table>\r\n                         \r\n<div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n  <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n</div>\r\n         \r\n             \r\n            </div>\r\n  \r\n           \r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n    </div></div></div>\r\n\r\n    <div class="modal show" id="myModal" *ngIf="modalPopup">\r\n      <div class="modal-dialog ">\r\n      <div class="modal-content">\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n      <h4 class="modal-title">Message</h4>\r\n      <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n      </div>\r\n      \x3c!-- Modal body --\x3e\r\n      <div class="modal-body">\r\n        <form [formGroup]="editeForm">\r\n          <input type="hidden" formControlName="groupIds"  [(ngModel)]="groupIds">\r\n        \r\n          <div class="form-group col-md-6"> \r\n            <label class="control-label font-weight-bold">User Group<sup>*</sup> \r\n             \r\n              </label>\r\n            <div class="input-group mt-2">\r\n    \r\n              <input type="text" class="form-control" formControlName="userGroups" onkeyup="this.value = this.value.toUpperCase();" [(ngModel)]="userGroups">\r\n           \r\n            </div>\r\n            \r\n          </div>\r\n\r\n          <div class="form-group col-md-6"> \r\n            <label class="control-label font-weight-bold">Group Category \r\n             \r\n              </label>\r\n            <div class="input-group mt-2">\r\n    \r\n              <select class="form-control" formControlName="groupCategorys" [(ngModel)]="groupCategorys"  >\r\n                <option value="">---Select groupCategory---</option>\r\n                <option value="GENERAL_BENCH">GENERAL_BENCH</option>\r\n                <option value="APPEAL_BENCH">APPEAL_BENCH</option>\r\n                <option value="REVIEW_BENCH">REVIEW_BENCH</option>  \r\n                <option value="INV">INV</option>          \r\n                </select>\r\n            </div>\r\n            \r\n          </div>\r\n     \r\n    </form>\r\n      </div>\r\n      \x3c!-- Modal footer --\x3e\r\n      <div class="modal-footer">\r\n      <button type="button" (click)="updateClause()" [disabled]="this.editeForm.invalid" class="btn btn-primary">Update</button>\r\n     \r\n      </div>\r\n    \r\n      </div>\r\n      </div>\r\n      </div>\r\n     \r\n\x3c!----Edite Popup strat here--------\x3e\r\n\r\n\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n'},"+gYW":function(t,e,r){"use strict";r.r(e),e.default=""},"+p0n":function(t,e,r){"use strict";r.r(e),e.default=""},"//o4":function(t,e,r){"use strict";r.r(e),e.default=""},"/jcW":function(t,e,r){"use strict";r.r(e),e.default='<div class="row mb-4 mt-4">\r\n\r\n  <div class="container-fluid">\r\n  <div class="col-md-12 text-center mb-2">\r\n      <h2 class="text-dark">Level Listing</h2>\r\n    </div>\r\n    <div class="col-md-12 mb-2">\r\n    <form [formGroup]="searchForm" (ngSubmit)="searchFormSubmit()" id="validateFoem" >\r\n  \r\n      <div class="row mb-4">\r\n        <div class="col-md-12">\r\n          <div class="card shadow"> \r\n    \r\n            <div class="card-body">\r\n              <div class="col-md-12">           \r\n                <div class="form-group col-md-3"> \r\n                  <label class="control-label font-weight-bold">Level Name<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'LEVEL_NAME\')" >?</span>\r\n                    </label>\r\n                  \r\n                  <input class="form-control " formControlName="levelName" type="text" value="search">\r\n                  <div class="error-box"><small class="error">Enter valid Level Name Ex.LEVELEONE </small></div>\r\n                  \r\n                </div>\r\n\t\t\t\t\r\n                 <div class="form-group col-md-3">\r\n                  <label class="control-label font-weight-bold">Level Code<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'LEVEL_CODE\')" >?</span>\r\n                    </label>\r\n                  \r\n                <input class="form-control " type="text" formControlName="levelCode" value="search">\r\n                <div class="error-box"><small class="error">Enter valid Level Code </small></div>\r\n                </div>\r\n\t\t\t\t\r\n\t\t\r\n              </div>\r\n  \r\n              <div class="form-group col-md-12  text-center">\r\n                \x3c!--<button class="btn btn-primary" [disabled]="this.detailsOfAppelForm.invalid" id="submitBtn" (click)="formSubmit()"><i\r\n                  class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>SUBMIT</button>--\x3e\r\n                 \r\n                <button type="submit" class="btn btn-primary btn-small mt-2" [disabled]="this.searchForm.invalid" >Submit</button>\r\n \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     </form>\r\n      </div>\r\n  \r\n  <div class="mt-3">\r\n      <div class="col-md-12">\r\n      <div class="card ">\r\n        \r\n        <div class="card-body">\r\n          <div class="row">\r\n            <div class=" col-md-12 table-responsive mb-4">\r\n              <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n              <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n              <table class="table table-bordered">\r\n                <thead>\r\n                  <tr class="bg-light  text-size-small text-center">\r\n                    <th>Sr.No.</th>\r\n                    \r\n                      <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                      </div>\r\n                    </th>   \r\n                    \r\n                    <th>Action</th>\r\n      \r\n                  </tr>\r\n              </thead>\r\n                \x3c!-- <thead>\r\n                  <tr class="text-center bg-light  text-size-small">\r\n                    <td>Sr.No.</td>\r\n                    \r\n                    <td>Level Name</td>\r\n                    <td>Level Code</td>\r\n                    \r\n                    <td>Action</td>                    \r\n                   \r\n                  </tr>\r\n                </thead> --\x3e\r\n                <tbody *ngIf="filterDataArray?.length > 0; else no_allData"  >\r\n                 \r\n                  <tr class="text-center" *ngFor="let data of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }; let i= index"  >\r\n                    <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n                    \x3c!-- <td>{{i+1}}</td> --\x3e\r\n\t\t\t\t\t<td>{{data.levelName}}</td>\r\n\t\t\t\t\t<td>{{data.levelCode}}</td>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<td><button type="button" class="btn btn-small bg-success" (click)=editclauseonSubmit(data)>Edit</button></td>\r\n\t\t\t\r\n                   \r\n                  </tr>\r\n                \r\n                \x3c!-- <ng-template #norecords>\r\n                  <tr><td colspan=9>No Records Found</td></tr>\r\n                </ng-template> --\x3e\r\n                </tbody>\r\n                \r\n                <ng-template #no_allData>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class="error text-center alert alert-danger" colspan="4">No record found!</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </ng-template>\r\n              </table>\r\n              <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n                <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n              </div>\r\n\r\n             \r\n            </div>\r\n  \r\n           \r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n    </div></div></div>\r\n\r\n\r\n     \r\n\x3c!----Edite Popup strat here--------\x3e\r\n<div class="modal show" *ngIf="modalPopup">\r\n  <div class="modal-dialog modal-lg">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Modifications</h4>\r\n        <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n      </div>\r\n  \x3c!-- Modal body --\x3e\r\n      <div class="modal-body">\r\n        <form [formGroup]="editeForm" id="validateFoem" >\r\n          <input type="hidden" formControlName="editeId" [(ngModel)]="editeId">\r\n          <div class="form-group col-md-3">\r\n            <label class="control-label font-weight-bold">Level Name<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'LEVEL_NAME\')" >?</span>\r\n              </label>\r\n            \r\n            <input class="form-control " formControlName="editeLevelName" type="text"  [(ngModel)]="editeLevelName">\r\n            <div class="error-box"><small class="error">Enter valid Level Name Ex.LEVELEONE </small></div>\r\n           \r\n          </div>\r\n          <div class="form-group col-md-3">\r\n            <label class="control-label font-weight-bold">Level Code<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'LEVEL_CODE\')" >?</span>\r\n              </label>\r\n            \r\n            <input class="form-control " formControlName="editeLevelCode" type="text"  [(ngModel)]="editeLevelCode">\r\n            <div class="error-box"><small class="error">Enter valid Level Code </small></div>\r\n          </div>\r\n        \r\n\r\n        </form>\r\n      </div>\r\n      \x3c!-- Modal footer --\x3e\r\n      <div class="modal-footer">\r\n\r\n        <button type="button" (click)="updateClause()" class="btn btn-primary" >Update</button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n<app-tooltip [tooltipEvent]="tooltipJson"></app-tooltip>\r\n'},"1EPs":function(t,e,r){"use strict";r.r(e),e.default='\r\n<div id="labels" class="card shadow mb-4"> \r\n    \x3c!-- .card-body test --\x3e\r\n\r\n     \r\n     \r\n    <div class="card-header"><b>Manage Banks</b></div>\r\n    <div class="card-body asd">\r\n    <div class="row">\r\n    <div class="col-md-12">\r\n        \r\n      <form [formGroup]="uploadForm" id="validateFoem">\r\n         <div class="row">\r\n        <div class="form-group col-md-4">\r\n          <label class="control-label">Bank Code<sup>*</sup></label>\r\n          <input type="text" class="form-control"  placeholder="" formControlName="bankCode">\r\n          <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter Bank Code</small></div>\r\n        </div>\r\n        <div class="form-group col-md-4">\r\n          <label class="control-label">Bank Name<sup>*</sup></label>\r\n          <input type="text" class="form-control"  placeholder="" formControlName="bankName">\r\n          <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter Bank Name</small></div>\r\n        </div>\r\n         <div class="form-group col-md-4">\r\n          <label class="control-label">IFSC Code<sup>*</sup></label>\r\n          <input type="text" onKeyPress="if(this.value.length==11) return false;" class="form-control"  placeholder="" formControlName="bankPrefixIfsc">\r\n          <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter IFSC Code</small></div>\r\n        </div>\r\n        <div class="form-group col-md-4">\r\n            <label class="control-label">Status<sup>*</sup></label>\r\n            <select class="form-control" formControlName="status">\r\n                <option value="">--Select--</option>\r\n                <option value="ACTIVE">Active</option>\r\n                <option value="INACTIVE">In-Active</option>\r\n                  </select>\r\n            <div class="error-box"><small class="error">Please select status</small></div>\r\n          </div>\r\n        </div>\r\n       <div class="text-center">\r\n        <button [disabled]="this.uploadForm.invalid" class="btn btn-primary"  (click)="formSubmit()"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Submit</button>\r\n      </div>\r\n      </form>\r\n     \r\n      <app-validation-message [message]="inputJson"></app-validation-message>   \r\n<div class="table-responsive">\r\n  <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n  <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table> \r\n      <table class="table table-bordered">\r\n        <thead>\r\n          <tr class="bg-light  text-size-small text-center">\r\n            \r\n            \r\n              <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n              </div>\r\n            </th>   \r\n            \r\n            <th>Edit</th>\r\n\r\n          </tr>\r\n      </thead>\r\n      \x3c!-- <thead class="bg-light">\r\n<tr>\r\n  <th>Bank Code</th>\r\n  <th>Bank Name</th>\r\n  <th>IFSC Code</th>\r\n  <th>Status</th>\r\n  <th>Edit</th>\r\n</tr>\r\n</thead> --\x3e\r\n<tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n\r\n      <tr *ngFor="let a of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }">\r\n<td>{{a.bankCode}}</td>\r\n<td>{{a.bankName}}</td>\r\n<td>{{a.bankPrefixIfsc}}</td>\r\n<td>{{a.status}}</td>\r\n<td><button class="btn btn-primary btn-sm" (click)="editForm(a)" data-toggle="modal" data-target="#editPopup">Edit</button></td>\r\n      </tr>\r\n    </tbody>\r\n    \r\n\r\n    <ng-template #no_allData>\r\n      <tbody>\r\n        <tr>\r\n          <td class="error text-center alert alert-danger" colspan="5">No record found!</td>\r\n        </tr>\r\n      </tbody>\r\n    </ng-template>\r\n    </table>\r\n    <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n      <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n    </div>\r\n  </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    \x3c!-- /.card-body --\x3e \r\n\r\n\r\n\r\n    <div class="modal show" *ngIf="modalPopup">\r\n    <div class="modal-dialog">\r\n      <div class="modal-content">\r\n  \r\n        \x3c!-- Modal Header --\x3e\r\n        <div class="modal-header">\r\n          <h4 class="modal-title">Edit Bank</h4>\r\n          <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n        </div>\r\n  \r\n        \x3c!-- Modal body --\x3e\r\n        <form class="modal-body" [formGroup]="EditPopupForm" id="validateFoem">\r\n            <input type="hidden" class="form-control" formControlName="bankId" [(ngModel)]="bankId">\r\n            <div class="mb-3">\r\n                <label>Bank Code</label>\r\n                <input type="text" class="form-control" formControlName="bankCode" [(ngModel)]="bankCode">\r\n                <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter Bank Code</small></div>\r\n        </div>\r\n              <label>Bank Name</label>\r\n              <div class="mb-3">           \r\n                    <input type="text" class="form-control" formControlName="bankName" [(ngModel)]="bankName">\r\n                    <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter Bank Name</small></div>\r\n                  </div>\r\n\r\n            <label>IFSC Code</label>\r\n            <div class="mb-3">           \r\n                  <input type="text" class="form-control"  formControlName="bankPrefixIfsc" [(ngModel)]="bankPrefixIfsc">\r\n                  <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter IFSC Code</small></div>\r\n                </div>\r\n\r\n          <label>Status</label>\r\n          <div class="mb-3">           \r\n                <select class="form-control" formControlName="status" [(ngModel)]="status">\r\n              <option value="ACTIVE">Active</option>\r\n              <option value="INACTIVE">InActive</option>\r\n                </select>\r\n                <div class="error-box"><small class="error">Please select status</small></div>\r\n              </div>\r\n        \r\n        </form>\r\n  \r\n        \x3c!-- Modal footer --\x3e\r\n        <div class="modal-footer">\r\n                <button  class="btn btn-primary btn-sm" (click)="formUpdate()" data-dismiss="modal"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>Update</button>\r\n        </div>\r\n  \r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div class="popup-overlay" *ngIf="modalPopup"></div>\r\n\r\n'},"1y+u":function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4">\r\n  \x3c!-- .card-body --\x3e\r\n  <div class="card-header"><b>Create/ Manage User</b></div>\r\n  <div class="card-body asd">\r\n    <div class="row">\r\n      <div class="col-md-12">\r\n\r\n\r\n        <form [formGroup]="uploadForm" id="validateFoem">\r\n          <div class="row">\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Name of the User<sup>*</sup></label>\r\n              <input type="text" class="form-control" placeholder="" formControlName="userName">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle"\r\n                    aria-hidden="true"></i>Name of the user should be at least of four character</small></div>\r\n            </div>\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Email ID<sup>*</sup></label>\r\n              <input type="email" class="form-control" placeholder="" formControlName="emailId">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  Email id required</small></div>\r\n            </div>\r\n\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Mobile No<sup>*</sup></label>\r\n              <input type="number" class="form-control" placeholder="" formControlName="mobileNo"\r\n                onKeyPress="if(this.value.length==10) return false;">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  Mobile Number required</small></div>\r\n            </div>\r\n          </div>\r\n          <div class="row">\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Designation<sup>*</sup></label>\r\n              <input type="text" class="form-control" placeholder="" formControlName="designation">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  Designation required</small></div>\r\n            </div>\r\n\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Login Id<sup>*</sup></label>\r\n              <input type="text" class="form-control" placeholder="" formControlName="loginId">\r\n              <div class="error-box"><small class="error"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  loginid required</small></div>\r\n            </div>\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">User Type<sup>*</sup></label>\r\n              <select class="form-control" formControlName="userType">\r\n                <option value="">--Select--</option>\r\n                <option *ngFor="let typeName of userType" [value]="typeName.userRole">{{typeName.userRoleKey}}</option>\r\n              </select>\r\n              <div class="error-box"><small class="error">User Type Required</small></div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n          <div class="row">\r\n\r\n\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Department<sup>*</sup></label>\r\n              <select class="form-control" formControlName="department">\r\n                <option value="">--Select--</option>\r\n                <option *ngFor="let typeName of department" [value]="typeName.userDept">{{typeName.userDeptKey}}\r\n                </option>\r\n\r\n              </select>\r\n              <div class="error-box"><small class="error"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  loginid required</small></div>\r\n            </div>\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Team<sup>*</sup></label>\r\n              <select class="form-control" formControlName="team">\r\n                <option value="">--Select--</option>\r\n                <option *ngFor="let typeName of team" [value]="typeName.userGroup">{{typeName.userGroupKey}}</option>\r\n              </select>\r\n              <div class="error-box"><small class="error">Name at least four character</small></div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Profile Image<sup>*</sup> <span class="tooltip-open">?</span></label>\r\n\r\n              \x3c!-- <input type="hidden" [(ngModel)]="photoUid" formControlName="photoUid"> --\x3e\r\n\r\n              <input type="hidden" [(ngModel)]="outputValue.photoImageId" formControlName="photoId">\r\n\r\n              <app-file-upload (myEvent)="setValue($event)" *ngIf="showThisFile"\r\n                [parm]="{fileId:\'photoImageId\',docId:docId1,show:false,fileType:[\'jpeg\',\'jpg\',\'png\']}">\r\n              </app-file-upload>\r\n\r\n              <div class="error-box"><small class="error">Please upload Profile Image </small></div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n\r\n          <div class="text-center">\r\n\r\n            <button [disabled]="this.uploadForm.invalid" class="btn btn-primary" (click)="formSubmit()"><i\r\n                class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Create User</button>\r\n\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </form>\r\n        <app-validation-message [message]="inputJson"></app-validation-message>\r\n        <hr>\r\n        <br>\r\n        <div class="table-responsive">\r\n\r\n          <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}\r\n          </div>\r\n          <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)">\r\n          </app-filter-table>\r\n          <table class=" mt-5 mb-0 table table-bordered">\r\n\r\n            <thead>\r\n              <tr class="bg-light  text-size-small text-center">\r\n                <th>Sr No.</th>\r\n                <th>Photo</th>\r\n                <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                    <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}"\r\n                      (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i\r\n                        class="fas fa-arrow-up"></i></a>\r\n                    <a href="javascript:void(0)"\r\n                      [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}"\r\n                      (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i\r\n                        class="fas fa-arrow-down"></i></a>\r\n                  </div>\r\n                </th>\r\n\r\n                <th colspan="2">Edit | Manage Roles</th>\r\n\r\n              </tr>\r\n            </thead>\r\n            \x3c!-- <thead class="bg-light">\r\n              <tr>\r\n                <th>Sr No.</th>\r\n                <th>Photo</th>\r\n                <th>Name</th>\r\n                <th>Email Id</th>\r\n                <th>Mobile No</th>\r\n                <th>Designation</th>\r\n                <th>Department</th>\r\n                <th>Role</th>\r\n                <th>Team</th>\r\n                <th>Status</th>\r\n                <th  colspan="2">Edit | Manage Roles</th> \r\n              </tr>\r\n\r\n            </thead> --\x3e\r\n            <tbody *ngIf="filterDataArray?.length > 0; else no_allFormData">\r\n              <tr\r\n                *ngFor="let user of filterDataArray | paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }; let ip = index">\r\n                <td>\r\n                  {{((currentPageNo-1)*10)+(ip+1) }}\r\n                </td>\r\n                <td>\r\n                  <img src="{{fileDownlod}}{{user.photoUid}}" height="114px" width="99px" alt="user Image"\r\n                    class="mt-4" />\r\n                </td>\r\n                <td>{{user.userName}}</td>\r\n                <td>{{user.emailId}}</td>\r\n                <td>{{user.mobileNo}}</td>\r\n                <td>{{user.designation}}</td>\r\n                <td>{{user.departmentVal}}</td>\r\n                <td>{{user.userTypeVal}}</td>\r\n                <td>{{user.teamVal}}</td>\r\n                <td>{{user.status}}</td>\r\n                <td>\r\n                  \x3c!-- <button class="btn btn-primary" (click)="editForm(user)" data-toggle="modal"\r\n                    data-target="#editPopup">Edit</button> --\x3e\r\n\r\n\r\n                  <u>\r\n                    <a href="javascript:void(0);" (click)="editForm(user)">Edit</a>\r\n                  </u>\r\n\r\n                  |\r\n\r\n                  <u>\r\n                    \x3c!-- <a href="javascript:void(0);" (click)="manageRoles(user)">Manage Roles</a> --\x3e\r\n                    <a href="javascript:void(0);" (click)="multipleRoleAssignment(user)">Manage Roles</a>\r\n\r\n                  </u>\r\n                  \x3c!-- <button class="btn btn-primary" (click)="manageRoles(user)" data-toggle="modal"\r\n                    data-target="#addRolesPopUp">Manage Roles</button> --\x3e\r\n\r\n\r\n                </td>\r\n                \x3c!-- <td><input type="button" value="Delete" (click)="deleteDate(user.userId)"></td> --\x3e\r\n\r\n              </tr>\r\n            </tbody>\r\n            <ng-template #no_allFormData>\r\n              <tbody>\r\n                <tr>\r\n                  <td class="error text-center alert alert-danger" colspan="10">No record found!</td>\r\n                </tr>\r\n              </tbody>\r\n            </ng-template>\r\n          </table>\r\n\r\n\r\n          <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n            <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\x3c!-- /.card-body --\x3e\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class="modal show" *ngIf="modalPopup">\r\n  <div class="modal-dialog modal-lg">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Edit Form</h4>\r\n        <button type="button" class="close" (click)="closePopup()">&times;</button>\r\n      </div>\r\n\r\n      \x3c!-- Modal body --\x3e\r\n      <form class="modal-body" id="validateFoem" [formGroup]="EditPopupForm">\r\n        <input type="hidden" class="form-control" formControlName="userId" [(ngModel)]="edituserId">\r\n        <div class="row">\r\n          <div class="col-md-6 mb-3">\r\n            <label>User Name</label>\r\n            <input type="text" class="form-control" formControlName="userName" [(ngModel)]="edituserName">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                User Name at least of four character</small></div>\r\n          </div>\r\n          <div class="col-md-6 mb-3">\r\n            <label>Email-Id</label>\r\n            <input type="email" class="form-control" formControlName="emailId" [(ngModel)]="editemailId">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                Email id required</small></div>\r\n\r\n          </div>\r\n          <div class="col-md-6 mb-3">\r\n            <label>Login Id</label>\r\n            <input type="email" class="form-control" formControlName="loginId" [(ngModel)]="editloginId" readonly>\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                Email id required</small></div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class="row">\r\n          <div class="col-md-6 mb-3">\r\n            <label>Mobile No</label>\r\n            <input type="number" class="form-control" formControlName="mobileNo" [(ngModel)]="editmobileNo"\r\n              onKeyPress="if(this.value.length==10) return false;">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                Mobile Number required</small></div>\r\n\r\n          </div>\r\n          <div class="col-md-6 mb-3">\r\n            <label>Designation</label>\r\n            <input type="text" class="form-control" formControlName="designation" [(ngModel)]="editdesignation">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                Designation required</small></div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class="row">\r\n          \x3c!-- <div class="col-md-6 mb-3"><label class="control-label">User Role<sup>*</sup></label>\r\n            <select class="form-control" formControlName="userType" [(ngModel)]="edituserType">\r\n              <option value="">--Select--</option>\r\n              <option *ngFor="let typeName of userType" [value]="typeName.userRole">{{typeName.userRoleKey}}</option>\r\n            </select></div>\r\n          <div class="col-md-6 mb-3"> <label class="control-label">Department<sup>*</sup></label>\r\n            <select class="form-control" formControlName="department" [(ngModel)]="editdepartment">\r\n              <option value="">--Select--</option>\r\n              <option *ngFor="let typeName of department" [value]="typeName.userDept">{{typeName.userDeptKey}}</option>\r\n            </select></div> --\x3e\r\n        </div>\r\n        <div class="row">\r\n          \x3c!-- <div class="col-md-6 mb-3"><label class="control-label">Team<sup>*</sup></label>\r\n\r\n            <select class="form-control" formControlName="team" [(ngModel)]="editteam">\r\n              <option value="">--Select--</option>\r\n              <option *ngFor="let typeName of team" [value]="typeName.userGroup">{{typeName.userGroupKey}}</option>\r\n            </select></div> --\x3e\r\n          <div class="col-md-6 mb-3"> <label class="control-label">Status<sup>*</sup></label>\r\n            <select class="form-control" formControlName="status" [(ngModel)]="editstatus">\r\n              <option value="">--Select--</option>\r\n              <option value="ACTIVE">Active</option>\r\n              <option value="INACTIVE">In-Active</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class="row">\r\n          <div class="col-md-6 mb-3">\r\n\r\n            <label class="control-label">Profile Image<sup>*</sup> <span class="tooltip-open">?</span></label>\r\n\r\n            <input type="hidden" [(ngModel)]="photoUid" formControlName="photoUid">\r\n\r\n            <input type="hidden" [(ngModel)]="outputValue.photoId" formControlName="photoId">\r\n\r\n            <app-file-upload (myEvent)="setValue($event)"\r\n              [parm]="{fileId:\'photoId\',docId:docId2,show:false,close:true,fileType:[\'jpeg\',\'jpg\',\'png\']}">\r\n            </app-file-upload>\r\n\r\n            <div class="error-box"><small class="error">Please upload Profile Image </small></div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        \x3c!-- Modal footer --\x3e\r\n        <div class="modal-footer">\r\n\r\n          <button [disabled]="this.EditPopupForm.invalid" class="btn btn-success" (click)="formUpdate()"\r\n            data-dismiss="modal"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>\r\n            Update</button>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class="modal show" *ngIf="addRolesPopUp">\r\n  <div class="modal-dialog modal-lg">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Manage Roles</h4>\r\n        <button type="button" class="close" (click)="closePopup()">&times;</button>\r\n      </div>\r\n      <form class="modal-body" id="validateFoem" [formGroup]="updateRoles">\r\n        <input type="hidden" class="form-control" formControlName="userId" [(ngModel)]="mr_edituserId">\r\n        <div *ngIf="dynamicInfoForm.length > 0">\r\n          <div formArrayName="userRoleListAr" *ngFor="let iterate of dynamicInfoForm; let i=index">\r\n            <div [formGroupName]="i">\r\n              <input type="checkbox" formControlName="userRoleList" (click)="clickToCheck($event,iterate)"\r\n                [checked]="iterate.isChecked">{{iterate.userRoleKey}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class="modal-footer">\r\n          <button [disabled]="invalidForm" class="btn btn-success" (click)="saveMultipleRoles()" data-dismiss="modal">\r\n            <i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>\r\n            Update Role</button>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class="modal show" *ngIf="popupEnableSystem">\r\n  <div class="modal-dialog modal-lg">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Manage Roles</h4>\r\n        <button type="button" class="close" (click)="closePopupManageRole()">&times;</button>\r\n      </div>\r\n\r\n\r\n      <div class="row">\r\n        <div class="col-md-12">\r\n          <div class="table-responsive">\r\n            <table class="table table-bordered" *ngIf="userAddedList?.length > 0">\r\n              <thead class="bg-light">\r\n                <tr>\r\n                  <td>S.No.</td>\r\n                  <td>Department</td>\r\n                  <td>Role</td>\r\n                  <td>Team</td>\r\n                  <td>Date From</td>\r\n                  <td>Date To</td>\r\n                  <td>Status</td>\r\n                  <td>Action</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor="let a of userAddedList, let i= index">\r\n                  <td>{{i+1}}</td>\r\n                  <td>{{getNameOfDepartment(a.department)}}</td>\r\n                  <td>{{getNameOfRoles(a.roleCode)}}</td>\r\n                  <td>{{getNameOfTeamUser(a.team)}}</td>\r\n                  <td>{{a.fromDateStr}}</td>\r\n                  <td>\r\n                    <ng-container *ngIf="a.toDateStr !=\'Date Not Found\'; else _nodDate">\r\n                      {{a.toDateStr}}\r\n                    </ng-container>\r\n                    <ng-template #_nodDate>\r\n                      --\r\n                    </ng-template>\r\n                  </td>\r\n                  <td>{{a.status}}</td>\r\n                  <td>\r\n                    <ng-container *ngIf="(a.status==\'ACTIVE\' && i > 0); else _inactive">\r\n                      <input type="button" value="INACTIVE" class="btn btn-danger"\r\n                        (click)="disableArrayFromList(i,\'INACTIVE\',a.id)">\r\n                    </ng-container>\r\n\r\n                    <ng-template #_inactive>\r\n                      --\r\n                    </ng-template>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n      <form class="modal-body" id="validateFoem" [formGroup]="updateMultipleRoles">\r\n        <input type="hidden" formControlName="userId" [(ngModel)]="user_edituserId">\r\n        <div class="row">\r\n          <div class="form-group col-md-4">\r\n            <label class="control-label">Department<sup>*</sup></label>\r\n            <select class="form-control" formControlName="department">\r\n              <option value="">--Select--</option>\r\n              <option *ngFor="let typeName of department" [value]="typeName.userDept">{{typeName.userDeptKey}}</option>\r\n            </select>\r\n\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle"\r\n                  aria-hidden="true"></i>Please select department</small></div>\r\n          </div>\r\n\r\n          <div class="form-group col-md-4">\r\n            <label class="control-label">Roles<sup>*</sup></label>\r\n            <select class="form-control" formControlName="userType">\r\n              <option value="">--Select--</option>\r\n              <option *ngFor="let typeName of userType" [value]="typeName.userRole">{{typeName.userRoleKey}}</option>\r\n            </select>\r\n\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle"\r\n                  aria-hidden="true"></i>Please select role</small></div>\r\n          </div>\r\n\r\n\r\n          <div class="form-group col-md-4">\r\n            <label class="control-label">Team<sup>*</sup></label>\r\n            <select class="form-control" formControlName="team">\r\n              <option value="">--Select--</option>\r\n              <option *ngFor="let typeName of team" [value]="typeName.userGroup">{{typeName.userGroupKey}}</option>\r\n            </select>\r\n\r\n            <div class="error-box"><small class="error">\r\n                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>Please select Team</small></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class="modal-footer" *ngIf="submitButtonClick">\r\n          <button [disabled]="updateMultipleRoles.invalid" class="btn btn-success" (click)="verifyValidation()">Update\r\n            Role</button>\r\n        </div>\r\n        <div class="row" *ngIf="showErrorMessage">\r\n          <div class="col-md-12 text-center">\r\n            <small class="red"> <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>User have already listed\r\n              With Department, Role and Team.</small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class="modal-footer" *ngIf="!submitButtonClick">\r\n          <button [disabled]="true" class="btn btn-success">\r\n            <i class="fa fa-spinner fa-spin text-white" aria-hidden="true"></i>\r\n            Update Role</button>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\x3c!-- <div class="popup-overlay" *ngIf="modalPopup"></div>\r\n<div class="popup-overlay" *ngIf="addRolesPopUp"></div> --\x3e\r\n<app-loader *ngIf="loadingSpinner"></app-loader>'},"22JH":function(t,e,r){"use strict";r.r(e),e.default=""},"358v":function(t,e,r){"use strict";r.r(e),e.default=""},"3n8O":function(t,e,r){"use strict";r.r(e),e.default=""},"3rbT":function(t,e,r){"use strict";r.r(e),e.default=""},"4ZmG":function(t,e,r){"use strict";r.r(e),e.default='\r\n    <div id="labels" class="card shadow mb-4"> \r\n      \x3c!-- .card-body --\x3e\r\n      <div class="card-header"><b>Manage Role</b></div>\r\n      <div class="card-body asd">\r\n      <div class="row">\r\n      <div class="col-md-12">\r\n\r\n          <form [formGroup]="uploadForm" id="validateFoem">\r\n              <div class="row">\r\n                <div class="form-group col-md-6">\r\n                  <label class="control-label">Role Name<sup>*</sup></label>\r\n                  <input type="text" class="form-control"  placeholder="" formControlName="bankName">\r\n                  <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please type your role</small></div>\r\n                </div>\r\n        </div>\r\n        <div class="text-center">\r\n          <button [disabled]="this.uploadForm.invalid" class="btn btn-primary"  (click)="formSubmit()"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>  Create Role</button>\r\n        </div>\r\n      \r\n        </form>\r\n        <app-validation-message [message]="inputJson"></app-validation-message>\r\n\r\n    <div class="table-responsive">\r\n      <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n      <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n  <table class=" mt-5 table table-bordered">\r\n    <thead>\r\n      <tr class="bg-light  text-size-small text-center">\r\n         <th>S.No.</th>\r\n          <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n            <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n            <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n          </div>\r\n        </th>   \r\n        \r\n        <th>Action</th>\r\n\r\n\r\n\r\n      </tr>\r\n      </thead>\r\n      \x3c!-- <thead class="bg-light">\r\n  <tr>\r\n    <th width="5%">S.No.</th>\r\n    <th>Role Name</th>\r\n    <th width="20%">Action</th>\r\n  </tr>\r\n  </thead> --\x3e\r\n  <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n\r\n  <tr *ngFor="let role of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }, let i= index" >\r\n    <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n  <td>{{role.bankName}}</td>\r\n  <td>\r\n    <input type="button" class="btn btn-small btn-primary" value="Update" (click)="editForm(role)"> \r\n    <input type="button" class="btn btn-small btn-primary" value="Delete" (click)="deleteRole(i)">\r\n  </td>\r\n  </tr>\r\n</tbody>\r\n<ng-template #no_allData>\r\n  <tbody>\r\n    <tr>\r\n      <td class="error text-center alert alert-danger" colspan="3">No record found!</td>\r\n    </tr>\r\n  </tbody>\r\n</ng-template>\r\n      </table>\r\n      \r\n      <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n        <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n      </div>\r\n    </div>\r\n      </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      \x3c!-- /.card-body --\x3e \r\n  \r\n      <div class="modal show" *ngIf="modalPopup">\r\n        <div class="modal-dialog">\r\n          <div class="modal-content">\r\n      \r\n            \x3c!-- Modal Header --\x3e\r\n            <div class="modal-header">\r\n              <h4 class="modal-title">Edit Form</h4>\r\n              <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n            </div>\r\n      \r\n            \x3c!-- Modal body --\x3e\r\n            <form class="modal-body" [formGroup]="EditPopupForm">\r\n                <div class="mb-3">\r\n                    <label>Role Name</label>\r\n                    <input type="text" class="form-control" formControlName="bankName" [(ngModel)]="bankName">\r\n                  </div>\r\n                \r\n            </form>\r\n\r\n              \x3c!-- Modal footer --\x3e\r\n              <div class="modal-footer">\r\n                <input type="button" [disabled]="this.uploadForm.invalid" value="Update" class="btn btn-success" >\r\n             </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      <div class="popup-overlay" *ngIf="modalPopup"></div>\r\n'},"6Nos":function(t,e,r){"use strict";r.r(e),e.default='<div class="table-responsive mt-3">\r\n  <table class="mb-0 table table-bordered">\r\n    <thead class="bg-light">\r\n      <tr>\r\n        <th>SOP\'s Code</th>\r\n        <th>SOP\'s Description</th>\r\n        <th>SOP\'s Type</th>\r\n        <th>Department</th>\r\n        <th colspan="2">Mapped Enquiry</th>\r\n        \x3c!-- <th>Action</th> --\x3e\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor="let enq of allData">\r\n        <td>{{enq.code}}</td>\r\n        <td>{{enq.description}}</td>\r\n        <td>{{enq.type}}</td>\r\n        <td>{{enq?.department}}</td>\r\n        <td>\r\n          <table border="1">\r\n            <tr *ngFor="let fieldModel of enq?.fieldMasterModel; let ip = index">\r\n              <td>{{ fieldModel?.code }} - {{ fieldModel?.lebel }}</td>\r\n              <td>\r\n                <input type="button" (click)="deleteEnquiriesMapping(enq.enqId, fieldModel?.id)" value="Delete" class="btn btn-warning">\r\n              </td>\r\n            </tr>\r\n          </table> \r\n            \r\n          \r\n        </td>\r\n        <td>\r\n        </td>\r\n      </tr>\r\n\r\n    </tbody>\r\n  </table>\r\n\r\n</div>\r\n\r\n\r\n\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n'},"6r5/":function(t,e,r){"use strict";r.r(e),e.default=""},"9UR1":function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4"> \r\n    \x3c!-- .card-body --\x3e\r\n    <div class="card-header"><b>Master {{nameComponent}}</b></div>\r\n    <div class="card-body asd">\r\n    <div class="row">\r\n        <div class="form-group col-md-6">\r\n            <label class="control-label">Upload Data<sup>*</sup></label>\r\n         <input type="file" class="form-control" #uploadFile (change)="updalodExl($event)">\r\n         <div class="mt-4 text-right">\r\n         <input type="button" value="Upload Excel" class="btn btn-primary" (click)="postExl()">\r\n        </div>\r\n        </div>\r\n          <div class="form-group col-md-6">\r\n            <label class="control-label">Download Data</label>\r\n            <a href="{{exlDownloadUrl}}" target="_blank" download class="btn btn-primary">Download Excel</a>\r\n          </div>\r\n    \r\n</div>\r\n</div>\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n<app-loader *ngIf="loadingSpinner"></app-loader>'},"9YCV":function(t,e,r){"use strict";r.r(e),e.default=""},"9ath":function(t,e,r){"use strict";r.r(e),e.default=""},"9o7g":function(t,e,r){"use strict";r.r(e),e.default=""},D20y:function(t,e,r){"use strict";r.r(e),e.default=""},De02:function(t,e,r){"use strict";r.r(e),e.default='<div class="row mb-4 mt-4">\r\n\r\n  <div class="container-fluid">\r\n  <div class="col-md-12 text-center mb-2">\r\n      <h2 class="text-dark">Department Listing</h2>\r\n    </div>\r\n    <div class="col-md-12 mb-2">\r\n    <form [formGroup]="searchForm" (ngSubmit)="searchFormSubmit()" id="validateFoem" >\r\n\r\n      <div class="row mb-4">\r\n        <div class="col-md-12">\r\n          <div class="card shadow"> \r\n    \r\n            <div class="card-body">\r\n              <div class="col-md-12">  \r\n                      \r\n                <div class="form-group col-md-4">\r\n                  <label class="control-label font-weight-bold">Department Name<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event,\'DESIGNATION_NAME\')" >?</span>\r\n                    </label>           \r\n                  <div class="input-group mt-2">\r\n                    <select class="form-control" formControlName="designationName"  >\r\n                      <option value="">--Select--</option>\r\n                      <option *ngFor="let dataObj of userDepartment" [value]="dataObj.userDept">{{getNameOfDepartment(dataObj.userDept)}}</option>                   \r\n                      </select>            \r\n                  </div>\r\n                </div>\r\n                 <div class="form-group col-md-4">\r\n                  <label class="control-label font-weight-bold">Department Description<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'DESIGNATION_CODE\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                <input class="form-control " type="text" formControlName="designationCode" value="search">\r\n                  </div>\r\n                </div>\r\n               \r\n\r\n                <div class="form-group col-md-4">\r\n                  <label class="control-label font-weight-bold">Parent Department \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'DESIGNATION_CODE\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    <select class="form-control" formControlName="primaryid"  >\r\n                      <option value="">--Select--</option>\r\n                      <option *ngFor="let dataObj of modifiedArr" [value]="dataObj.id">{{getNameOfDepartment(dataObj.departmentName)}} - {{getNameOfRoles(dataObj.headUserRole)}}</option>                   \r\n                      </select>\r\n\r\n             \r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n                \r\n                <div class="form-group col-md-4">\r\n                  <label class="control-label font-weight-bold">Role<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'DESIGNATION_CODE\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    <select class="form-control" formControlName="roleid"  >\r\n                      <option value="">--Select--</option>\r\n                      <option *ngFor="let typeName of userRoleArr" [value]="typeName.user_role">{{getNameOfRoles(typeName.user_role)}}</option>                   \r\n                      </select>\r\n\r\n             \r\n                  </div>\r\n                </div>\r\n\r\n                <div class="form-group col-md-4">\r\n                  <label class="control-label font-weight-bold">Role Privilege<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'DESIGNATION_CODE\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    <select class="form-control" formControlName="roleprivilege"  >\r\n                      <option value="">--Select--</option>\r\n                      <option  value="YES">YES</option>  \r\n                      <option  value="NO">NO</option>                 \r\n                      </select>\r\n\r\n             \r\n                  </div>\r\n                </div>\r\n                                  \r\n\t\t\r\n              </div>\r\n  \r\n              <div class="form-group col-md-12  text-center">\r\n                \x3c!--<button class="btn btn-primary" [disabled]="this.detailsOfAppelForm.invalid" id="submitBtn" (click)="formSubmit()"><i\r\n                  class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>SUBMIT</button>--\x3e\r\n                 \r\n                <button type="submit" class="btn btn-primary btn-small mt-2" [disabled]="this.searchForm.invalid" >Submit</button>\r\n  \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     </form>\r\n      </div>\r\n  \r\n  <div class="mt-3">\r\n      <div class="col-md-12">\r\n      <div class="card ">\r\n        \r\n        <div class="card-body">\r\n          <div class="row">\r\n            <div class=" col-md-12 table-responsive mb-4">\r\n              <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n              <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n              <table class="table table-bordered">\r\n                <thead>\r\n                  <tr class="bg-light  text-size-small text-center">\r\n                    <th>Sr.No.</th>\r\n                    \r\n                      <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                      </div>\r\n                    </th>   \r\n                    \r\n                    <th>Action</th>\r\n      \r\n                  </tr>\r\n              </thead>\r\n                \x3c!-- <thead>\r\n                  <tr class="text-center bg-light  text-size-small">\r\n                    <td>Sr.No.</td>\r\n                    \r\n                    <td>Department Name</td>\r\n                    <td>Department Description</td>\r\n                    <td>Role</td>\r\n                    <td>Role Privilege</td>\r\n                    <td>Action</td>                    \r\n                   \r\n                  </tr>\r\n                </thead> --\x3e\r\n                <tbody  *ngIf="filterDataArray?.length > 0; else no_allData">\r\n                 \r\n                  <tr class="text-center" *ngFor="let dataObj of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }; let i= index" >\r\n                      <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n                      \x3c!-- <td>{{i+1}}</td> --\x3e\r\n\t\t\t\t\t<td>{{getNameOfDepartment(dataObj.departmentName)}}</td>\r\n\t\t\t\t\t<td>{{dataObj.departmentDescription}}</td>\r\n          <td>{{getNameOfRoles(dataObj.headUserRole)}}</td>\r\n          <td>{{dataObj.rolePrivilege}}</td>\r\n\t\t\t\t\t<td>\r\n            \r\n            <button type="button" class="btn btn-small bg-success" (click)=editclauseonSubmit(dataObj)>Edit</button>\r\n\r\n\r\n          </td>\r\n\t\t\t\r\n                   \r\n                  </tr>\r\n                \r\n           \r\n                </tbody>\r\n                \r\n                <ng-template #no_allData>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class="error text-center alert alert-danger" colspan="6">No record found!</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </ng-template>\r\n              </table>\r\n             \r\n              <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n                <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n              </div>\r\n\r\n             \r\n            </div>\r\n  \r\n           \r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n    </div></div></div>\r\n\r\n\r\n\x3c!----Edite Popup strat here--------\x3e\r\n<div class="modal show" *ngIf="modalPopup">\r\n  <div class="modal-dialog modal-lg">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Modification</h4>\r\n        <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n      </div>\r\n\r\n      \x3c!-- Modal body --\x3e\r\n      <div class="modal-body">\r\n        <form [formGroup]="editclause1" id="xyz" >\r\n          <input type="hidden" formControlName="designationId" [(ngModel)]="id">\r\n          <div class="form-group col-md-3">\r\n            <label class="control-label font-weight-bold">Department Name<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event,\'DESIGNATION_NAME\')" >?</span>\r\n                    </label>\r\n            <div class="input-group mt-2">\r\n            <input class="form-control " formControlName="updateDepartmentName" type="text"  [(ngModel)]="designationName">\r\n            </div>\r\n           \r\n          </div>\r\n          <div class="form-group col-md-3">\r\n            <label class="control-label font-weight-bold">Department Description<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'DESIGNATION_CODE\')" >?</span>\r\n              </label>\r\n            <div class="input-group mt-2">\r\n            <input class="form-control " formControlName="updateDepartmentDescription" type="text"  [(ngModel)]="designationCode">\r\n            </div>\r\n          </div>\r\n        \r\n\r\n\r\n\r\n      \r\n\r\n          <div class="form-group col-md-3">\r\n            <label class="control-label font-weight-bold">Parent Department <sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'DESIGNATION_CODE\')" >?</span>\r\n              </label>\r\n            <div class="input-group mt-2">\r\n\r\n\r\n\r\n              <select class="form-control" formControlName="Updateprimaryid" [(ngModel)]="primaryid"  >\r\n                <option value="">--Select--</option>\r\n                <option *ngFor="let dataObj of modifiedArr" [value]="dataObj.id">{{getNameOfDepartment(dataObj.departmentName)}} - {{getNameOfRoles(dataObj.headUserRole)}}</option>                 \r\n                </select>\r\n\r\n         \r\n            </div>\r\n          </div>\r\n\r\n        \r\n\r\n\r\n          <div class="form-group col-md-3">\r\n            <label class="control-label font-weight-bold">Role <sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'DESIGNATION_CODE\')" >?</span>\r\n              </label>\r\n            <div class="input-group mt-2">\r\n\r\n\r\n              <select class="form-control" formControlName="updaterole"  [(ngModel)]="role"  >\r\n                <option value="">--Select--</option>\r\n                <option *ngFor="let typeName of userRoleArr" [value]="typeName.user_role">{{getNameOfRoles(typeName.user_role)}}</option>                   \r\n                </select>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class="form-group col-md-3">\r\n            <label class="control-label font-weight-bold">Role Privilege <sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'DESIGNATION_CODE\')" >?</span>\r\n              </label>\r\n            <div class="input-group mt-2">\r\n\r\n\r\n              <select class="form-control" formControlName="rolePreviledge"  [(ngModel)]="roleprivilege"  >\r\n                <option value="">--Select--</option>\r\n                <option  value="YES">YES</option>  \r\n                <option  value="NO">NO</option>                  \r\n                </select>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </form>\r\n      </div>\r\n      \x3c!-- Modal footer --\x3e\r\n      <div class="modal-footer">\r\n\r\n        <button type="button" (click)="updateClause()" class="btn btn-primary">Update</button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n<app-tooltip [tooltipEvent]="tooltipJson"></app-tooltip>\r\n\x3c!-----Edite Popup end here-----------------\x3e'},HBOp:function(t,e,r){"use strict";r.r(e),e.default='\r\n    <div id="labels" class="card shadow mb-4"> \r\n        \x3c!-- .card-body --\x3e\r\n        <div class="card-header"><b>Manage Zones</b></div>\r\n        <div class="card-body asd">\r\n        <div class="row">\r\n        <div class="col-md-12">\r\n\r\n            <form [formGroup]="uploadForm" id="validateFoem">\r\n                <div class="row">\r\n            <div class="form-group col-md-6">\r\n              <label class="control-label">Zone Name<sup>*</sup></label>\r\n              <input type="text" class="form-control"  placeholder="" formControlName="zoneName">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> ZoneName at least of four character</small></div>\r\n            </div>\r\n    \r\n            <div class="form-group col-md-6">\r\n              <label class="control-label">Office Address<sup>*</sup></label>\r\n              <input type="text" class="form-control"  placeholder="" formControlName="officeAddress">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> officeAddress at least of four character</small></div>\r\n            </div>\r\n          </div>\r\n          <div class="text-center">\r\n            <button [disabled]="this.uploadForm.invalid" class="btn btn-primary"  (click)="formSubmit()"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>  Create Zone</button>\r\n          </div>\r\n        \r\n          </form>\r\n          <app-validation-message [message]="inputJson"></app-validation-message>\r\n\r\n      <div class="table-responsive">\r\n        <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n        <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n    <table class=" mt-5 table table-bordered">\r\n      <thead>\r\n        <tr class="bg-light  text-size-small text-center">\r\n            \r\n            <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n              <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n              <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n            </div>\r\n          </th>   \r\n          \r\n          <th>Edit</th>\r\n  \r\n  \r\n  \r\n        </tr>\r\n        </thead>\r\n        \x3c!-- <thead class="bg-light">\r\n    <tr>\r\n      <th>Zone Office</th>\r\n      <th>Office Address</th>\r\n      <th>Status</th>\r\n      <th>Edit</th> \r\n    </tr>\r\n    </thead> --\x3e\r\n    <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n\r\n    <tr *ngFor="let zone of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }">\r\n    <td>{{zone.zoneName}}</td>\r\n    <td>{{zone.officeAddress}}</td>\r\n    <td>{{zone.status}}</td>\r\n      <td><input type="button" class="btn btn-success" value="Edit" (click)="editForm(zone)" data-toggle="modal" data-target="#editPopup"></td>\r\n      \x3c!-- <td><input type="button" value="Delete" (click)="deleteDate(zone.id)"></td> --\x3e\r\n    </tr>\r\n  </tbody>\r\n  <ng-template #no_allData>\r\n    <tbody>\r\n      <tr>\r\n        <td class="error text-center alert alert-danger" colspan="3">No record found!</td>\r\n      </tr>\r\n    </tbody>\r\n  </ng-template>\r\n        </table>\r\n        <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n          <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n        </div>\r\n      </div>\r\n        </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        \x3c!-- /.card-body --\x3e \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <div class="modal" id="editPopup">\r\n      <div class="modal-dialog">\r\n        <div class="modal-content">\r\n    \r\n          \x3c!-- Modal Header --\x3e\r\n          <div class="modal-header">\r\n            <h4 class="modal-title">Edit Form</h4>\r\n            <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          </div>\r\n    \r\n          \x3c!-- Modal body --\x3e\r\n          <form class="modal-body" [formGroup]="EditPopupForm">\r\n              <input type="hidden" class="form-control" formControlName="zoneId" [(ngModel)]="editzoneId">\r\n              <div class="mb-3">\r\n                  <label>Zone Name</label>\r\n                  <input type="text" class="form-control" formControlName="zoneName" [(ngModel)]="editzoneName">\r\n                </div>\r\n                \r\n              <label>Office Adderss</label>\r\n              <div class="mb-3">           \r\n                    <input type="text" class="form-control"  formControlName="officeAddress" [(ngModel)]="editofficeAdderss">\r\n         \r\n            </div>\r\n        \r\n             <div class="mb-3">\r\n                <label class="control-label">Status<sup>*</sup></label>\r\n                <select class="form-control" formControlName="status" [(ngModel)]="editstatus">\r\n                    <option value="">--Select--</option>\r\n                    <option value="ACTIVE">Active</option>\r\n                    <option value="INACTIVE">In-Active</option>\r\n               </select>\r\n              \r\n              </div>\r\n      \r\n      \r\n    \r\n          </form>\r\n    \r\n    \r\n    \r\n            \x3c!-- Modal footer --\x3e\r\n            <div class="modal-footer">\r\n              <input type="button" [disabled]="this.uploadForm.invalid" value="Update" class="btn btn-success" (click)="formUpdate()" data-dismiss="modal">\r\n           </div>\r\n    \r\n    </div>\r\n    </div>\r\n    </div>\r\n    \r\n'},HQWE:function(t,e,r){"use strict";r.r(e),e.default=""},HTaT:function(t,e,r){"use strict";r.r(e),e.default='\r\n<div id="labels" class="card shadow mb-4"> \r\n    \x3c!-- .card-body --\x3e\r\n    <div class="card-header"><b>Manage Offices</b></div>\r\n    <div class="card-body asd">\r\n    <div class="row">\r\n    <div class="col-md-12">\r\n       \r\n      <form [formGroup]="uploadForm" id="validateFoem">\r\n          <div class="row">\r\n        <div class="form-group col-md-4">\r\n          <label class="control-label">Office Name<sup>*</sup></label>\r\n          <input type="text" class="form-control" id="lbl1" placeholder="" formControlName="officeName">\r\n          <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter Office Name</small></div>\r\n        </div>\r\n        <div class="form-group col-md-4">\r\n          <label class="control-label">Office Address<sup>*</sup></label>\r\n          <input type="text" class="form-control" id="lbl1" placeholder="" formControlName="officeAddress">\r\n          <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter Office Address</small></div>\r\n        </div>\r\n        <div class="form-group col-md-4">\r\n            <label class="control-label">Status<sup>*</sup></label>\r\n          <div class="mb-3">           \r\n              <select class="form-control" formControlName="status">\r\n                  <option value="">--Select--</option>\r\n              <option value="ACTIVE">Active</option>\r\n              <option value="INACTIVE">InActive</option>\r\n              </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n       <div class="text-center">\r\n            <label class="control-label"></label>\r\n        <button   [disabled]="this.uploadForm.invalid" class="btn btn-primary"  (click)="formSubmit()"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Submit</button>\r\n      </div>\r\n      </form>\r\n\r\n      <div class="table-responsive">\r\n        <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n        <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n      <table class=" mt-5 mb-0 table table-bordered">\r\n        <thead>\r\n          <tr class="bg-light  text-size-small text-center">\r\n             \r\n              <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n              </div>\r\n            </th>   \r\n            \r\n            <th>Edit</th>\r\n\r\n\r\n    \r\n          </tr>\r\n          </thead>\r\n       \x3c!-- <thead class="bg-light">\r\n      <tr>\r\n        <th>Office Name</th>\r\n        <th>Office Address</th>\r\n        <th>Status</th>\r\n        <th>Edit</th>\r\n      </tr>\r\n      </thead> --\x3e\r\n      <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n\r\n            <tr *ngFor="let a of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }">\r\n      <td>{{a.officeName}}</td>\r\n      <td>{{a.officeAddress}}</td>\r\n      <td>{{a.status}}</td>\r\n      <td><input type="button" class="btn btn-success" value="Edit" (click)="editForm(a)" data-toggle="modal" data-target="#editPopup"></td>\r\n            </tr>\r\n          </tbody> \r\n          <ng-template #no_allData>\r\n            <tbody>\r\n              <tr>\r\n                <td class="error text-center alert alert-danger" colspan="4">No record found!</td>\r\n              </tr>\r\n            </tbody>\r\n          </ng-template>\r\n          </table>\r\n          <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n            <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    \x3c!-- /.card-body --\x3e \r\n\r\n\r\n  <div class="modal" id="editPopup">\r\n    <div class="modal-dialog">\r\n      <div class="modal-content">\r\n  \r\n        \x3c!-- Modal Header --\x3e\r\n        <div class="modal-header">\r\n          <h4 class="modal-title">Edit Office</h4>\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n        </div>\r\n  \r\n        \x3c!-- Modal body --\x3e\r\n        <form class="modal-body" [formGroup]="EditPopupForm">\r\n            <input type="hidden" class="form-control" formControlName="officeId" [(ngModel)]="officeId">\r\n         \r\n              <label>Bank Name</label>\r\n              <div class="mb-3">           \r\n                    <input type="text" class="form-control" formControlName="officeName" [(ngModel)]="officeName">\r\n         \r\n            </div>\r\n\r\n            <label>IFSC Code</label>\r\n            <div class="mb-3">           \r\n                  <input type="text" class="form-control"  formControlName="officeAddress" [(ngModel)]="officeAddress">\r\n       \r\n          </div>\r\n          <label>Status</label>\r\n          <div class="mb-3">           \r\n                <select class="form-control" formControlName="status" [(ngModel)]="status">\r\n              <option value="ACTIVE">Active</option>\r\n              <option value="INACTIVE">InActive</option>\r\n                </select>\r\n        </div>\r\n        </form>\r\n  \r\n        \x3c!-- Modal footer --\x3e\r\n        <div class="modal-footer">\r\n                <input type="button" value="Update" class="btn btn-success" (click)="formUpdate()" data-dismiss="modal">\r\n        </div>\r\n  \r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <app-validation-message [message]="inputJson"></app-validation-message>\r\n'},"J+AZ":function(t,e,r){"use strict";r.r(e),e.default=".userResult {\n  width: 100%;\n  clear: both;\n}"},J8Il:function(t,e,r){"use strict";r.r(e),e.default='\r\n    <div id="labels" class="card shadow mb-4"> \r\n        \x3c!-- .card-body --\x3e\r\n        <div class="card-header"><b>Manage Tooltip</b></div>\r\n        <div class="card-body asd">\r\n        <div class="row">\r\n        <div class="col-md-12">\r\n\r\n            <div class="tab_wrap">\r\n                <div class="row">\r\n                    <div class="col-md-12">\r\n                        <ul class="nav nav-tabs" role="tablist">\r\n                            \x3c!-- <li class="nav-item">\r\n                                <a class="nav-link" [class.active]="manageModule" (click)="show(2)">Create Module</a>\r\n                            </li>\r\n                            <li class="nav-item">\r\n                                <a class="nav-link" [class.active]="manageForm" (click)="show(3)">Create Form</a>\r\n                            </li>\r\n                            <li class="nav-item">\r\n                                <a class="nav-link" [class.active]="manageSection"  (click)="show(4)">Create Section</a>\r\n                            </li> --\x3e\r\n                            <li class="nav-item">\r\n                                <a class="nav-link" [class.active]="manageToolTip" (click)="show(1)">Create Tooltip</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            \r\n            \r\n            \r\n            \r\n            \r\n                <div class="tab-content pt-2 pb-2">\r\n                    <div [class.active]="manageModule" class="tab-pane">\r\n\r\n                        <form [formGroup]="manageModuleForm" id="validateFoem">\r\n                            <div class="row">\r\n                                <div class="col-md-6">\r\n                                    <label class="control-label">Module Code<sup>*</sup></label>\r\n                                    <input type="text" class="form-control" formControlName="code">\r\n                                <div class="error-box"><small class="error">Enter Valid Module Code</small></div>\r\n                                </div>\r\n                                <div class="col-md-6">\r\n                                    <label class="control-label">Module Name<sup>*</sup></label>\r\n                                    <input type="text" class="form-control" formControlName="name">\r\n                                <div class="error-box"><small class="error">Enter Valid Module Name</small></div>\r\n                                </div>\r\n                                <div class="col-md-12 text-center mt-3"><input type="button" class="btn btn-primary" value="Submit" (click)="moduleSubmit()"></div>\r\n                            </div>\r\n                        </form>\r\n                        <div class="table-responsive">\r\n                            <table class=" mt-5 mb-0 table table-bordered">\r\n                             <thead class="bg-light">\r\n                    <tr>\r\n                        <th>Module Code</th>\r\n                        <th>Module Name</th>\r\n                        \x3c!-- <th>Action</th> --\x3e\r\n\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                     <tr *ngFor="let s of moduleAllData">\r\n                        <td>{{s.code}}</td>\r\n                        <td>{{s.name}}</td>\r\n                        \x3c!-- <td><input type="button" class="btn btn-primary" value="Edit" (click)="editModule(s)"></td> --\x3e\r\n                          </tr>\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </div>\r\n                    <div [class.active]="manageForm" class="tab-pane">\r\n\r\n                        <form [formGroup]="manageFormForm" id="validateFoem">\r\n                            <div class="row">\r\n                                    <div class="col-md-4">\r\n                                        <label class="control-label">Module Name<sup>*</sup></label>\r\n                                        <select class="form-control" formControlName="entityIdFK">\r\n                                          <option value="">--Select--</option>\r\n                                          <option *ngFor="let u of moduleAllData" [value]="u.id">{{u.name}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                <div class="col-md-4">\r\n                                    <label class="control-label">Form Code<sup>*</sup></label>\r\n                                    <input type="text" class="form-control" formControlName="code">\r\n                                <div class="error-box"><small class="error">Enter Valid Form Code</small></div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <label class="control-label">Form Name<sup>*</sup></label>\r\n                                    <input type="text" class="form-control" formControlName="name">\r\n                                <div class="error-box"><small class="error">Enter Valid Form Name</small></div>\r\n                                </div>\r\n                                <div class="col-md-12 text-center mt-3"><input type="button" class="btn btn-primary" value="Submit" (click)="formSubmit()"></div>\r\n                            </div>\r\n                        </form>\r\n                        <div class="table-responsive">\r\n                            <table class=" mt-5 mb-0 table table-bordered">\r\n                             <thead class="bg-light">\r\n                    <tr>\r\n                        <th>Form Code</th>\r\n                      <th>Form Name</th>\r\n\x3c!-- <th>Action</th> --\x3e\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                     <tr *ngFor="let u of allFormData">\r\n                        <td>{{u.code}}</td>\r\n                        <td>{{u.name}}</td>\r\n                        \x3c!-- <td><input type="button" class="btn btn-primary" value="Edit" (click)="editForm(u)"></td> --\x3e\r\n                          </tr>\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </div>\r\n                    <div [class.active]="manageSection" class="tab-pane">\r\n                        <form [formGroup]="manageSectionForm" id="validateFoem">\r\n                            <div class="row">\r\n                                <div class="col-md-3">\r\n                                <label class="control-label">Module Name<sup>*</sup></label>\r\n                                <select class="form-control" #mData (change)="getFormData($event)">\r\n                                  <option value="">--Select--</option>\r\n                                  <option *ngFor="let u of moduleAllData" [value]="u.id">{{u.name}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                            <label class="control-label">Form Name<sup>*</sup></label>\r\n                            <select class="form-control" formControlName="frmSecIdFK">\r\n                              <option value="">--Select--</option>\r\n                              <option *ngFor="let u of formAllData" [value]="u.id">{{u.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                            <div class="col-md-3">\r\n                                <label class="control-label">Section Code<sup>*</sup></label>\r\n                                <input type="text" class="form-control" formControlName="code">\r\n                            <div class="error-box"><small class="error">Enter Valid Section Name</small></div>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="control-label">Section Name<sup>*</sup></label>\r\n                                <input type="text" class="form-control" formControlName="name">\r\n                            <div class="error-box"><small class="error">Enter Valid Section Name</small></div>\r\n                            </div>\r\n                                <div class="col-md-12 text-center mt-3"><input type="button" class="btn btn-primary" value="Submit" (click)="sectionSubmit()"></div>\r\n                            </div>\r\n                        </form>\r\n                        <div class="table-responsive">\r\n                            <table class=" mt-5 mb-0 table table-bordered">\r\n                             <thead class="bg-light">\r\n                    <tr>\r\n                        <th>Section Code</th>\r\n                      <th>Section Name</th>\r\n                        \x3c!-- <th>Action</th> --\x3e\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                     <tr *ngFor="let u of allSectionData">\r\n                        <td>{{u.code}}</td>\r\n                        <td>{{u.name}}</td>\r\n                        \x3c!-- <td><input type="button" class="btn btn-primary" value="Edit" (click)="editSection(u)"></td> --\x3e\r\n                          </tr>\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div [class.active]="manageToolTip" class="tab-pane">\r\n                    <form [formGroup]="tooltipForm" id="validateFoem">\r\n                        <div class="row">\r\n                \r\n                            \x3c!-- <div class="form-group col-md-4">\r\n                                <label class="control-label">Module Name<sup>*</sup></label>\r\n                                <select class="form-control" #mData (change)="getFormData($event)">\r\n                                    <option value="">--Select--</option>\r\n                                    <option *ngFor="let u of moduleAllData" [value]="u.id">{{u.name}}</option>\r\n                                  </select>\r\n                      <div class="error-box"><small class="error">Please select State</small></div>\r\n                              </div>\r\n                              <div class="form-group col-md-4">\r\n                                  <label class="control-label">Form Name<sup>*</sup></label>\r\n                                  <select class="form-control" #fData formControlName="frmIdAttrFK" (change)="getSectionData($event)">\r\n                                    <option value="">--Select--</option>\r\n                                    <option *ngFor="let u of formAllData" [value]="u.id">{{u.name}}</option>\r\n                                  </select>\r\n                        <div class="error-box"><small class="error">Please select State</small></div>\r\n                                </div>\r\n                \r\n                              <div class="form-group col-md-4">\r\n                                <label class="control-label">Section Name<sup>*</sup></label>\r\n                      <select class="form-control" formControlName="secIdAttrFK">\r\n                        <option value="">--Select--</option>\r\n                        <option *ngFor="let u of sectionAllData" [value]="u.id">{{u.name}}</option>\r\n                      </select>\r\n                      <div class="error-box"><small class="error">Please select State</small></div>\r\n                              </div>\r\n                 --\x3e\r\n                              <div class="form-group col-md-4">\r\n                                <label class="control-label">Tooltip Code<sup>*</sup></label>\r\n                <input type="text" class="form-control" formControlName="key">\r\n                      <div class="error-box"><small class="error">Please select State</small></div>\r\n                              </div>\r\n                              <div class="form-group col-md-4">\r\n                                <label class="control-label">Tooltip Name<sup>*</sup></label>\r\n                <input type="text" class="form-control" formControlName="toolTipText">\r\n                      <div class="error-box"><small class="error">Please select State</small></div>\r\n                              </div>\r\n                                        \r\n                \r\n                  \r\n                        \r\n                        </div>\r\n                <div class="text-center">\r\n                        <button [disabled]="this.tooltipForm.invalid" class="btn btn-primary"  (click)="tooltipSubmit()"> Submit</button>\r\n                      </div>\r\n                      </form> \r\n                      <div class="table-responsive">\r\n                        \r\n          <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n          <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n                          <table class=" mt-5 mb-0 table table-bordered">                     \r\n                            <thead>\r\n                              <tr class="bg-light  text-size-small text-center">\r\n                                 \r\n                                  <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                                    <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                                    <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                                  </div>\r\n                                </th>  \r\n                                \r\n                                <th class="w-10"> Action</th>\r\n                              </tr>\r\n                          </thead>\r\n                           \x3c!-- <thead class="bg-light">\r\n                  <tr>\r\n                   \r\n                    <th>Tooltip Code</th>\r\n                    <th>Tooltip Name</th>\r\n<th>Action</th>\r\n                  </tr>\r\n                  </thead> --\x3e\r\n                  <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n                   <tr *ngFor="let u of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }">\r\n                  <td>{{u.key}}</td>\r\n                  <td>{{u.toolTipText}}</td>\r\n                  <td><input type="button" class="btn btn-primary" value="Edit" (click)="editTooltip(u)"></td>\r\n                  \r\n                  \r\n                  \r\n                  \r\n                \r\n                        </tr>\r\n                      </tbody>\r\n                      <ng-template #no_allData>\r\n                        <tbody>\r\n                          <tr>\r\n                            <td class="error text-center alert alert-danger" colspan="3">No record found!</td>\r\n                          </tr>\r\n                        </tbody>\r\n\r\n                      </ng-template>\r\n                      </table>\r\n                      <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n                        <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n                      </div>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n            \r\n            \r\n            </div>\r\n\r\n     \r\n      </div>\r\n  \r\n\r\n      \r\n\r\n \r\n      \r\n \r\n      </div>\r\n      \r\n \r\n     \r\n      </div>\r\n      </div>\r\n    \r\n    \x3c!-- /.card-body --\x3e \r\n\r\n    \r\n  \r\n\r\n\r\n    <div class="modal show" *ngIf="editPopup">\r\n        <div class="modal-dialog modal-lg">\r\n          <div class="modal-content">\r\n      \r\n            \x3c!-- Modal Header --\x3e\r\n            <div class="modal-header">\r\n              <h4 class="modal-title">Edit Form</h4>\r\n              <button type="button" class="close" (click)="closePopup()">&times;</button>\r\n            </div>\r\n      \r\n            \x3c!-- Modal body --\x3e\r\n            <form class="modal-body" id="validateFoem" [formGroup]="updateModuleForm" *ngIf="editModulePopup">\r\n                <input type="hidden" class="form-control" formControlName="id" [(ngModel)]="moduleId">\r\n                <div class="row">\r\n                    <div class="col-md-6">\r\n                        <label class="control-label">Module Code<sup>*</sup></label>\r\n                        <input type="text" class="form-control" formControlName="code" [(ngModel)]="moduleCode">\r\n                    <div class="error-box"><small class="error">Enter Valid Module Code</small></div>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                        <label class="control-label">Module Name<sup>*</sup></label>\r\n                        <input type="text" class="form-control" formControlName="name" [(ngModel)]="moduleName">\r\n                    <div class="error-box"><small class="error">Enter Valid Module Name</small></div>\r\n                    </div>\r\n                </div>\r\n            <div class="modal-footer">\r\n            <button [disabled]="this.updateModuleForm.invalid"  class="btn btn-sm btn-primary" (click)="updateModuleFormSubmit()" > Update</button>\r\n            </div>\r\n          </form>\r\n      \r\n          \x3c!-- Modal body --\x3e\r\n          <form class="modal-body" id="validateFoem" [formGroup]="updatePopupForm" *ngIf="editFormPopup">\r\n              <input type="hidden" class="form-control" formControlName="id" [(ngModel)]="formId">\r\n              <div class="row">\r\n              <div class="col-md-6">\r\n                  <label class="control-label">Form Code<sup>*</sup></label>\r\n                  <input type="text" class="form-control" formControlName="code" [(ngModel)]="formCode">\r\n              <div class="error-box"><small class="error">Enter Valid Form Code</small></div>\r\n              </div>\r\n              <div class="col-md-6">\r\n                  <label class="control-label">Form Name<sup>*</sup></label>\r\n                  <input type="text" class="form-control" formControlName="name" [(ngModel)]="formName">\r\n              <div class="error-box"><small class="error">Enter Valid Form Name</small></div>\r\n              </div>\r\n          </div>\r\n          <div class="modal-footer">\r\n          <button [disabled]="this.updatePopupForm.invalid"  class="btn btn-sm btn-primary" (click)="updateFormSubmit()"> Update</button>\r\n          </div>\r\n        </form>\r\n      \r\n        \x3c!-- Modal body --\x3e\r\n        <form class="modal-body" id="validateFoem" [formGroup]="updateSectionForm" *ngIf="editSectionPopup">\r\n            <input type="hidden" class="form-control" formControlName="id" [(ngModel)]="sectionId">\r\n            <div class="row">\r\n            <div class="col-md-6">\r\n                <label class="control-label">Section Code<sup>*</sup></label>\r\n                <input type="text" class="form-control" formControlName="code" [(ngModel)]="sectionCode">\r\n            <div class="error-box"><small class="error">Enter Valid Section Code</small></div>\r\n            </div>\r\n            <div class="col-md-6">\r\n                <label class="control-label">Section Name<sup>*</sup></label>\r\n                <input type="text" class="form-control" formControlName="name" [(ngModel)]="sectionName">\r\n            <div class="error-box"><small class="error">Enter Valid Section Name</small></div>\r\n            </div>\r\n        </div>\r\n        <div class="modal-footer">\r\n        <button [disabled]="this.updateSectionForm.invalid"  class="btn btn-sm btn-primary" (click)="updateSectionFormSubmit()" > Update</button>\r\n        </div>\r\n      </form>\r\n      \r\n      \x3c!-- Modal body --\x3e\r\n      <form class="modal-body" id="validateFoem" [formGroup]="updateTooltipForm" *ngIf="editTooltipPopup">\r\n          <input type="hidden" class="form-control" formControlName="id" [(ngModel)]="tooltipId">\r\n          <div class="row">\r\n          <div class="col-md-6">\r\n              <label class="control-label">Tooltip Code<sup>*</sup></label>\r\n              <input type="text" readonly class="form-control" formControlName="key" [(ngModel)]="tooltipCode">\r\n          <div class="error-box"><small class="error">Enter Valid Tooltip Code</small></div>\r\n          </div>\r\n          <div class="col-md-6">\r\n              <label class="control-label">Tooltip Name<sup>*</sup></label>\r\n              <input type="text" class="form-control" formControlName="toolTipText" [(ngModel)]="tooltipName">\r\n          <div class="error-box"><small class="error">Enter Valid Tooltip Name</small></div>\r\n          </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n      <button [disabled]="this.updateTooltipForm.invalid"  class="btn btn-sm btn-primary" (click)="updateTooltipFormSubmit()"> Update</button>\r\n      </div>\r\n    </form>\r\n\r\n\r\n\r\n        </div>\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      <div class="popup-overlay" *ngIf="editPopup"></div>\r\n      <app-validation-message [message]="inputJson"></app-validation-message>'},JUfe:function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4">\r\n  <div class="card-header"><b>Manage Town Planning</b></div>\r\n  <div class="card-body asd">\r\n  <div class="row">\r\n  <div class="col-md-12">\r\n\r\n\r\n  <form [formGroup]="townPlaningForm" id="validateFoem">\r\n\r\n\r\n\r\n\r\n\r\n  <div class="row">\r\n  <div class="form-group col-md-4">\r\n  <label class="control-label">Town Planing Name<sup>*</sup></label>\r\n  <input type="text" class="form-control"  placeholder="" formControlName="tpName">\r\n  <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter Town Planing Name max twenty character</small></div>\r\n  </div>\r\n  <div class="form-group col-md-4">\r\n  <label class="control-label">Town planing Description<sup>*</sup></label>\r\n  <input type="text" class="form-control"  placeholder="" formControlName="tpDescription">\r\n  <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> please enter Town planing Description</small></div>\r\n  </div>\r\n\r\n  <div class="form-group col-md-4">\r\n  <label class="control-label">District Name<sup>*</sup></label>\r\n  <input type="text" class="form-control" [readonly]="true"  placeholder="" formControlName="districtName">\r\n  <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> please enter District Name</small></div>\r\n  </div>\r\n\r\n  </div>\r\n\r\n  <div class="row">\r\n  <div class="form-group col-md-4">\r\n  <label class="control-label">District code<sup>*</sup></label>\r\n  <input type="text" class="form-control" [readonly]="true"  placeholder="" formControlName="districtCode" onKeyPress="if(this.value.length==4) return false;">\r\n  <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter District Code</small></div>\r\n  </div>\r\n\r\n\r\n  </div>\r\n\r\n  <div class="text-center">\r\n      <button  class="btn btn-primary"  (click)="prevTab()">Back</button>\r\n  <button [disabled]="this.townPlaningForm.invalid" class="btn btn-primary"  (click)="formSubmit()"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>  Create Town</button>\r\n  </div>\r\n\r\n  </form>\r\n  <app-validation-message [message]="inputJson"></app-validation-message>\r\n  <div class="table-responsive">\r\n    <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n    <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n    <table class=" mt-5 mb-0 table table-bordered">\r\n      <thead>\r\n        <tr class="bg-light  text-size-small text-center">\r\n            \r\n            <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n              <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n              <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n            </div>\r\n          </th>   \r\n          \r\n          <th>Action</th>\r\n  \r\n  \r\n  \r\n        </tr>\r\n        </thead>\r\n    \x3c!-- <thead class="bg-light">\r\n    <tr>\r\n     <th>Town Planning Name*</th>\r\n    <th>Town Planning Descrioption *</th>\r\n    <th>District Name</th>\r\n    <th>District code</th>\r\n    <th>Action</th>\r\n\r\n\r\n\r\n\r\n\r\n    </tr>\r\n    </thead> --\x3e\r\n    <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n    <tr *ngFor="let a of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }">\r\n   <td>{{a.tpName}}</td>\r\n   <td>{{a.tpDescription}}</td>\r\n    <td>{{a.districtName}}</td>\r\n    <td>{{a.districtCode}}</td>\r\n    <td>\r\n      <button  (click)="editForm(a)" class="btn btn-primary">Edit</button>\r\n      <button (click)="deleteForm(a)" class="btn btn-primary">Delete</button>\r\n    </td>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </tr>\r\n    </tbody>\r\n    <ng-template #no_allData>\r\n      <tbody>\r\n        <tr>\r\n          <td class="error text-center alert alert-danger" colspan="5">No record found!</td>\r\n        </tr>\r\n      </tbody>\r\n    </ng-template>\r\n    </table>\r\n\r\n    <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n      <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n    </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n  </div>\r\n  </div>\r\n  </div>\r\n\r\n  </div>\r\n\r\n\r\n\r\n  <div class="modal fade show" *ngIf="popShow">\r\n    <div class="modal-dialog">\r\n    <div class="modal-content">\r\n    \r\n    \x3c!-- Modal Header --\x3e\r\n    <div class="modal-header">\r\n    <h4 class="modal-title">Edit Form</h4>\r\n    <button type="button" class="close" (click)="closePop()">&times;</button>\r\n    </div>\r\n    \r\n    \x3c!-- Modal body --\x3e\r\n    <form class="modal-body" id="validateFoem" [formGroup]="EditPopupForm" >\r\n    \r\n      <input type="hidden" class="form-control" formControlName="tpId" [(ngModel)]="edittpId">\r\n    <label class="control-label">Town Planing Name<sup>*</sup></label>\r\n    <div class="mb-3">\r\n    <input type="text" class="form-control"  placeholder="" formControlName="tpName" [(ngModel)]="edittpName">\r\n    <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter Town Planing Name max twenty character</small></div>\r\n    \r\n    </div>\r\n    \r\n    <label class="control-label">Town planing Description<sup>*</sup></label>\r\n    <div class="mb-3">\r\n    <input type="text" class="form-control"  placeholder="" formControlName="tpDescription" [(ngModel)]="edittpDescription">\r\n    <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> please enter Town planing Description</small></div>\r\n    \r\n    </div>\r\n    \r\n    <label class="control-label">District Name<sup>*</sup></label>\r\n    <div class="mb-3">\r\n    <input type="text" class="form-control" [readonly]="true"  placeholder="" formControlName="districtName" [(ngModel)]="editdistrictName" >\r\n    <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> please enter District Name</small></div>\r\n    </div>\r\n    \r\n    \r\n    <div class="mb-3">\r\n    <label class="control-label">District code<sup>*</sup></label>\r\n    <input type="text" class="form-control" [readonly]="true"  placeholder="" formControlName="districtCode" onKeyPress="if(this.value.length==4) return false;" [(ngModel)]="editdistrictCode">\r\n    <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter District Code</small></div>\r\n    </div>\r\n    \r\n    </form>\r\n    \r\n    \x3c!-- Modal footer --\x3e\r\n    <div class="modal-footer">\r\n    <button  class="btn btn-success" (click)="formUpdate()" data-dismiss="modal"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Update</button>\r\n    </div>\r\n    \r\n    </div>\r\n    </div>\r\n    </div>\r\n\r\n    <div class="popup-overlay" *ngIf="popShow"></div>'},KxZO:function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4">\r\n  \x3c!-- .card-body --\x3e\r\n  <div class="card-header"><b>SOP\'s</b>\r\n  </div>\r\n  <span class="text-right"><a href="javascript:void(0)" (click)="viewMappedEnquiries()">View Mapped Enquiries</a></span>\r\n  <div class="card-body asd">\r\n    <div class="row">\r\n      <div class="col-md-12">\r\n        <app-validation-message [message]="inputJson"></app-validation-message>\r\n\r\n        <div class="table-responsive mt-3">\r\n          <table class="mb-0 table table-bordered">\r\n            <thead class="bg-light">\r\n              <tr>\r\n                <th>SOP Code</th>\r\n                <th>SOP Description</th>\r\n                <th>SOP Type</th>\r\n                <th>Department</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor="let enq of allData">\r\n                <td>{{enq.code}}</td>\r\n                <td>{{enq.description}}</td>\r\n                <td>{{enq.type}}</td>\r\n                <td>{{enq?.department}}</td>\r\n                <td><input type="button" class="btn btn-primary" value="Edit" (click)="editData(enq)">\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\x3c!-- /.card-body --\x3e\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class="modal show" *ngIf="modalPopup">\r\n  <div class="modal-dialog">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Edit SOP</h4>\r\n        <button type="button" class="close" (click)="closePopup()">&times;</button>\r\n      </div>\r\n\r\n      \x3c!-- Modal body --\x3e\r\n      <form class="modal-body" id="validateFoem" [formGroup]="EditPopupForm">\r\n        <input type="hidden" class="form-control" formControlName="enqId" [(ngModel)]="enqId">\r\n        <div class="row">\r\n          <div class="col-md-12 mb-3">\r\n            <label>SOP Code</label>\r\n            <input type="text" class="form-control" readonly formControlName="code" [(ngModel)]="code">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n              SOP Code at least of four character</small></div>\r\n          </div>\r\n          <div class="col-md-12 mb-3">\r\n            <label>SOP Department</label>\r\n            <select class="form-control" formControlName="department" [(ngModel)]="department">\r\n              <option value="">--Select--</option>\r\n              <option value="Finance">Finance</option>\r\n              <option value="TP">TP</option>\r\n              <option value="Legal">Legal</option>\r\n              <option value="Admin">Admin</option>\r\n            </select>\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n              SOP Department required</small></div>\r\n\r\n          </div>\r\n          <div class="col-md-12 mb-3">\r\n            <label>Process Type</label>\r\n            <select class="form-control" formControlName="type" [(ngModel)]="type">\r\n              <option value="">--Select--</option>\r\n              \x3c!-- <option value="PROJECT_QUA_ONLINE">Quarter</option> --\x3e\r\n              <option value="PROJECT_ALT_ONLINE">Alteration</option>\r\n              <option value="PROJECT_EXT_ONLINE">Extension</option>\r\n              <option value="PROJECT_REG_ONLINE">Registration</option>\r\n              <option value="PROJECT_ALT_15_ONLINE">Section 15 Stage 1</option>\r\n              <option value="PROJECT_ALT_15_ONLINE_2">Section 15 Stage 2</option>\r\n              <option value="AGENT_ONLINE">Agent Enquiry</option>\r\n            </select>\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                Process Type required</small></div>\r\n\r\n          </div>\r\n          <div class="col-md-12 mb-3">\r\n            <label>SOP Description</label>\r\n            <input type="text" class="form-control" formControlName="description" [(ngModel)]="description">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n              SOP Description required</small></div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \x3c!-- Modal footer --\x3e\r\n        <div class="modal-footer">\r\n\r\n          <button [disabled]="this.EditPopupForm.invalid" class="btn btn-primary" (click)="formUpdate()"\r\n            data-dismiss="modal"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>\r\n            Update</button>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n'},LmzG:function(t,e,r){"use strict";r.r(e),e.default=""},M9kW:function(t,e,r){"use strict";r.r(e),e.default='<div class="row mb-4 mt-4">\r\n\r\n  <div class="container-fluid">\r\n    <div class="col-md-12 text-center mb-2">\r\n      <h2 class="text-dark">Pincode Mapping</h2>\r\n    </div>\r\n    <div class="col-md-12 mb-2">\r\n      <form [formGroup]="searchForm" (ngSubmit)="searchFormSubmit()" id="validateFoem">\r\n\r\n        <div class="row mb-4">\r\n          <div class="col-md-12">\r\n            <div class="card shadow">\r\n\r\n              <div class="card-body">\r\n                <div class="col-md-12">\r\n                  <div class="form-group col-md-4">\r\n\r\n                    <label class="control-label font-weight-bold">Pin Code<sup>*</sup>\r\n\r\n                      </label>\r\n                    <div class="input-group mt-2">\r\n\r\n                    \r\n                      <input type="number" class="form-control notDecimal" #pcodeoval onKeyPress="if(this.value.length==6) return false" (keyup)="validatePinCode(pcodeoval.value,kycstate.value)" formControlName="pinCode" >\r\n                      <div class="error-box"><small class="error"> Enter valid Pincode </small>\r\n                      </div>\r\n\r\n                    </div>\r\n                   \r\n                  </div>\r\n\r\n                  <div class="form-group col-md-4">\r\n\r\n\r\n                    <label class="control-label font-weight-bold"> State<sup>*</sup>\r\n\r\n                      </label>\r\n                    <div class="input-group mt-2">\r\n\r\n                      \r\n                      <select class="form-control" #kycstate formControlName="stateCode" (change)="getDistrictByStateId(pcodeoval.value,kycstate.value)" >\r\n                        <option value="">--Select--</option>\r\n                        <option *ngFor="let typeName of StateData" [value]="typeName.stateUtCode"> {{typeName.stateUtName}}\r\n                        </option>\r\n                        </select>\r\n                        <div class="error-box"><small class="error">Please Select State</small>\r\n                        </div>    \r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group col-md-4">\r\n                    <label class="control-label font-weight-bold">District<sup>*</sup>\r\n\r\n                      </label>\r\n                    <div class="input-group mt-2">\r\n                      <select class="form-control"formControlName="districtCode"  >\r\n                        <option value="">--Select--</option>\r\n                        <option *ngFor="let typeName of DistrictData" [value]="typeName.districtCode"> {{typeName.districtName}}\r\n                        </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div class="form-group col-md-12  text-center">\r\n                  \x3c!--<button class="btn btn-primary" [disabled]="this.detailsOfAppelForm.invalid" id="submitBtn" (click)="formSubmit()"><i\r\n                  class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>SUBMIT</button>--\x3e\r\n\r\n                  <button type="submit" class="btn btn-primary btn-small mt-2"  [disabled]="this.searchForm.invalid">Submit</button>\r\n                 \r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n\r\n    <div class="mt-3">\r\n      <div class="col-md-12">\r\n        <div class="card ">\r\n\r\n          <div class="card-body">\r\n            <div class="row">\r\n              <div class=" col-md-12 table-responsive mb-4">\r\n                <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n                <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n                <table class="table table-bordered">\r\n                  <thead>\r\n                    <tr class="bg-light  text-size-small text-center">\r\n                      <th>Sr.No.</th>\r\n                      \r\n                        <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                          <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                          <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                        </div>\r\n                      </th>   \r\n                      \r\n                      <th>Action</th>\r\n        \r\n                    </tr>\r\n                </thead>\r\n                  \x3c!-- <thead>\r\n                    <tr class="text-center bg-light  text-size-small">\r\n                      <td>Sr.No.</td>\r\n\r\n                      <td>Pin Code</td>\r\n                      <td> State Name</td>\r\n                      <td> District Name</td>\r\n\r\n                       <td>Action</td>\r\n                    \r\n\r\n                    </tr>\r\n                  </thead> --\x3e\r\n                  <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n\r\n                    <tr class="text-center" *ngFor="let data of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }; let i= index">\r\n                      <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n\r\n\r\n                      <td>{{data.pincode}}</td>\r\n                      <td>{{data.state_name}}</td>\r\n                      <td>{{data.district_name}}</td>\r\n                      <td> \r\n                                           \r\n                          <button type="button" class="btn btn-small bg-success" (click)=deletePincode(data.id)>Delete</button>\r\n                        \r\n                        </td>\r\n\r\n                    \r\n                    </tr>\r\n\r\n                    \r\n                  </tbody>\r\n                  <ng-template #no_allData>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td class="error text-center alert alert-danger" colspan="5">No record found!</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </ng-template>\r\n\r\n                </table>\r\n\r\n                <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n                  <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n<app-tooltip [tooltipEvent]="tooltipJson"></app-tooltip>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'},MdiR:function(t,e,r){"use strict";r.r(e),e.default=""},MxuW:function(t,e,r){"use strict";r.r(e),e.default=""},Nm5a:function(t,e,r){"use strict";r.r(e);var a=r("mrSG"),n=r("8Y7J"),o=r("SVse"),s=r("s7LF"),l=r("FvaC"),i=r("vTBr");let d=class{constructor(t,e){this._http=t,this._apiURL=e}postData(t){return this._http.securepost(this._apiURL.reraMasterAPI+"bank/saveBankDetails",t)}getData(){return this._http.secureget(this._apiURL.reraMasterAPI+"bank/getAllBank")}updateFormService(t){return this._http.secureput(this._apiURL.reraMasterAPI+"bank/updateBankDetails/",t)}};d.ctorParameters=()=>[{type:i.a},{type:l.a}],d=a.b([Object(n.B)({providedIn:"root"})],d);var c=r("2Vo4");let p=class{constructor(t){this._httpService=t,this.numberRegex="^[0-9]{10}$",this.alphabetRegex="^[a-zA-Z ]*$",this.loader=!1,this.errorCheck=!1,this.successCheck=!1,this.inputJson=new c.a({}),this.modalPopup=!1,this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getForm(),this.uploadForm=new s.d({bankCode:new s.c(null,[s.h.required,s.h.pattern(this.alphabetRegex)]),bankName:new s.c(null,[s.h.required,s.h.pattern(this.alphabetRegex)]),bankPrefixIfsc:new s.c(null,[s.h.required,s.h.maxLength(11)]),status:new s.c("",[s.h.required])}),this.EditPopupForm=new s.d({bankId:new s.c(null,[s.h.required]),bankCode:new s.c(null,[s.h.required,s.h.pattern(this.alphabetRegex)]),bankName:new s.c(null,[s.h.required,,s.h.pattern(this.alphabetRegex)]),bankPrefixIfsc:new s.c(null,[s.h.required,s.h.maxLength(11)]),status:new s.c("",[s.h.required])})}formSubmit(){this.loader=!0,console.log(this.uploadForm.value),this.uploadForm.valid?this._httpService.postData(this.uploadForm.value).subscribe(t=>{console.log(t),this.getForm(),this.uploadForm.reset(),this.successCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Bank Details Submitted Successfully",popClass:"alert alert-success",popRoute:""})},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}),this.errorCheck=!0,this.loader=!1}):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}getForm(){this._httpService.getData().subscribe(t=>{this.allData=t,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default"),console.log(t)})}editForm(t){this.modalPopup=!0,console.log(t.bankId),this.bankId=t.bankId,this.bankCode=t.bankCode,this.bankName=t.bankName,this.bankPrefixIfsc=t.bankPrefixIfsc,this.status=t.status}formUpdate(){this._httpService.updateFormService(this.EditPopupForm.value).subscribe(t=>{this.modalPopup=!1,this.getForm(),this.inputJson.next({popShow:!0,popMsg:"Bank details updated successfully!!",popClass:"alert alert-success",popRoute:""})})}popupClose(){this.modalPopup=!1}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"bankCode",label:"Bank Code",type:"string"},{key:"bankName",label:"Bank Name",type:"string"},{key:"bankPrefixIfsc",label:"IFSC Code",type:"string"},{key:"status",label:"Status",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};p.ctorParameters=()=>[{type:d}],p=a.b([Object(n.n)({selector:"app-manage-bank",template:a.c(r("1EPs")).default,styles:[a.c(r("3rbT")).default]})],p);let h=class{constructor(t,e){this._http=t,this._apiURL=e,this.apiURL=this._apiURL.reraMasterAPI+"//district/updateDistrictDetails"}postDataValSubmit(t){return this._http.post(this._apiURL.reraMasterAPI+"district/saveDistrictDetails",t)}getDataofDistrict(t){return this._http.get(this._apiURL.reraMasterAPI+"district/getDistrictByStateUt"+t)}getDataofStateName(t){return console.log(t),this._http.get(this._apiURL.reraMasterAPI+"master-states"+t)}updateFormService(t){return console.log(t),this._http.put(this.apiURL,t)}};h.ctorParameters=()=>[{type:i.a},{type:l.a}],h=a.b([Object(n.B)({providedIn:"root"})],h);var u=r("iInd");let m=class{constructor(t,e){this._httpService=t,this._route=e,this.alphabetRegex="^[a-zA-Z ]*$",this.loader=!1,this.errorCheck=!1,this.successCheck=!1,this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.DistrictForm=new s.d({districtName:new s.c(null,[s.h.required,s.h.maxLength(20),s.h.pattern(this.alphabetRegex)]),districtCode:new s.c(null,[s.h.required,s.h.maxLength(4)]),status:new s.c("",[s.h.required]),stateId:new s.c("",[s.h.required]),stateCode:new s.c(null,[s.h.required])}),this.EditPopupForm=new s.d({districtId:new s.c(null,[s.h.required]),stateId:new s.c(null,[s.h.required]),districtName:new s.c(null,[s.h.required,s.h.maxLength(20),s.h.pattern(this.alphabetRegex)]),districtCode:new s.c(null,[s.h.required]),status:new s.c("",[s.h.required])}),this.stateId=parseInt(sessionStorage.getItem("state")),this.stateCode=sessionStorage.getItem("stateCode"),this.getForm()}prevTab(){this._route.navigate(["master/manage-state"])}formSubmit(){this.loader=!0,this.DistrictForm.valid?this._httpService.postDataValSubmit(this.DistrictForm.value).subscribe(t=>{console.log(this.DistrictForm.value),this.getForm(),this.DistrictForm.controls.districtName.reset(),this.DistrictForm.controls.districtCode.reset(),this.DistrictForm.controls.status.reset(),this.successCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"District Details Submitted Successfully",popClass:"alert alert-success",popRoute:""})},t=>{console.log(t),this.errorCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""})}):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}getForm(){this._httpService.getDataofDistrict(this.stateId).subscribe(t=>{this.allData=t,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default")})}editForm(t){this.editdistrictId=t.districtId,this.editdistrictName=t.districtName,this.editdistrictCode=t.districtCode,this.editstateId=t.stateId,this.editstatus=t.status,this.popShow=!0}closePopup(){this.popShow=!1}formUpdate(){console.log(this.EditPopupForm.value),this._httpService.updateFormService(this.EditPopupForm.value).subscribe(t=>{this.getForm(),alert("Update Successfully")})}addSubDistrict(t){sessionStorage.setItem("districtId",t.districtId),sessionStorage.setItem("districtCode",t.districtCode),this._route.navigate(["master/manage-subdistrict"])}townPlanAuthority(t){sessionStorage.setItem("districtCode",t.districtCode),sessionStorage.setItem("districtName",t.districtName),this._route.navigate(["master/town-planning"])}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"districtName",label:"District Name",type:"string"},{key:"districtCode",label:"District Code",type:"string"},{key:"status",label:"Status",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};m.ctorParameters=()=>[{type:h},{type:u.e}],m=a.b([Object(n.n)({selector:"app-manage-district",template:a.c(r("OJ3+")).default,styles:[a.c(r("PiGg")).default]})],m);let g=class{constructor(t,e){this._http=t,this._apiURL=e,this.apiURL=this._apiURL.reraMasterAPI+"office/getAllOffice/"}postData(t){return this._http.securepost(this._apiURL.reraMasterAPI+"office/saveOfficeDetails",t)}getData(){return this._http.secureget(this._apiURL.reraMasterAPI+"office/getAllOffice")}updateFormService(t){return this._http.secureput(this._apiURL.reraMasterAPI+"office/updateOfficedetails",t)}};g.ctorParameters=()=>[{type:i.a},{type:l.a}],g=a.b([Object(n.B)({providedIn:"root"})],g);let b=class{constructor(t){this._httpService=t,this.alphabetRegex="^[a-zA-Z ]*$",this.loader=!1,this.errorCheck=!1,this.successCheck=!1,this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getForm(),this.uploadForm=new s.d({officeName:new s.c(null,[s.h.required,s.h.minLength(4),s.h.pattern(this.alphabetRegex)]),officeAddress:new s.c(null,[s.h.required,s.h.minLength(4)]),status:new s.c("",[s.h.required])}),this.EditPopupForm=new s.d({officeId:new s.c,officeName:new s.c(null,[s.h.required,s.h.minLength(4),s.h.pattern(this.alphabetRegex)]),officeAddress:new s.c(null,[s.h.required,s.h.minLength(4)]),status:new s.c("",[s.h.required])})}formSubmit(){this.loader=!0,this.uploadForm.valid?this._httpService.postData(this.uploadForm.value).subscribe(t=>{console.log(t),this.getForm(),this.uploadForm.reset(),this.successCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Office Details Submitted Successfully",popClass:"alert alert-success",popRoute:"home"})},t=>{console.log(t),this.errorCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""})}):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}editForm(t){console.log(t.officeId),this.officeId=t.officeId,this.officeName=t.officeName,this.officeAddress=t.officeAddress,this.status=t.status}getForm(){this._httpService.getData().subscribe(t=>{this.allData=t,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default"),console.log(this.allData)})}formUpdate(){this._httpService.updateFormService(this.EditPopupForm.value).subscribe(t=>{this.getForm(),alert("Update Successfully")})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"officeName",label:"Office Name",type:"string"},{key:"officeAddress",label:"Office Address",type:"string"},{key:"status",label:"Status",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};b.ctorParameters=()=>[{type:g}],b=a.b([Object(n.n)({selector:"app-manage-office",template:a.c(r("HTaT")).default,styles:[a.c(r("//o4")).default]})],b);let v=class{constructor(t,e){this._http=t,this._apiURL=e,this.apiURL=this._apiURL.reraMasterAPI+"//state/updateStateDetails"}postDataValSubmit(t){return this._http.post(this._apiURL.reraMasterAPI+"state/saveStateDetails",t)}getDataofState(){return this._http.get(this._apiURL.reraMasterAPI+"state/getAllState")}updateFormService(t){return console.log(t),this._http.put(this.apiURL,t)}};v.ctorParameters=()=>[{type:i.a},{type:l.a}],v=a.b([Object(n.B)({providedIn:"root"})],v);let f=class{constructor(t,e){this._httpService=t,this._router=e,this.numberRegex="^[0-9]{10}$",this.alphabetRegex="^[a-zA-Z ]*$",this.popShow=!1,this.loader=!1,this.errorCheck=!1,this.successCheck=!1,this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.StateForm=new s.d({stateUtId:new s.c,stateUtName:new s.c(null,[s.h.required,s.h.maxLength(20),s.h.pattern(this.alphabetRegex)]),stateUtCode:new s.c(null,[s.h.required,s.h.maxLength(4),s.h.pattern(this.alphabetRegex)]),status:new s.c("",[s.h.required])}),this.EditPopupForm=new s.d({stateUtId:new s.c(null,s.h.required),stateUtName:new s.c(null,[s.h.required,s.h.minLength(8),s.h.pattern(this.alphabetRegex)]),stateUtCode:new s.c(null,[s.h.required,s.h.pattern(this.alphabetRegex)]),status:new s.c("",[s.h.required])}),this.getForm()}formSubmit(){this.loader=!0,this.StateForm.valid?this._httpService.postDataValSubmit(this.StateForm.value).subscribe(t=>{console.log(t),this.getForm(),this.StateForm.reset(),this.successCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"State Details Submitted Successfully",popClass:"alert alert-success",popRoute:""})},t=>{console.log(t),this.errorCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""})}):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}getForm(){this._httpService.getDataofState().subscribe(t=>{this.allData=t,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default")})}editForm(t){console.log(t),this.editstateUtId=t.stateUtId,this.editstateUtName=t.stateUtName,this.editstateUtCode=t.stateUtCode,this.editstatus=t.status,this.popShow=!0}closePop(){this.popShow=!1}formUpdate(){this._httpService.updateFormService(this.EditPopupForm.value).subscribe(t=>{this.getForm()})}addDistrict(t){sessionStorage.setItem("state",t.stateUtId),sessionStorage.setItem("stateCode",t.stateUtCode),this._router.navigate(["master/manage-district"])}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"changeReqNum",label:"State Name",type:"string"},{key:"projectRegNo",label:"State Code",type:"string"},{key:"projectName",label:"Status",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};f.ctorParameters=()=>[{type:v},{type:u.e}],f=a.b([Object(n.n)({selector:"app-manage-state",template:a.c(r("gbF+")).default,styles:[a.c(r("PXfZ")).default]})],f);let y=class{constructor(t,e){this._http=t,this._apiURL=e}postDataValSubmit(t){return console.log("val"+t),this._http.post(this._apiURL.reraMasterAPI+"subDistrict/saveSubDistrictDetails",t)}getDataofSubDistrict(t){return this._http.get(this._apiURL.reraMasterAPI+"subDistrict/getSubDistrictByDistrictId"+t)}getDataofDistrictName(t){return console.log(t),this._http.get(this._apiURL.reraMasterAPI+"master-district"+t)}updateFormService(t){return this._http.put(this._apiURL.reraMasterAPI+"subDistrict/updatesubDistrict",t)}};y.ctorParameters=()=>[{type:i.a},{type:l.a}],y=a.b([Object(n.B)({providedIn:"root"})],y);let D=class{constructor(t,e){this._httpService=t,this._route=e,this.alphabetRegex="^[a-zA-Z ]*$",this.loader=!1,this.errorCheck=!1,this.successCheck=!1,this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.SubDistrictForm=new s.d({subDistrictName:new s.c(null,[s.h.required,s.h.maxLength(20),s.h.pattern(this.alphabetRegex)]),districtId:new s.c(null,[s.h.required]),districtCode:new s.c(null,[s.h.required]),status:new s.c(null,[s.h.required])}),this.EditPopupForm=new s.d({districtId:new s.c(null,[s.h.required]),subDistrictId:new s.c(null,[s.h.required]),subDistrictName:new s.c(null,[s.h.required]),status:new s.c("",[s.h.required])}),this.status="ACTIVE",this.districtId=parseInt(sessionStorage.getItem("districtId")),this.districtCode=sessionStorage.getItem("districtCode"),this.getForm()}prevTab(){this._route.navigate(["master/manage-district"])}formSubmit(){this.loader=!0,console.log(this.SubDistrictForm.value),this.SubDistrictForm.valid?this._httpService.postDataValSubmit(this.SubDistrictForm.value).subscribe(t=>{this.getForm(),this.SubDistrictForm.controls.subDistrictName.reset(),this.successCheck=!0,this.loader=!1,console.log(t),this.inputJson.next({popShow:!0,popMsg:"Sub District Details Submitted Successfully",popClass:"alert alert-success",popRoute:""})},t=>{console.log(t),this.errorCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""})}):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}getForm(){console.log(this.districtId),this._httpService.getDataofSubDistrict(this.districtId).subscribe(t=>{console.log(t),this.allData=t,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default")})}editForm(t){this.editDistrictId=t.districtId,this.editSubDistrictId=t.subDistrictId,this.editSubDistrictName=t.subDistrictName,this.editStatus=t.status,console.log(t),this.popShow=!0}closePop(){this.popShow=!1}formUpdate(){this._httpService.updateFormService(this.EditPopupForm.value).subscribe(t=>{console.log(t),this.getForm()},t=>{})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"subDistrictName",label:"Sub District",type:"string"},{key:"status",label:"Status",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};D.ctorParameters=()=>[{type:y},{type:u.e}],D=a.b([Object(n.n)({selector:"app-manage-subdistrict",template:a.c(r("YHnI")).default,styles:[a.c(r("PFgv")).default]})],D);var S=r("Aa3O"),x=r("p87Y");let C=class{constructor(t,e,r,a){this._httpService=t,this._validation=e,this.api=r,this._fb=a,this.userType=new Array,this.department=new Array,this.team=new Array,this.outputValue={},this.showThisFile=!0,this.addRolesPopUp=!1,this.addMultipleRoles=s.a,this.mr_UserRolesUpdate={},this.loadingSpinner=!1,this.totalAddedRoles=new Array,this.mr_edituserId="",this.dynamicInfoForm=new Array,this.invalidForm=!0,this.popupEnableSystem=!1,this.roleName="",this.userAddedList=[],this.totalObjectOfUser={},this.submitButtonClick=!0,this.showErrorMessage=!1,this.loader=!1,this.errorMsg=!1,this.successCheck=!1,this.numberRegex="^[0-9]{10}$",this.alphabetRegex="^[a-zA-Z ]*$",this.errorCheck=!1,this.modalPopup=!1,this.allFormData=new Array,this.inputJson=new c.a({}),this.docId1=new c.a({}),this.docId2=new c.a({}),this.tableJsonData=new c.a({}),this.currentPageNo=1,this.paginationCount=10,this.getNameOfRoles=t=>{let e;return e=this.userType.findIndex(e=>e.userRole==t),e>-1?(console.log("console-5",e),this.userType[e].userRoleName):(console.log("console-6",e),t)},this.getNameOfTeamUser=t=>{let e;return e=this.team.findIndex(e=>e.userGroup==t),e>-1?(console.log("console-3",e),this.team[e].userGroupKey):(console.log("console-4",e),t)},this.getNameOfDepartment=t=>{let e;return e=this.department.findIndex(e=>e.userDept==t),e>-1?(console.log("console-1",e),this.department[e].userDeptKey):(console.log("console-2",e),t)},this.iterateValue=(t=[])=>{if(t.length>0){let e=[],r=[],a=[],n="",o="",s="";return t.forEach(t=>{-1==e.indexOf(t.roleCode)&&"ACTIVE"==t.status&&(n=n+","+this.getNameOfRoles(t.roleCode)),-1==r.indexOf(t.team)&&"ACTIVE"==t.status&&(o=o+","+this.getNameOfTeamUser(t.team)),-1==a.indexOf(t.department)&&"ACTIVE"==t.status&&(s=s+","+this.getNameOfDepartment(t.department)),e.push(t.roleCode),r.push(t.team),a.push(t.department)}),[n,o,s]}},this.closePopupManageRole=()=>{this.popupEnableSystem=!1},this.multipleRoleAssignment=(t={})=>{console.log("add manage roles object",t),this.popupEnableSystem=!0,this.user_edituserId=t.userId,this.totalObjectOfUser=t,this.userAddedList=t.userRoleList,this._httpService.getAddedListById(this.user_edituserId).subscribe(t=>{console.log("response of the user",t),this.userAddedList=t.userRoleList},t=>{console.error("while fetching details",t)})},this.selectedValue=t=>{const e=t.target,r=e.options[e.selectedIndex].getAttribute("data-roleName");this.roleName=r},this.verifyValidation=()=>{let t,e;this.submitButtonClick=!1,t=this.updateMultipleRoles.value,e=this.userAddedList.findIndex(e=>e.department==t.department&&e.roleCode==t.userType&&e.team==t.team&&"ACTIVE"==e.status),e>-1?(this.submitButtonClick=!0,this.showErrorMessage=!0):(this.showErrorMessage=!1,this.submitTotalData())},this.submitTotalData=()=>{console.log("form submission value",this.updateMultipleRoles.value,this.totalObjectOfUser),this._httpService.addNewRolesToUsers(this.updateMultipleRoles.value).subscribe(t=>{this.submitButtonClick=!0,console.log("response after role apply",t),"0"!=t.userId&&(this.userAddedList=t.userRoleList,this.updateMultipleRoles.get("department").reset(),this.updateMultipleRoles.get("userType").reset(),this.updateMultipleRoles.get("team").reset(),this.getForm())},t=>{console.error("submission error",t),this.submitButtonClick=!0})},this.disableArrayFromList=(t,e,r)=>{this._httpService.statusChangeofRole(this.user_edituserId,r).subscribe(t=>{console.log("response after role apply",t),"0"!=t.userId?(console.log("aaaa"),this.userAddedList=t.userRoleList):console.log("bbbb")},t=>{console.error("submission error",t)})}}setValue(t){this.outputValue[t.fid]=t.docid}ngOnInit(){this.fileDownlod=this.api.fileDownloadAPI+"download/",this.uploadForm=new s.d({userName:new s.c(null,[s.h.required,s.h.minLength(4),s.h.pattern(this.alphabetRegex)]),emailId:new s.c(null,[s.h.required,s.h.pattern(this._validation.emailRegex)]),mobileNo:new s.c(null,[s.h.required,s.h.pattern(this.numberRegex)]),designation:new s.c(null,[s.h.required,s.h.minLength(4)]),loginId:new s.c(null,[s.h.required,s.h.pattern(this._validation.emailRegex)]),userType:new s.c("",[s.h.required]),department:new s.c("",[s.h.required]),team:new s.c("",[s.h.required]),photoId:new s.c("",[s.h.required]),photoUid:new s.c("")}),this.EditPopupForm=new s.d({userId:new s.c(null),userName:new s.c(null,[s.h.required,s.h.minLength(4),s.h.pattern(this.alphabetRegex)]),emailId:new s.c(null,[s.h.required,s.h.pattern(this._validation.emailRegex)]),mobileNo:new s.c(null,[s.h.required,s.h.pattern(this.numberRegex)]),designation:new s.c(null,[s.h.required,s.h.minLength(4),s.h.pattern(this.alphabetRegex)]),loginId:new s.c(null),userType:new s.c(""),status:new s.c("",[s.h.required]),department:new s.c(""),team:new s.c(""),photoId:new s.c("",[s.h.required]),photoUid:new s.c("")}),this.updateRoles=this._fb.group({userId:[null],userRoleListAr:this._fb.array([])}),this.addMultipleRoles=this.updateRoles.get("userRoleListAr"),this.getForm(),this.getUsertype(),this.updateMultipleRoles=new s.d({department:new s.c("",[s.h.required]),userType:new s.c("",[s.h.required]),team:new s.c("",[s.h.required]),userId:new s.c("",[s.h.required])})}formSubmit(){this.uploadForm.valid?(this.showThisFile=!1,console.log(this.uploadForm.value),this.loader=!0,this._httpService.checkEmailId(this.uploadForm.controls.emailId.value).subscribe(t=>{200==t.status?this._httpService.postData(this.uploadForm.value).subscribe(t=>{this.showThisFile=!0,console.log(t),this.getForm(),this.uploadForm.reset(),this.successCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"User Details Submitted Successfully",popClass:"alert alert-success",popRoute:""})},t=>{this.showThisFile=!0,console.log(t),this.errorCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:t.error.message,popClass:"alert alert-danger",popRoute:""})}):this.inputJson.next({popShow:!0,popMsg:"Account already registered, Please use different Email Id and Mobile No",popClass:"alert alert-danger",popRoute:""})},t=>{this.inputJson.next({popShow:!0,popMsg:"Account already registered, Please use different Email Id and Mobile No",popClass:"alert alert-danger",popRoute:""})})):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}getForm(){this.allFormData=[],this._httpService.getData().subscribe(t=>{this.allFormData=[];let e=[];console.log("total response by the service",t),e=t,e.length>0&&e.forEach(t=>{let e=[];e=this.iterateValue(t.userRoleList),console.log("configData",e),e&&(t.userTypeVal=e[0].replace(/,+/g,",").replace(/(,\s*$)|(^,*)/,""),t.teamVal=e[1].replace(/,+/g,",").replace(/(,\s*$)|(^,*)/,""),t.departmentVal=e[2].replace(/,+/g,",").replace(/(,\s*$)|(^,*)/,"")),this.allFormData.push(t)}),this.filterDataArray=this.allFormData,this.dataArray=this.allFormData,this.tableSortFilter(null,null,null,null),console.log("after filter record",this.allFormData)})}deleteDate(t){this._httpService.deleteDataService(t).subscribe(t=>{this.getForm(),alert("Delete")})}editForm(t){this.edituserId=t.userId,this.edituserName=t.userName,this.editemailId=t.emailId,this.editloginId=t.loginId,this.editdesignation=t.designation,this.edituserType=t.userType,this.editmobileNo=t.mobileNo,this.editstatus=t.status,this.editdepartment=t.department,this.editteam=t.team,this.modalPopup=!0,console.log(t),this.photoUid=t.photoUid,this.outputValue.photoId=t.photoId,this.docId2.next({docId:t.photoId,docUid:t.photoUid})}getUsertype(){this._httpService.getUsertypeService().subscribe(t=>{this.userType=t.data,this.userType.push({roleId:null,userId:null,userRole:"Admin Assistant",userRoleKey:"Admin_Assistant",userRoleName:"Admin Assistant"}),console.log(this.userType),this.getDpartment()},t=>{console.log(t)})}getDpartment(){this._httpService.getDepartmentService().subscribe(t=>{this.department=t.data,console.log(this.department),this.getTeam()},t=>{console.log(t)})}getTeam(){this._httpService.getTeamService().subscribe(t=>{this.team=t.data,console.log(this.team)},t=>{console.log(t)})}formUpdate(){console.log(this.EditPopupForm.value);let t={};t=this.EditPopupForm.value,this._httpService.updateFormService(this.EditPopupForm.value).subscribe(e=>{this._httpService.inactiveUser(t.loginId,t.userId,t.status).subscribe(t=>{console.log(t)},t=>{console.log(t)}),this.getForm(),this.modalPopup=!1,console.log(e)},t=>{console.log(t)})}closePopup(){this.updateRoles.reset(),this.totalAddedRoles=[],this.modalPopup=!1,this.addRolesPopUp=!1}manageRoles(t){this.dynamicInfoForm=[],console.log("manage roles details",t),this.addRolesPopUp=!0,this.mr_UserRolesUpdate=t,this.mr_edituserId=t.userId,this.getAddedRolesMasters(t.userId)}getAddedRolesMasters(t){this.loadingSpinner=!0,this._httpService.getAddedRolesMasters(t).subscribe(t=>{console.log(t),this.loadingSpinner=!1,this.totalAddedRoles=t.userRoleList,t.userRoleList.length>0?this.invalidForm=!1:this.invalidForm=!0,this.getTotalRoles()},t=>{this.loadingSpinner=!1,console.log(t),this.getTotalRoles()})}getTotalRoles(){this._httpService.getUsertypeService().subscribe(t=>{console.log("users roles",t),t.data.length>0?(t.data.forEach(t=>{console.log(t),this.totalAddedRoles.indexOf(t.userRole)<0?t.isChecked=!1:t.isChecked=!0,this.dynamicInfoForm.push(t),this.addMultipleRoles.push(this.addMultipleRolesForm())}),console.log(this.dynamicInfoForm)):this.inputJson.next({popShow:!0,popMsg:"Unable to find any roles.",popClass:"alert alert-success",popRoute:""})},t=>{this.inputJson.next({popShow:!0,popMsg:"Unable to find any roles.",popClass:"alert alert-danger",popRoute:""}),console.log(t)})}addMultipleRolesForm(){return this._fb.group({userRoleList:[null,[s.h.required]]})}saveMultipleRoles(){this.loadingSpinner=!0;let t={};t={userId:this.mr_edituserId,userRoleList:this.totalAddedRoles},this._httpService.postRoleTousers(t).subscribe(t=>{this.addRolesPopUp=!1,this.loadingSpinner=!1,console.log(t),this.updateRoles.reset(),this.totalAddedRoles=[],this.inputJson.next({popShow:!0,popMsg:"Roles has been added successfully.",popClass:"alert alert-success",popRoute:""})},t=>{this.loadingSpinner=!1,console.log(t),this.inputJson.next({popShow:!0,popMsg:"Something went wrong.",popClass:"alert alert-danger",popRoute:""})})}clickToCheck(t,e){if(console.log(e),1==t.target.checked)this.totalAddedRoles.push(e.userRole),console.log("main 1",this.totalAddedRoles);else if(0==t.target.checked){let t=this.totalAddedRoles.indexOf(e.userRole);this.totalAddedRoles.splice(t,1),console.log("main 2",this.totalAddedRoles)}}ngDoCheck(){this.totalAddedRoles.length>0?this.invalidForm=!1:this.invalidForm=!0}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"userName",label:"Name",type:"string"},{key:"emailId",label:"Email Id",type:"string"},{key:"mobileNo",label:"Mobile No",type:"string"},{key:"designation",label:"Designation",type:"string"},{key:"departmentVal",label:"Department",type:"string"},{key:"userType",label:"Role",type:"string"},{key:"teamVal",label:"Team",type:"string"},{key:"status",label:"Status",type:"string"}],actualArray:this.allFormData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};C.ctorParameters=()=>[{type:S.a},{type:x.a},{type:l.a},{type:s.b}],C=a.b([Object(n.n)({selector:"app-manage-user",template:a.c(r("1y+u")).default,styles:[a.c(r("fKb7")).default]})],C);let A=class{constructor(t,e){this._http=t,this._apiURL=e,this.apiURL=this._apiURL.reraMasterAPI+"//zone/"}postData(t){return this._http.securepost(this._apiURL.reraMasterAPI+"zone/saveZoneDetails",t)}getData(){return this._http.secureget(this._apiURL.reraMasterAPI+"zone/getAllZone")}deleteDataService(t){return this._http.delete(this.apiURL+t)}updateFormService(t){return alert(this.apiURL+"updateZoneDetails"),alert(t.status),this._http.put(this.apiURL+"updateZoneDetails",t)}};A.ctorParameters=()=>[{type:i.a},{type:l.a}],A=a.b([Object(n.B)({providedIn:"root"})],A);let N=class{constructor(t){this._httpService=t,this.alphabetRegex="^[a-zA-Z ]*$",this.loader=!1,this.errorCheck=!1,this.successCheck=!1,this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.uploadForm=new s.d({zoneName:new s.c(null,[s.h.required,s.h.minLength(4),s.h.pattern(this.alphabetRegex)]),officeAddress:new s.c(null,[s.h.required,s.h.minLength(4)]),status:new s.c}),this.EditPopupForm=new s.d({zoneId:new s.c,zoneName:new s.c(null,[s.h.required,s.h.pattern(this.alphabetRegex)]),officeAddress:new s.c,status:new s.c}),this.getForm()}formSubmit(){this.loader=!0,this.uploadForm.valid?this._httpService.postData(this.uploadForm.value).subscribe(t=>{console.log(t),this.getForm(),this.uploadForm.reset(),this.successCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Zone Details Submitted Successfully",popClass:"alert alert-success",popRoute:"home"})},t=>{console.log(t),this.errorCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""})}):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}getForm(){this._httpService.getData().subscribe(t=>{this.allData=t,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default")})}deleteDate(t){this._httpService.deleteDataService(t).subscribe(t=>{this.getForm(),alert("Delete")})}editForm(t){this.editzoneId=t.userId,this.editzoneName=t.zoneName,this.editofficeAdderss=t.officeAddress,this.editstatus=t.status}formUpdate(){this._httpService.updateFormService(this.EditPopupForm.value).subscribe(t=>{this.getForm(),alert("Update Successfully")})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"zoneName",label:"Zone Office",type:"string"},{key:"officeAddress",label:"Office Address",type:"string"},{key:"status",label:"Status",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};N.ctorParameters=()=>[{type:A}],N=a.b([Object(n.n)({selector:"app-manage-zone",template:a.c(r("HBOp")).default,styles:[a.c(r("poq+")).default]})],N);let w=class{constructor(t){this._http=t}ngOnInit(){}};w.ctorParameters=()=>[{type:i.a}],w=a.b([Object(n.n)({selector:"app-master-home",template:a.c(r("bD79")).default,styles:[a.c(r("6r5/")).default]})],w);var F=r("yfuv");let P=class{constructor(t,e){this._http=t,this._apiURL=e,this.deleteMappingWithSop=t=>this._http.secureget(this._apiURL.onlineEnquiry+"secure/master/delete-enquiry/"+t),this.editSOPdata=t=>this._http.securepost(this._apiURL.onlineEnquiry+"secure/master/update-enquiry",t)}postData(t){return this._http.securepost(this._apiURL.onlineEnquiry+"secure/master/save-enquiry",t)}getData(){return this._http.secureget(this._apiURL.onlineEnquiry+"secure/master/find-all")}updateData(t){return this._http.secureput(this._apiURL.onlineEnquiry+"secure/master/update-enquiry",t)}};P.ctorParameters=()=>[{type:i.a},{type:l.a}],P=a.b([Object(n.B)({providedIn:"root"})],P);let I=class{constructor(t,e,r,a){this._router=t,this._actRoute=e,this._validater=r,this._httpService=a,this.editSopData={},this.sopModel=!1,this.loader=!1,this.errorMsg=!1,this.successCheck=!1,this.errorCheck=!1,this.com=new Array,this.com1=new Array,this.storeData=new Array,this.inputJson=new c.a({}),this.modalPopup=!1,this.sopCode="SOP123456",this.confirmationEventB=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10,this.deleteMappingWithSop=t=>{this._httpService.deleteMappingWithSop(t).subscribe(t=>{this.getForm(),this.inputJson.next({popShow:!0,popMsg:"Sop has been deleted successfully.",popClass:"alert alert-success",popRoute:""})},t=>{console.error("error showing",t)})}}ngOnInit(){this.sopCode="SOP"+Math.floor(1e5+9e5*Math.random()),this.uploadForm=new s.d({code:new s.c(null,s.h.required),description:new s.c(null,s.h.required),type:new s.c("",s.h.required),department:new s.c("",s.h.required),enqSeq:new s.c(null)}),this.EditPopupForm=new s.d({enqId:new s.c(null,s.h.required),code:new s.c(null,s.h.required),description:new s.c(null,s.h.required),type:new s.c("",s.h.required),department:new s.c("",s.h.required),enqSeq:new s.c(null)}),this.getForm()}formSubmit(){console.log(this.uploadForm.value),this.loader=!0,this.uploadForm.valid?this._httpService.postData(this.uploadForm.value).subscribe(t=>{"200"==t.status?(console.log(t),this.getForm(),this.removedKeyword=["code"],this.resetterOfForm(this.uploadForm.controls,this.removedKeyword,this.uploadForm),this.successCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-success",popRoute:""})):(this.errorCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-danger",popRoute:""}))},t=>{this.errorCheck=!0,this.loader=!1,console.log(t),this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""})}):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}getForm(){this._httpService.getData().subscribe(t=>{console.log(t),this.allData=t.data,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default")})}editData(t){this.enqId=t.enqId,this.code=t.code,this.description=t.description,this.type=t.type,this.department=t.department,this.enqSeq=t.enqSeq,this.modalPopup=!0}closePopup(){this.modalPopup=!1}formUpdate(){this.EditPopupForm.valid&&this._httpService.updateData(this.EditPopupForm.value).subscribe(t=>{console.log(t),"200"==t.status?(console.log(t),this.getForm(),this.modalPopup=!1,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-success",popRoute:""})):(this.errorCheck=!0,this.loader=!1,this.modalPopup=!1,this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-danger",popRoute:""}))},t=>{console.log(t),this.loader=!1,this.modalPopup=!1,this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-danger",popRoute:""})})}onChange(t){this.allData=this.storeData.filter(e=>e.type.startsWith(t))}mapping(t){this._router.navigate(["master/enquiry-field-mapping/"+t])}viewMappedEnquiries(){this._router.navigate(["master/master-enquiry/view-mapped-enquiry"])}resetterOfForm(t,e,r){this.sopCode="SOP"+Math.floor(1e5+9e5*Math.random()),Object.keys(t).forEach(t=>{e.includes(t)||r.controls[t].reset()})}manageSOPs(){this._router.navigate(["master/master-enquiry/non-mapping-list"])}showConfirmation(t,e){this.sopId=t,this.confirmationEventB.next({flag:!0,messageV:"<strong><i>"+e+"</i></strong><br />Field mapping will be deleted and it can not be undone. Are you sure want to delete this SOP?"})}confirmationEvent(t){"OK"==t&&this.deleteMappingWithSop(this.sopId)}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"code",label:"SOP Code",type:"string"},{key:"description",label:"SOP Description",type:"string"},{key:"type",label:"SOP Type",type:"string"},{key:"enqSeq",label:"Enquiry Sequence",type:"string"},{key:"department",label:"Department",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};I.ctorParameters=()=>[{type:u.e},{type:u.a},{type:x.a},{type:P}],I=a.b([Object(n.n)({selector:"app-master-enquiry",template:a.c(r("gDpk")).default,styles:[a.c(r("9o7g")).default]})],I);let k=class{constructor(t,e){this._http=t,this._apiURL=e}postData(t){return this._http.securepost(this._apiURL.onlineEnquiry+"secure/field/save-field",t)}getData(){return this._http.secureget(this._apiURL.onlineEnquiry+"secure/field/find-all")}updateData(t){return this._http.secureput(this._apiURL.onlineEnquiry+"secure/field/update-field",t)}};k.ctorParameters=()=>[{type:i.a},{type:l.a}],k=a.b([Object(n.B)({providedIn:"root"})],k);let T=class{constructor(t,e){this._validater=t,this._httpService=e,this.alreadyInsertedBlock=!1,this.alreadyInsertedForm1=!1,this.alreadyInsertedForm2=!1,this.alreadyInsertedForm3=!1,this.loader=!1,this.errorMsg=!1,this.successCheck=!1,this.errorCheck=!1,this.com=new Array,this.com1=new Array,this.modalPopup=!1,this.storeData=new Array,this.inputJson=new c.a({}),this.enquiryCode="EN1232323",this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.enquiryCode="EN"+Math.floor(1e5+9e5*Math.random()),this.uploadForm=new s.d({code:new s.c(null,s.h.required),lebel:new s.c(null,s.h.required),type:new s.c("",s.h.required)}),this.EditPopupForm=new s.d({id:new s.c(null,s.h.required),enquiryId:new s.c(null,s.h.required),code:new s.c(null,s.h.required),lebel:new s.c(null,s.h.required),type:new s.c("",s.h.required)}),this.getForm()}formSubmit(){console.log(this.uploadForm.value),this.loader=!0,this.uploadForm.valid?this._httpService.postData(this.uploadForm.value).subscribe(t=>{console.log(t),this.getForm(),this.removedKeyword=["code"],this.resetterOfForm(this.uploadForm.controls,this.removedKeyword,this.uploadForm),this.successCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Fields Details Submitted Successfully",popClass:"alert alert-success",popRoute:""})},t=>{this.errorCheck=!0,this.loader=!1,console.log(t),this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""})}):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}getForm(){this._httpService.getData().subscribe(t=>{if(console.log(t),"200"==t.status){this.allData=t.data,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default");this.allData}})}editData(t){this.mainId=t.id,this.enquiryId=t.enquiryId,this.code=t.code,this.type=t.type,this.lebel=t.lebel,this.modalPopup=!0,console.log(t)}closePopup(){this.modalPopup=!1}formUpdate(){console.log(this.EditPopupForm.value),this.EditPopupForm.valid&&this._httpService.updateData(this.EditPopupForm.value).subscribe(t=>{console.log(t),this.getForm(),this.modalPopup=!1,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Updated Successfully",popClass:"alert alert-success",popRoute:""})},t=>{console.log(t),this.loader=!1,this.modalPopup=!1,this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-danger",popRoute:""})})}onChange(t){this.allData=this.storeData.filter(e=>e.type.startsWith(t))}resetterOfForm(t,e,r){this.enquiryCode="EN"+Math.floor(1e5+9e5*Math.random()),Object.keys(t).forEach(t=>{e.includes(t)||r.controls[t].reset()})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"code",label:"Field Code",type:"string"},{key:"lebel",label:"Field Label",type:"string"},{key:"type",label:"Field Type",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};T.ctorParameters=()=>[{type:x.a},{type:k}],T=a.b([Object(n.n)({selector:"app-master-field",template:a.c(r("ZBQ9")).default,styles:[a.c(r("+gYW")).default]})],T);let E=class{constructor(t,e){this._HttpClient=t,this._apiURL=e}postDataValSubmit(t){return this._HttpClient.securepost(this._apiURL.rera_tp+"secure/town-plan/save-townplan",t)}getDataofTownPlanService(t){return console.log("service+++"+t),this._HttpClient.secureget(this._apiURL.rera_tp+"secure/town-plan/district-code/"+t)}updateFormService(t){return this._HttpClient.secureput(this._apiURL.rera_tp+"secure/town-plan/update-tp",t)}deleteFormService(t){return this._HttpClient.secureput(this._apiURL.rera_tp+"secure/town-plan/delete-by-id/"+t,null)}};E.ctorParameters=()=>[{type:i.a},{type:l.a}],E=a.b([Object(n.B)({providedIn:"root"})],E);let M=class{constructor(t,e,r){this._httpService=t,this.router=r,this.alphabetRegex="^[a-zA-Z ]*$",this.loader=!1,this.errorCheck=!1,this.successCheck=!1,this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){const t=sessionStorage.getItem("districtName"),e=sessionStorage.getItem("districtCode");this.distCode=e,this.townPlaningForm=new s.d({tpName:new s.c(null,s.h.required),tpDescription:new s.c(null,s.h.required),districtName:new s.c(t),districtCode:new s.c(e)}),this.EditPopupForm=new s.d({tpName:new s.c(null,s.h.required),tpDescription:new s.c(null,s.h.required),districtName:new s.c(t),districtCode:new s.c(e),tpId:new s.c(this.edittpId)}),this.getDataofTownPlanning(e)}prevTab(){this.router.navigate(["master/manage-subdistrict"])}formSubmit(){console.log(this.townPlaningForm.value),this.loader=!0,console.log(this.townPlaningForm.valid),this.townPlaningForm.valid?this._httpService.postDataValSubmit(this.townPlaningForm.value).subscribe(t=>{console.log(this.townPlaningForm.value),this.getDataofTownPlanning(this.distCode),this.successCheck=!0,this.loader=!1,this.townPlaningForm.controls.tpName.reset(),this.townPlaningForm.controls.tpDescription.reset(),this.inputJson.next({popShow:!0,popMsg:"Town Planning Details Submitted Successfully",popClass:"alert alert-success",popRoute:""})},t=>{this.errorCheck=!0,this.loader=!1,console.log(t),this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""})}):(this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}),this.errorCheck=!0)}editForm(t){console.log(t),this.edittpName=t.tpName,this.edittpDescription=t.tpDescription,this.editdistrictName=t.districtName,this.editdistrictCode=t.districtCode,this.edittpId=t.tpId,this.popShow=!0}closePop(){this.popShow=!1}formUpdate(){this._httpService.updateFormService(this.EditPopupForm.value).subscribe(t=>{console.log("updated successfully"),this.getDataofTownPlanning(this.distCode)},t=>{console.log(t.error)})}getDataofTownPlanning(t){console.log(t),this._httpService.getDataofTownPlanService(t).subscribe(t=>{console.log(t),"200"==t.status?(console.log(t),this.allData=t.data,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default"),console.log(t)):this.allData=[]},t=>{console.log(t)})}deleteForm(t){this._httpService.deleteFormService(t.tpId).subscribe(t=>{console.log("Deleted successfully"),this.getDataofTownPlanning(this.distCode)},t=>{console.log(t.error)})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"tpName",label:"Town Planning Name",type:"string"},{key:"tpDescription",label:"Town Planning Descrioption",type:"string"},{key:"districtName",label:"District Name",type:"string"},{key:"districtCode",label:"District code",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};M.ctorParameters=()=>[{type:E},{type:x.a},{type:u.e}],M=a.b([Object(n.n)({selector:"app-town-planning",template:a.c(r("JUfe")).default,styles:[a.c(r("ui/f")).default]})],M);let _=class{constructor(){}ngOnInit(){}};_=a.b([Object(n.n)({selector:"app-all-user-details",template:a.c(r("RCpw")).default,styles:[a.c(r("MxuW")).default]})],_);let R=class{constructor(t,e){this._http=t,this._apiURL=e,this.deleteMapping=(t,e)=>this._http.secureget(this._apiURL.onlineEnquiry+"secure/master/remove-enquiry-field-mapping/"+t+"/"+e),this.addNewMapping=(t,e)=>this._http.secureget(this._apiURL.onlineEnquiry+"secure/master/add-enquiry-field-mapping/"+t+"/"+e)}postData(t){return this._http.securepost(this._apiURL.onlineEnquiry+"secure/master/save-enquiry",t)}getFieldData(t){return this._http.secureget(this._apiURL.onlineEnquiry+"secure/field/type/"+t)}updateData(t){return this._http.secureput(this._apiURL.onlineEnquiry+"secure/master/enquiry-field-mapping",t)}getEnquiryData(t){return this._http.secureget(this._apiURL.onlineEnquiry+"secure/master/"+t)}};R.ctorParameters=()=>[{type:i.a},{type:l.a}],R=a.b([Object(n.B)({providedIn:"root"})],R);let U=class{constructor(t,e,r,a){this._router=t,this._validation=e,this._routeAct=r,this._httpService=a,this.loader=!1,this.errorMsg=!1,this.successCheck=!1,this.errorCheck=!1,this.com=new Array,this.com1=new Array,this.fieldMasterModel=new Array,this.storeData=new Array,this.inputJson=new c.a({}),this.enquiriesCode=[],this.mappedEnquiries=[],this.confirmationEventB=new c.a({}),this.deleteMapping=t=>{this._httpService.deleteMapping(this.mapId,t).subscribe(t=>{this.getData(this.mapId),this.inputJson.next({popShow:!0,popMsg:"Field mapping has been deleted successfully.",popClass:"alert alert-success",popRoute:""})},t=>{console.error("error showing",t),this.inputJson.next({popShow:!0,popMsg:"Somthing went wrong.",popClass:"alert alert-danger",popRoute:""})})}}ngOnInit(){this.mapId=this._routeAct.snapshot.params.enqId,this.getData(this.mapId)}formSearch(t){this.loader=!0,this._httpService.getFieldData(t).subscribe(t=>{this.allData=t,console.log(this.allData)})}getData(t){this._httpService.getEnquiryData(t).subscribe(t=>{this.allEnqData=t.data,this.enquiriesCode=[],this.allEnqData.fieldMasterModel.length>0?(this.mappedEnquiries=this.allEnqData.fieldMasterModel,this.allEnqData.fieldMasterModel.forEach(t=>{this.enquiriesCode.push(t.code)})):(this.mappedEnquiries=[],this.enquiriesCode=[])})}mapping(t){if(this.enquiriesCode.includes(t.code))this.inputJson.next({popShow:!0,popMsg:"This field is already mapped with the enquiry.",popClass:"alert alert-danger",popRoute:""});else{t.enquiryId=this.mapId;let e=this.allEnqData;e.fieldMasterModel=[t],console.log(e),this._httpService.addNewMapping(this.mapId,t.id).subscribe(t=>{console.log(t),this.getData(this.mapId),this.inputJson.next({popShow:!0,popMsg:"Enquiry mapped successfully",popClass:"alert alert-success",popRoute:""})},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:t.error.message,popClass:"alert alert-danger",popRoute:""})})}}showConfirmation(t){this.fieldMappingId=t,this.confirmationEventB.next({flag:!0,messageV:"Are you sure want to delete this field mapping?"})}confirmationEvent(t){"OK"==t&&this.deleteMapping(this.fieldMappingId)}};U.ctorParameters=()=>[{type:u.e},{type:x.a},{type:u.a},{type:R}],U=a.b([Object(n.n)({selector:"app-enquiry-field-mapping",template:a.c(r("kkhc")).default,styles:[a.c(r("vXNJ")).default]})],U);let O=class{constructor(t,e){this._http=t,this._apiURL=e}postData(t){return this._http.securepost(this._apiURL.reraMasterAPI+"bank/saveBankDetails",t)}getData(){return this._http.secureget(this._apiURL.reraMasterAPI+"bank/getAllBank")}updateFormService(t){return this._http.secureput(this._apiURL.reraMasterAPI+"bank/updateBankDetails/",t)}};O.ctorParameters=()=>[{type:i.a},{type:l.a}],O=a.b([Object(n.B)({providedIn:"root"})],O);let q=class{constructor(t,e){this._httpService=t,this._validation=e,this.loader=!1,this.errorCheck=!1,this.successCheck=!1,this.modalPopup=!1,this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getForm(),this.uploadForm=new s.d({bankName:new s.c(null,[s.h.required])}),this.EditPopupForm=new s.d({bankName:new s.c(null)})}formSubmit(){this.loader=!0,console.log(this.uploadForm.value),this.uploadForm.valid?this._httpService.postData(this.uploadForm.value).subscribe(t=>{console.log(t),this.getForm(),this.uploadForm.reset(),this.successCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Bank Details Submitted Successfully",popClass:"alert alert-success",popRoute:""})},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}),this.errorCheck=!0,this.loader=!1}):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}getForm(){this._httpService.getData().subscribe(t=>{this.allData=t,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default"),console.log(t)})}editForm(t){this.modalPopup=!0,this.bankName=t.bankName}deleteRole(t){this.allData.splice(t,1)}popupClose(){this.modalPopup=!1}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"bankName",label:"Role Name",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};q.ctorParameters=()=>[{type:O},{type:x.a}],q=a.b([Object(n.n)({selector:"app-manage-role",template:a.c(r("4ZmG")).default,styles:[a.c(r("LmzG")).default]})],q);let L=class{constructor(t,e){this._http=t,this._apiURL=e}postData(t){return this._http.securepost(this._apiURL.reraMasterUserAPI+"save",t)}getData(){return this._http.secureget(this._apiURL.reraMasterUserAPI+"depterment/all")}updateFormService(t){return this._http.secureput(this._apiURL.reraMasterUserAPI+"depterment/modify",t)}};L.ctorParameters=()=>[{type:i.a},{type:l.a}],L=a.b([Object(n.B)({providedIn:"root"})],L);let J=class{constructor(t){this._httpService=t,this.loader=!1,this.errorCheck=!1,this.successCheck=!1,this.modalPopup=!1,this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getForm(),this.uploadForm=new s.d({userDept:new s.c(null,[s.h.required])}),this.EditPopupForm=new s.d({deptId:new s.c(""),userDept:new s.c(null)})}formSubmit(){this.loader=!0,console.log(this.uploadForm.value),this.uploadForm.valid?this._httpService.postData(this.uploadForm.value).subscribe(t=>{console.log(t),this.getForm(),this.uploadForm.reset(),this.successCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:"Bank Details Submitted Successfully",popClass:"alert alert-success",popRoute:""})},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}),this.errorCheck=!0,this.loader=!1}):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}getForm(){this._httpService.getData().subscribe(t=>{this.allData=t.data,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default"),console.log(t)})}editForm(t){this.modalPopup=!0,this.deptId=t.deptId,this.userDept=t.userDept}formUpdate(){console.log("hhhhhhhhhh"),this._httpService.updateFormService(this.EditPopupForm.value).subscribe(t=>{console.log("hhhhhhhhhh"),this.modalPopup=!1,this.getForm(),this.inputJson.next({popShow:!0,popMsg:"Department updated successfully!!",popClass:"alert alert-success",popRoute:""})})}deleteRole(t){this.allData.splice(t,1)}popupClose(){this.modalPopup=!1}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"userDept",label:"Department Name",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};J.ctorParameters=()=>[{type:L}],J=a.b([Object(n.n)({selector:"app-manage-department",template:a.c(r("PrDS")).default,styles:[a.c(r("D20y")).default]})],J);let j=class{constructor(t,e){this._http=t,this._apiURL=e}masterModulePostService(t){return this._http.post(this._apiURL.reraMasterAPI+"tooltip/entity/save",t)}masterFormPostService(t){return this._http.post(this._apiURL.reraMasterAPI+"tooltip/form/save",t)}masterSectionPostService(t){return this._http.post(this._apiURL.reraMasterAPI+"tooltip/section/save",t)}masterTooltipPostService(t){return this._http.post(this._apiURL.reraMasterAPI+"tooltip/attribute/save",t)}masterModuleGetService(){return this._http.get(this._apiURL.reraMasterAPI+"tooltip/entity/all")}masterFormGetService(t){return this._http.get(this._apiURL.reraMasterAPI+"tooltip/form/entity-id/"+t)}masterFormAllGetService(){return this._http.get(this._apiURL.reraMasterAPI+"tooltip/form/all")}masterSectionGetService(t){return this._http.get(this._apiURL.reraMasterAPI+"tooltip/section/form-id/"+t)}masterSectionAllGetService(){return this._http.get(this._apiURL.reraMasterAPI+"tooltip/section/all")}masterTooltipGetService(){return this._http.get(this._apiURL.reraMasterAPI+"tooltip/attribute/all")}editModuleService(t){return this._http.put(this._apiURL.reraMasterAPI+"tooltip/entity/modify",t)}editFormService(t){return this._http.post(this._apiURL.reraMasterAPI+"tooltip/form/modify",t)}editSectionService(t){return this._http.post(this._apiURL.reraMasterAPI+"tooltip/section/modify",t)}editTooltipService(t){return this._http.post(this._apiURL.reraMasterAPI+"tooltip/attribute/modify",t)}};j.ctorParameters=()=>[{type:i.a},{type:l.a}],j=a.b([Object(n.B)({providedIn:"root"})],j);let V=class{constructor(t,e){this._tooltipSerice=t,this._fb=e,this.editPopup=!1,this.manageModule=!1,this.manageToolTip=!0,this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.manageModuleForm=new s.d({code:new s.c(null,s.h.required),name:new s.c(null,s.h.required)}),this.manageFormForm=new s.d({entityIdFK:new s.c("",s.h.required),code:new s.c(null,s.h.required),name:new s.c(null,s.h.required)}),this.manageSectionForm=new s.d({frmSecIdFK:new s.c("",s.h.required),code:new s.c(null,s.h.required),name:new s.c(null,s.h.required)}),this.tooltipForm=new s.d({frmIdAttrFK:new s.c(""),secIdAttrFK:new s.c(""),key:new s.c(null,s.h.required),toolTipText:new s.c(null,s.h.required)}),this.updateModuleForm=new s.d({id:new s.c("",s.h.required),code:new s.c(null,s.h.required),name:new s.c(null,s.h.required)}),this.updatePopupForm=new s.d({id:new s.c("",s.h.required),code:new s.c(null,s.h.required),name:new s.c(null,s.h.required)}),this.updateSectionForm=new s.d({id:new s.c("",s.h.required),code:new s.c(null,s.h.required),name:new s.c(null,s.h.required)}),this.updateTooltipForm=new s.d({id:new s.c(""),key:new s.c(null,s.h.required),toolTipText:new s.c(null,s.h.required)}),this.getModule(),this.getFormAll(),this.getAllSection(),this.getTooltiip()}moduleSubmit(){console.log(this.manageModuleForm.value),this._tooltipSerice.masterModulePostService(this.manageModuleForm.value).subscribe(t=>{this.manageModuleForm.reset(),this.getModule(),console.log(t)},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:t.error.message,popClass:"alert alert-danger",popRoute:""})})}formSubmit(){console.log(this.manageFormForm.value),this._tooltipSerice.masterFormPostService(this.manageFormForm.value).subscribe(t=>{this.manageFormForm.reset(),this.getFormAll(),console.log(t)},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:t.error.message,popClass:"alert alert-danger",popRoute:""})})}sectionSubmit(){console.log(this.manageSectionForm.value),this._tooltipSerice.masterSectionPostService(this.manageSectionForm.value).subscribe(t=>{this.manageSectionForm.reset(),this.getAllSection(),console.log(t)},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:t.error.message,popClass:"alert alert-danger",popRoute:""})})}tooltipSubmit(){console.log(this.tooltipForm.value),this._tooltipSerice.masterTooltipPostService(this.tooltipForm.value).subscribe(t=>{console.log(t),this.tooltipForm.reset(),this.getTooltiip()},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:t.error.message,popClass:"alert alert-danger",popRoute:""})})}getModule(){this._tooltipSerice.masterModuleGetService().subscribe(t=>{console.log(t),this.moduleAllData=t.data},t=>{console.log(t)})}getFormAll(){this._tooltipSerice.masterFormAllGetService().subscribe(t=>{console.log(t),this.allFormData=t.data},t=>{console.log(t)})}getAllSection(){this._tooltipSerice.masterSectionAllGetService().subscribe(t=>{console.log(t),this.allSectionData=t.data},t=>{console.log(t)})}getTooltiip(){this._tooltipSerice.masterTooltipGetService().subscribe(t=>{console.log(t),this.allTooltipData=t.data,this.filterDataArray=this.allTooltipData,this.dataArray=this.allTooltipData,this.tableSortFilter(null,null,null,"default")},t=>{console.log(t)})}getFormData(t){console.log(t),this._tooltipSerice.masterFormGetService(t.target.value).subscribe(t=>{this.formAllData=t.data,console.log(t)},t=>{console.log(t)}),this.getSectionData(t.target.value)}getSectionData(t){console.log(t),this._tooltipSerice.masterSectionGetService(t.target.value).subscribe(t=>{this.sectionAllData=t.data,console.log(t)},t=>{console.log(t)})}editModule(t){this.moduleId=t.id,this.moduleCode=t.code,this.moduleName=t.name,this.editPopup=!0,this.editModulePopup=!0,this.editFormPopup=!1,this.editSectionPopup=!1,this.editTooltipPopup=!1}editForm(t){this.formId=t.id,this.formCode=t.code,this.formName=t.name,this.editPopup=!1,this.editModulePopup=!1,this.editFormPopup=!1,this.editSectionPopup=!1,this.editTooltipPopup=!0}editSection(t){this.sectionId=t.id,this.sectionCode=t.code,this.sectionName=t.name,this.editPopup=!0,this.editModulePopup=!1,this.editFormPopup=!1,this.editSectionPopup=!0,this.editTooltipPopup=!1}editTooltip(t){this.tooltipId=t.id,this.tooltipCode=t.key,this.tooltipName=t.toolTipText,this.editPopup=!0,this.editModulePopup=!1,this.editFormPopup=!1,this.editSectionPopup=!1,this.editTooltipPopup=!0}updateModuleFormSubmit(){this._tooltipSerice.editModuleService(this.updateModuleForm.value).subscribe(t=>{console.log(t),this.editPopup=!1,this.getModule()},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:t.error.message,popClass:"alert alert-danger",popRoute:""})})}updateFormSubmit(){this._tooltipSerice.editFormService(this.updatePopupForm.value).subscribe(t=>{console.log(t),this.editPopup=!1,this.getFormAll()},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:t.error.message,popClass:"alert alert-danger",popRoute:""})})}updateSectionFormSubmit(){this._tooltipSerice.editSectionService(this.updateSectionForm.value).subscribe(t=>{console.log(t),this.editPopup=!1,this.getAllSection()},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:t.error.message,popClass:"alert alert-danger",popRoute:""})})}updateTooltipFormSubmit(){this._tooltipSerice.editTooltipService(this.updateTooltipForm.value).subscribe(t=>{console.log(t),this.editPopup=!1,this.getTooltiip()},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:t.error.message,popClass:"alert alert-danger",popRoute:""})})}closePopup(){this.editPopup=!1}show(t){1==t&&(this.manageModule=!1,this.manageForm=!1,this.manageSection=!1,this.manageToolTip=!0),2==t&&(this.manageModule=!0,this.manageForm=!1,this.manageSection=!1,this.manageToolTip=!1),3==t&&(this.manageModule=!1,this.manageForm=!0,this.manageSection=!1,this.manageToolTip=!1),4==t&&(this.manageModule=!1,this.manageForm=!1,this.manageSection=!0,this.manageToolTip=!1)}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"key",label:"Tooltip Code",type:"string"},{key:"toolTipText",label:"Tooltip Name",type:"string"}],actualArray:this.allTooltipData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};V.ctorParameters=()=>[{type:j},{type:s.b}],V=a.b([Object(n.n)({selector:"app-manage-tooltip",template:a.c(r("J8Il")).default,styles:[a.c(r("+p0n")).default]})],V);let H=class{constructor(t,e){this._http=t,this._api=e}getData(){return this._http.get(this._api.projectRegAPI+"project-app/allprojectapprovalstate")}};H.ctorParameters=()=>[{type:i.a},{type:l.a}],H=a.b([Object(n.B)({providedIn:"root"})],H);let B=class{constructor(t){this._http=t,this.allData=new Array,this.prjProgress=1,this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getProgressData()}getProgressData(){this._http.getData().subscribe(t=>{"200"==t.status?(this.allData=t.data,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default")):(this.allData=[],this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default")),console.log(t)},t=>{this.allData=[],this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default"),console.log(t)})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"projectCreatedOn",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"projectAckNo",label:"Acknowledgement No",type:"string"},{key:"projectName",label:"Project Name",type:"string"},{key:"projectCreatedOn",label:"Created On",type:"date"},{key:"projectStatus",label:"Status",type:"string"},{key:"projectTeam",label:"TP Junior",type:"string"},{key:"tpsrTeam",label:"TP Senior",type:"string"},{key:"finTeam",label:"Finance",type:"string"},{key:"lgTeam",label:"Legal",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};B.ctorParameters=()=>[{type:H}],B=a.b([Object(n.n)({selector:"app-project-progress",template:a.c(r("iKVH")).default,styles:[a.c(r("l5Nd")).default]})],B);let G=class{constructor(t,e){this._http=t,this._api=e}getData(){return this._http.get(this._api.projectAltAPI+"allprojectapprovalstate")}};G.ctorParameters=()=>[{type:i.a},{type:l.a}],G=a.b([Object(n.B)({providedIn:"root"})],G);let $=class{constructor(t){this._http=t,this.allData=new Array,this.altProgress=1,this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getProgressData()}getProgressData(){this._http.getData().subscribe(t=>{"200"==t.status?(this.allData=t.data,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default")):(this.allData=[],this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default")),console.log(t)},t=>{this.allData=[],this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default"),console.log(t)})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"projectCreatedOn",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"projectAckNo",label:"Acknowledgement No",type:"string"},{key:"projectName",label:"Project Name",type:"string"},{key:"projectCreatedOn",label:"Created On",type:"date"},{key:"projectStatus",label:"Status",type:"string"},{key:"projectTeam",label:"TP Junior",type:"string"},{key:"tpsrTeam",label:"TP Senior",type:"string"},{key:"finTeam",label:"Finance",type:"string"},{key:"lgTeam",label:"Legal",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};$.ctorParameters=()=>[{type:G}],$=a.b([Object(n.n)({selector:"app-alteration-progress",template:a.c(r("V/M2")).default,styles:[a.c(r("9ath")).default]})],$);let W=class{constructor(t,e){this._http=t,this._api=e}getData(){return this._http.get(this._api.projectExtensionApi+"allprojectapprovalstate")}};W.ctorParameters=()=>[{type:i.a},{type:l.a}],W=a.b([Object(n.B)({providedIn:"root"})],W);let z=class{constructor(t){this._http=t,this.allData=new Array,this.extProgress=1,this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.searchForm=new s.d({searchKeyword:new s.c(null)}),this.getProgressData()}getProgressData(){this._http.getData().subscribe(t=>{"200"==t.status?(this.allData=t.data,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default")):(this.allData=[],this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default")),console.log(t)},t=>{this.allData=[],this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default"),console.log(t)})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"projectCreatedOn",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"projectAckNo",label:"Acknowledgement No",type:"string"},{key:"projectName",label:"Project Name",type:"string"},{key:"projectCreatedOn",label:"Created On",type:"date"},{key:"projectStatus",label:"Status",type:"string"},{key:"projectTeam",label:"TP Junior",type:"string"},{key:"tpsrTeam",label:"TP Senior",type:"string"},{key:"finTeam",label:"Finance",type:"string"},{key:"lgTeam",label:"Legal",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};z.ctorParameters=()=>[{type:W}],z=a.b([Object(n.n)({selector:"app-extension-progress",template:a.c(r("e4Bs")).default,styles:[a.c(r("HQWE")).default]})],z);let K=class{constructor(t,e){this._http=t,this._apiURL=e}ofData(){return this._http.secureget(this._apiURL.onlineEnquiry+"secure/master/find-mapped-all")}deleteMapping(t,e){return this._http.securepost(this._apiURL.onlineEnquiry+"secure/master/delete-mapped-eqr/"+t+"/"+e,null)}};K.ctorParameters=()=>[{type:i.a},{type:l.a}],K=a.b([Object(n.B)({providedIn:"root"})],K);let Y=class{constructor(t){this._service=t,this.allData=new Array,this.inputJson=new c.a({})}ngOnInit(){this.getListOfData()}getListOfData(){this._service.ofData().subscribe(t=>{this.allData=t.data},t=>{console.log(t)})}deleteEnquiriesMapping(t,e){this._service.deleteMapping(t,e).subscribe(t=>{this.inputJson.next({popShow:!0,popMsg:"Enquiries Mapping has been deleted successfully.",popClass:"alert alert-success",popRoute:""}),this.getListOfData()},t=>{this.inputJson.next({popShow:!0,popMsg:"something went wrong.",popClass:"alert alert-danger",popRoute:""}),console.log(t)})}};Y.ctorParameters=()=>[{type:K}],Y=a.b([Object(n.n)({selector:"app-mapped-enquiries",template:a.c(r("6Nos")).default,styles:[a.c(r("hAjZ")).default]})],Y);let Z=class{constructor(t,e){this._http=t,this._apiURL=e}getStateMaster(){return this._http.get(this._apiURL.reraMasterAPI+"state/getActiveState")}getDistrictService(t){return this._http.get(this._apiURL.reraMasterAPI+"district/getDistrictByStateUtCode"+t)}};Z.ctorParameters=()=>[{type:i.a},{type:l.a}],Z=a.b([Object(n.B)({providedIn:"root"})],Z);var X=r("zrEs");let Q=class{constructor(t,e,r,a){this.PinCodeMappingService=t,this._pinCodeValidation=e,this.formBuilder=r,this.router=a,this.StateData=new Array,this.DistrictData=new Array,this.arrayInfo=new Array,this.AllDataInfoArray=new Array,this.tooltipJson=new c.a({}),this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10,this.tableDataJson={status:"200",message:"data fetch successfully",data:[{id:"1",pincode:"201301",state_code:"up",state_name:"UTTAR PRADESH",district_name:"KANNAUJ",district_code:"KN"},{id:"2",pincode:"396001",state_code:"GZ",state_name:"GUJRAT",district_name:"VALSAD",district_code:"VL"}]}}ngOnInit(){this.getAllStatePinInfo(),this.getStateMasterForm(),this.searchForm=this.formBuilder.group({pinCode:new s.c("",[s.h.required]),stateCode:new s.c("",[s.h.required]),districtCode:new s.c("",[s.h.required])})}validatePinCode(t,e){this.validatePinCodeFunc(t,e)}validatePinCodeFunc(t,e){this.checkPincode=this._pinCodeValidation.checkPinCodeByState(t,e),0==this.checkPincode||6!=t.length?this.searchForm.get("pinCode").setErrors({incorrect:!0}):this.searchForm.get("pinCode").setErrors(null)}getStateMasterForm(){this.PinCodeMappingService.getStateMaster().subscribe(t=>{console.log(t),this.StateData=t})}openToolTip(t,e){this.tooltipJson.next({pageX:t.pageX,pageY:t.pageY,code:e})}deletePincode(t){console.log(t)}getDistrictByStateId(t,e){console.log(e),this.PinCodeMappingService.getDistrictService(e).subscribe(t=>{console.log(t),this.DistrictData=t}),this.validatePinCodeFunc(t,e)}searchFormSubmit(){this.pinCode=this.searchForm.controls.pinCode.value,this.stateUtCode=this.searchForm.controls.stateCode.value,this.DistCode=this.searchForm.controls.districtCode.value,this.arrayInfo={pinCode:this.pinCode,stateUtCode:this.stateUtCode,DistrictCode:this.DistCode},console.log(this.arrayInfo)}getAllStatePinInfo(){this.AllDataInfoArray=this.tableDataJson.data,this.filterDataArray=this.AllDataInfoArray,this.dataArray=this.AllDataInfoArray,this.tableSortFilter(null,null,null,"default"),console.log(this.AllDataInfoArray)}editeonSubmit(t){}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"pincode",label:"Pin Code",type:"string"},{key:"state_name",label:"State Name",type:"string"},{key:"district_name",label:"District Name",type:"string"}],actualArray:this.AllDataInfoArray,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};Q.ctorParameters=()=>[{type:Z},{type:X.a},{type:s.b},{type:u.e}],Q=a.b([Object(n.n)({selector:"app-pin-code-mapping",template:a.c(r("M9kW")).default,styles:[a.c(r("ySLn")).default]})],Q);let tt=class{constructor(t,e){this._apiURL=t,this._http=e}eSignPost(t){return this._http.securepost(this._apiURL.fileUploadAPI+"esign/add-authority",t)}eSignGet(){return this._http.secureget(this._apiURL.fileUploadAPI+"esign/get-all-authorities")}editDataPost(t){return this._http.securepost(this._apiURL.fileUploadAPI+"esign/update-authority",t)}eSignActiveInactive(t,e){return this._http.secureget(this._apiURL.fileUploadAPI+"esign/update-authoritystatus/"+t+"/"+e)}};tt.ctorParameters=()=>[{type:l.a},{type:i.a}],tt=a.b([Object(n.B)({providedIn:"root"})],tt);let et=class{constructor(t,e){this._eSignService=t,this._regex=e,this.eSignUid=new c.a({}),this.inputJson=new c.a({}),this.editDataValue={},this.editPopup=!1,this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.eSignForm=new s.d({authorityName:new s.c(null,s.h.required),srlNo:new s.c(null,s.h.required),status:new s.c(null),emailAddr:new s.c(null,[s.h.required,s.h.pattern(this._regex.emailRegex)])}),this.eSignFormEdit=new s.d({authId:new s.c(null,s.h.required),authorityName:new s.c(null,s.h.required),srlNo:new s.c(null,s.h.required),status:new s.c(null,s.h.required),emailAddr:new s.c(null,[s.h.required,s.h.pattern(this._regex.emailRegex)])}),this.eSignDataData()}formSubmit(){this.loader=!0,this._eSignService.eSignPost(this.eSignForm.value).subscribe(t=>{console.log(t),this.loader=!1,this.eSignForm.reset(),this.eSignDataData()},t=>{this.loader=!1,console.log(t)})}eSignDataData(){this._eSignService.eSignGet().subscribe(t=>{this.allData=t.data,this.filterDataArray=this.allData,this.dataArray=this.allData,this.tableSortFilter(null,null,null,"default"),console.log(t)},t=>{console.log(t)})}editData(t){this.editDataValue=t,this.editPopup=!0,console.log(t)}editDataPost(){this.loader=!0,this._eSignService.editDataPost(this.eSignFormEdit.value).subscribe(t=>{this.loader=!1,this.eSignDataData(),this.editPopup=!1,console.log(t)},t=>{this.loader=!1,console.log(t)})}statusChanged(t,e){console.log(e),1==e.target.checked?this.eSignStatus="ACTIVE":this.eSignStatus="INACTIVE",this._eSignService.eSignActiveInactive(t.authId,this.eSignStatus).subscribe(t=>{console.log(t),"200"==t.status&&this.eSignDataData()},t=>{console.log(t)})}closePop(){this.editPopup=!1}eSignTest(t){this.eSignUid.next({popUp:!0,type:"Authority",docUid:t})}getEsignValue(t){console.log(t),"Success"==t.eSign?this.inputJson.next({popShow:!0,popMsg:"eSign Completed",popClass:"alert alert-success",popRoute:""}):this.inputJson.next({popShow:!0,popMsg:"eSign not completed!",popClass:"alert alert-danger",popRoute:""})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"authorityName",label:"Authority Name",type:"string"},{key:"srlNo",label:"Serial Number",type:"string"},{key:"emailAddr",label:"Email Address",type:"string"}],actualArray:this.allData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};et.ctorParameters=()=>[{type:tt},{type:x.a}],et=a.b([Object(n.n)({selector:"app-e-sign-master",template:a.c(r("etRc")).default,styles:[a.c(r("vBct")).default]})],et);let rt=class{constructor(t,e){this._http=t,this._apiURL=e}postData(t){return this._http.securepost(this._apiURL.reraCompRegistrationAPI+"complain/secure/sop-contents/sop-save-master",t)}getData(){return this._http.secureget(this._apiURL.reraCompRegistrationAPI+"complain/secure/sop-contents/all")}updateFormService(t){return this._http.secureput(this._apiURL.reraCompRegistrationAPI+"complain/secure/sop-contents/modify",t)}};rt.ctorParameters=()=>[{type:i.a},{type:l.a}],rt=a.b([Object(n.B)({providedIn:"root"})],rt);let at=class{constructor(t,e,r,a){this._route=t,this._validation=e,this._httpService=r,this._fb=a,this.loader=!1,this.inputJson=new c.a({}),this.nature=1,this.modalPopup=!1,this.numberRegex="^[0-9]{10}$",this.alphabetRegex="^[a-zA-Z ]*$",this.errorCheck=!1,this.successCheck=!1,this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.sopContentForm=new s.d({sopContents:new s.c(null,[s.h.required]),formType:new s.c(null,[s.h.required])}),this.EditPopupForm=new s.d({sid:new s.c(null,[s.h.required]),sopContents:new s.c(null,[s.h.required]),formType:new s.c(null,[s.h.required])}),this.getAllNature()}getAllNature(){this._httpService.getData().subscribe(t=>{this.sopContentList=t.data,this.filterDataArray=this.sopContentList,this.dataArray=this.sopContentList,this.tableSortFilter(null,null,null,"default"),console.log("get all nature"),console.log(t)})}formSubmit(){let t={sopContents:this.sopContentForm.controls.sopContents.value,formType:this.sopContentForm.controls.formType.value};this.loader=!0,console.log(t),this._httpService.postData(t).subscribe(t=>{console.log("res"),console.log(t),this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-success",popRoute:""}),this.sopContentForm.reset(),this.getAllNature(),this.loader=!1},t=>{this.inputJson.next({popShow:!0,popMsg:"Something went wrong",popClass:"alert alert-danger",popRoute:""}),this.loader=!1,console.log(t)})}editForm(t){this.modalPopup=!0,console.log(t.sid),this.id=t.sid,this.sopContents=t.sopContents,this.type=t.formType}formUpdate(){console.log(this.EditPopupForm),this._httpService.updateFormService(this.EditPopupForm.value).subscribe(t=>{this.modalPopup=!1,this.getAllNature(),this.inputJson.next({popShow:!0,popMsg:"SOP updated successfully!!",popClass:"alert alert-success",popRoute:""})})}popupClose(){this.modalPopup=!1}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"sopContents",label:"Sop content",type:"string"},{key:"formType",label:"Type",type:"string"}],actualArray:this.sopContentList,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};at.ctorParameters=()=>[{type:u.e},{type:x.a},{type:rt},{type:s.b}],at=a.b([Object(n.n)({selector:"app-complain-sop",template:a.c(r("asNB")).default,styles:[a.c(r("fTWn")).default]})],at);let nt=class{constructor(t,e){this._http=t,this._apiURL=e}postData(t){return this._http.securepost(this._apiURL.onlineEnquiry+"secure/master/save-enquiry",t)}getData(){return this._http.secureget(this._apiURL.onlineEnquiry+"secure/master/find-all")}updateData(t){return this._http.secureput(this._apiURL.onlineEnquiry+"secure/master/update-enquiry",t)}};nt.ctorParameters=()=>[{type:i.a},{type:l.a}],nt=a.b([Object(n.B)({providedIn:"root"})],nt);let ot=class{constructor(t,e,r,a){this._router=t,this._actRoute=e,this._validater=r,this._httpService=a,this.loader=!1,this.errorMsg=!1,this.successCheck=!1,this.errorCheck=!1,this.com=new Array,this.com1=new Array,this.storeData=new Array,this.inputJson=new c.a({}),this.modalPopup=!1,this.sopCode="SOP123456"}ngOnInit(){this.sopCode="SOP"+Math.floor(1e5+9e5*Math.random()),this.uploadForm=new s.d({code:new s.c(null,s.h.required),description:new s.c(null,s.h.required),type:new s.c("",s.h.required),department:new s.c("",s.h.required)}),this.EditPopupForm=new s.d({enqId:new s.c(null,s.h.required),code:new s.c(null,s.h.required),description:new s.c(null,s.h.required),type:new s.c("",s.h.required),department:new s.c("",s.h.required)}),this.getForm()}formSubmit(){console.log(this.uploadForm.value),this.loader=!0,this.uploadForm.valid?this._httpService.postData(this.uploadForm.value).subscribe(t=>{"200"==t.status?(console.log(t),this.getForm(),this.removedKeyword=["code"],this.resetterOfForm(this.uploadForm.controls,this.removedKeyword,this.uploadForm),this.successCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-success",popRoute:""})):(this.errorCheck=!0,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-danger",popRoute:""}))},t=>{this.errorCheck=!0,this.loader=!1,console.log(t),this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""})}):(this.errorCheck=!0,this.inputJson.next({popShow:!0,popMsg:"Something Went Wrong!!",popClass:"alert alert-danger",popRoute:""}))}getForm(){this._httpService.getData().subscribe(t=>{console.log(t),this.allData=t.data})}editData(t){this.enqId=t.enqId,this.code=t.code,this.description=t.description,this.type=t.type,this.department=t.department,this.modalPopup=!0}closePopup(){this.modalPopup=!1}formUpdate(){this.EditPopupForm.valid&&this._httpService.updateData(this.EditPopupForm.value).subscribe(t=>{console.log(t),"200"==t.status?(console.log(t),this.getForm(),this.modalPopup=!1,this.loader=!1,this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-success",popRoute:""})):(this.errorCheck=!0,this.loader=!1,this.modalPopup=!1,this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-danger",popRoute:""}))},t=>{console.log(t),this.loader=!1,this.modalPopup=!1,this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-danger",popRoute:""})})}onChange(t){this.allData=this.storeData.filter(e=>e.type.startsWith(t))}mapping(t){this._router.navigate(["master/enquiry-field-mapping/"+t])}viewMappedEnquiries(){this._router.navigate(["master/master-enquiry/view-mapped-enquiry"])}resetterOfForm(t,e,r){this.sopCode="SOP"+Math.floor(1e5+9e5*Math.random()),Object.keys(t).forEach(t=>{e.includes(t)||r.controls[t].reset()})}};ot.ctorParameters=()=>[{type:u.e},{type:u.a},{type:x.a},{type:nt}],ot=a.b([Object(n.n)({selector:"app-mapping-enquiries-list",template:a.c(r("KxZO")).default,styles:[a.c(r("aAi2")).default]})],ot);var st=r("vClD");let lt=class{constructor(t,e){this._http=t,this._validation=e,this.allFormData=new Array,this.MessageDisplay="Loading..",this.inputJson=new c.a({}),this.modalPopup=!1,this.popUpRecord=new Array,this.master_service_process="",this.showDataVariable="",this.loader=!1,this.loadingSpinner=!1,this.tableJsonData=new c.a({}),this.paginationCount=10,this.ngOnDestroy=()=>{this._http.processTypeSbscriber.unsubscribe()},this.getHistory=()=>{this.MessageDisplay="Loading..",this.loadingSpinner=!0,this.allFormData=[],this._http.getHistory(this.master_service_process).subscribe(t=>{this.loadingSpinner=!1,"200"==t.status&&t.data.length>0?(this.allFormData=t.data,this.filterDataArray=this.allFormData,this.dataArray=this.allFormData,this.tableSortFilter(null,null,null,"default")):(this.MessageDisplay="No record found.",this.allFormData=[],this.filterDataArray=this.allFormData),console.log("response",t)},t=>{this.MessageDisplay="No record found.",this.loadingSpinner=!1,console.error("get history error",t),this.allFormData=[],this.filterDataArray=this.allFormData})},this.postInService=()=>{this.loader=!0,this.loadingSpinner=!0,this._http.postInService(this.serviceForm.value,this.master_service_process).subscribe(t=>{this.loader=!1,this.loadingSpinner=!1,console.log("postInService",t),this.serviceForm.reset(),this.getHistory(),this.inputJson.next({popShow:!0,popMsg:"Data Submitted Successfully",popClass:"alert alert-success",popRoute:""})},t=>{this.loader=!1,this.loadingSpinner=!1,console.error("get postInService error",t)})},this.showHistoryOnRecord=t=>{this.MessageDisplay="Loading..",this.loadingSpinner=!0,this._http.showHistoryOnRecord(t,this.master_service_process).subscribe(t=>{this.modalPopup=!0,this.loadingSpinner=!1,console.log("showHistoryOnRecord",t),"200"==t.status&&t.data.length>0?this.popUpRecord=t.data:this.MessageDisplay="No reviosion found."},t=>{this.MessageDisplay="No record found.",this.loadingSpinner=!1,console.error("get showHistoryOnRecord error",t)})},this.closePopup=()=>{this.modalPopup=!1},this.checkRemark=t=>null!=t&&t.split(" ").length>14}ngOnInit(){this.serviceForm=new s.d({name:new s.c(null,[s.h.required]),description:new s.c(null,[s.h.required]),value:new s.c(null,[s.h.required,s.h.pattern(this._validation.numberKeyRegex)])}),this._http.processTypeSbscriber.subscribe(t=>{this.master_service_process=t.processTypeForMaster,"PROJECT_REG"==this.master_service_process?this.showDataVariable="Project Registration":"PROJECT_ALT"==this.master_service_process?this.showDataVariable="Project Alteration":"PROJECT_EXT"==this.master_service_process?this.showDataVariable="Project Extension":"PROJECT_QTR"==this.master_service_process?this.showDataVariable="Project Quarter":"FORM_FIVE"==this.master_service_process?this.showDataVariable="Form 5":"COMPLAINT"==this.master_service_process?this.showDataVariable="Complaint":"AGENT"==this.master_service_process?this.showDataVariable="Agent":"BCR"==this.master_service_process?this.showDataVariable="Profile Change":"WITHDRAWAL"==this.master_service_process?this.showDataVariable="Withdrawal":"SEC_15"==this.master_service_process&&(this.showDataVariable="Alteration Section-15"),this.getHistory()})}transformAmount(t){return Number(t).toLocaleString("en-IN")}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"fromDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"name",label:"Name",type:"string"},{key:"description",label:"Description",type:"string"},{key:"value",label:"Value",type:"string"},{key:"fromDate",label:"Date From",type:"date"},{key:"toDate",label:"Date To",type:"date"}],actualArray:this.allFormData,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};lt.ctorParameters=()=>[{type:st.a},{type:x.a}],lt=a.b([Object(n.n)({selector:"app-default-enable-timer",template:a.c(r("+F3Z")).default,styles:[a.c(r("9YCV")).default]})],lt);let it=class{constructor(t,e){this._reraSerivce=t,this._apiUrl=e}uploadExl(t,e){return this._reraSerivce.post(e,t)}};it.ctorParameters=()=>[{type:i.a},{type:l.a}],it=a.b([Object(n.B)({providedIn:"root"})],it);let dt=class{constructor(t,e){this._masterIfsc=t,this._apiURL=e,this.inputJson=new c.a({}),this.formData=new FormData,this.loadingSpinner=!1}ngOnInit(){let t,e=window.location.hash;"#/master/master-data/ifsc-excel-upload"==e?(t=this._apiURL.reraMasterAPI+"ifsc/generateexl-ifsccode",this.postUrl=this._apiURL.reraMasterAPI+"ifsc/validate-bank-ifsc-exl",this.nameComponent="IFSC"):"#/master/master-data/lawyer-excel-upload"==e?(t=this._apiURL.registrationAPI+"lawyermaster/generateexl-lawyerenrollment",this.postUrl=this._apiURL.registrationAPI+"lawyermaster/validate-lawyer-enrollment-exl",this.nameComponent="Lawyer"):"#/master/master-data/architect-excel-upload"==e?(t=this._apiURL.registrationAPI+"archmaster/generateexl-architectenrollment",this.postUrl=this._apiURL.registrationAPI+"archmaster/validate-architect-enrollment-exl",this.nameComponent="Architect"):"#/master/master-data/pincode-excel-upload"==e?(t=this._apiURL.reraMasterAPI+"pincode/generateexl-pincode",this.postUrl=this._apiURL.reraMasterAPI+"pincode/validate-pincode-exl",this.nameComponent="Pin Code"):"#/master/master-data/townplan-excel-upload"==e&&(t=this._apiURL.reraMasterAPI+"town-plan/generateexl-townplanning",this.postUrl=this._apiURL.reraMasterAPI+"town-plan/validate-townplaning-exl",this.nameComponent="Town Planning"),this.exlDownloadUrl=this._apiURL.httpStr+t}postExl(){this.loadingSpinner=!0;document.getElementById("fileUploadId");this._masterIfsc.uploadExl(this.formData,this.postUrl).subscribe(t=>{200==t.status?(this.inputJson.next({popShow:!0,popMsg:"Excel Data uploaded successfully",popClass:"alert alert-success",popRoute:""}),this.formData.delete("file")):(this.formData.delete("file"),this.inputJson.next({popShow:!0,popMsg:t.message,popClass:"alert alert-danger",popRoute:""})),console.log(t),this.loadingSpinner=!1,this.reset.nativeElement.value=""},t=>{this.formData.delete("file"),this.reset.nativeElement.value="",this.loadingSpinner=!1,console.log(t),this.inputJson.next({popShow:!0,popMsg:"Something went wrong, Please check excel data",popClass:"alert alert-danger",popRoute:""})})}updalodExl(t){console.log(t),this.formData.append("file",t.target.files[0]),console.log(this.formData)}};dt.ctorParameters=()=>[{type:it},{type:l.a}],a.b([Object(n.kb)("uploadFile",{static:!1})],dt.prototype,"reset",void 0),dt=a.b([Object(n.n)({selector:"app-master-ifsc",template:a.c(r("9UR1")).default,styles:[a.c(r("U8TT")).default]})],dt);var ct=r("IheW");let pt=class{constructor(t,e,r){this.http=t,this._apiUrl=e,this.clause=r}submitTeamType(t){return console.log(this._apiUrl.reraMasterAPI+"group/save",t),this.http.post(this._apiUrl.reraMasterAPI+"group/save",t)}getuserGroup(){return this.http.get(this._apiUrl.reraMasterAPI+"/group/all")}updateUserGroup(t){return this.http.put(this._apiUrl.reraMasterAPI+"group/modify",t)}};pt.ctorParameters=()=>[{type:i.a},{type:l.a},{type:ct.a}],pt=a.b([Object(n.B)({providedIn:"root"})],pt);let ht=class{constructor(t){this.ManageUserGroupService=t,this.arrayTeamInfo=new Array,this.arrayInfo=new Array,this.getAllUserGroupArry=new Array,this.inputJson=new c.a({}),this.modalPopup=!1,this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.GetUserGroup(),this.searchFormTeam=new s.d({team:new s.c("",[s.h.required]),groupCategory:new s.c("")}),this.editeForm=new s.d({groupIds:new s.c,userGroups:new s.c("",[s.h.required]),groupCategorys:new s.c("")})}teamFormSubmit(){this.team=this.searchFormTeam.value.team,this.groupCategory=this.searchFormTeam.value.groupCategory,this.arrayTeamInfo={userGroup:this.team.toUpperCase(),groupCategory:this.groupCategory,userId:""},console.log(this.arrayTeamInfo),this.ManageUserGroupService.submitTeamType(this.arrayTeamInfo).subscribe(t=>{this.searchFormTeam.reset(),this.GetUserGroup(),this.inputJson.next({popShow:!0,popMsg:"Data Submitted Successfully",popClass:"alert alert-success",popRoute:""}),console.log(t)},t=>{console.log(t)})}GetUserGroup(){this.ManageUserGroupService.getuserGroup().subscribe(t=>{console.log("----user group--"),this.getAllUserGroupArry=t.data,this.filterDataArray=this.getAllUserGroupArry,this.dataArray=this.getAllUserGroupArry,this.tableSortFilter(null,null,null,"default"),console.log(t)},t=>{console.log(t)})}editGroup(t,e,r){this.modalPopup=!0,this.groupIds=t,this.userGroups=e,this.groupCategorys=r}updateClause(){this.modalPopup=!1,this.arrayInfo={groupId:this.editeForm.value.groupIds,groupCategory:this.editeForm.value.groupCategorys,userGroup:this.editeForm.value.userGroups.toUpperCase()},console.log(this.arrayInfo),this.ManageUserGroupService.updateUserGroup(this.arrayInfo).subscribe(t=>{this.GetUserGroup(),console.log(t)},t=>{console.log(t)})}popupClose(){this.modalPopup=!1}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"userGroup",label:"User Group",type:"string"},{key:"groupCategory",label:"Group Category",type:"string"}],actualArray:this.getAllUserGroupArry,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};ht.ctorParameters=()=>[{type:pt}],ht=a.b([Object(n.n)({selector:"app-manage-user-group",template:a.c(r("+O5n")).default,styles:[a.c(r("snCF")).default]})],ht);let ut=class{constructor(t,e,r){this.http=t,this._apiUrl=e,this.clause=r}submituserType(t){return console.log(this._apiUrl.reraMasterAPI+"role/save",t),this.http.post(this._apiUrl.reraMasterAPI+"role/save",t)}getuserType(){return this.http.get(this._apiUrl.reraMasterAPI+"/role/all")}updateUserType(t){return this.http.put(this._apiUrl.reraMasterAPI+"role/modify",t)}};ut.ctorParameters=()=>[{type:i.a},{type:l.a},{type:ct.a}],ut=a.b([Object(n.B)({providedIn:"root"})],ut);let mt=class{constructor(t,e){this.ManageUserTypeService=t,this._validation=e,this.getAllUserArry=new Array,this.arrayUserTypeInfo=new Array,this.arrayInfo=new Array,this.modalPopup=!1,this.inputJson=new c.a({}),this.userRoleNameroleName="",this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.GetUserType(),this.searchForm=new s.d({userRole:new s.c("",[s.h.required]),userRoleName:new s.c("",[s.h.required])}),this.editeForm=new s.d({roleId:new s.c,userRole:new s.c("",[s.h.required]),userRoleName:new s.c("",[s.h.required])})}userTypeFormSubmit(){let t;t=this.searchForm.value,t.userRole=t.userRole.replaceAll(" ","_"),this.ManageUserTypeService.submituserType(t).subscribe(t=>{this.searchForm.reset(),this.GetUserType(),this.inputJson.next({popShow:!0,popMsg:"Data Submitted Successfully",popClass:"alert alert-success",popRoute:""}),console.log(t)},t=>{console.log(t)})}GetUserType(){this.ManageUserTypeService.getuserType().subscribe(t=>{console.log("----user type role--"),this.getAllUserArry=t.data,this.filterDataArray=this.getAllUserArry,this.dataArray=this.getAllUserArry,this.tableSortFilter(null,null,null,"default"),console.log(t)},t=>{console.log(t)})}edituserType(t,e,r){this.modalPopup=!0,this.roleId=t,this.roleName=e,this.userRoleNameroleName=r}updateClause(){let t;this.modalPopup=!1,t=this.editeForm.value,t.userRole=t.userRole.replaceAll(" ","_"),console.log(this.arrayInfo),this.ManageUserTypeService.updateUserType(t).subscribe(t=>{this.GetUserType(),console.log(t)},t=>{console.log(t)})}popupClose(){this.modalPopup=!1}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"userRoleName",label:"Role Name",type:"string"},{key:"userRole",label:"Role Code",type:"string"}],actualArray:this.getAllUserArry,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};mt.ctorParameters=()=>[{type:ut},{type:x.a}],mt=a.b([Object(n.n)({selector:"app-manage-user-type",template:a.c(r("TQc9")).default,styles:[a.c(r("22JH")).default]})],mt);let gt=class{constructor(t,e,r){this.http=t,this._apiUrl=e,this.clause=r}submitDeptType(t){return console.log(this._apiUrl.reraMasterAPI+"depterment/save",t),this.http.post(this._apiUrl.reraMasterAPI+"depterment/save",t)}getDepartment(){return this.http.get(this._apiUrl.reraMasterAPI+"/depterment/all")}updateDeptDetail(t){return console.log(this._apiUrl.reraMasterAPI+"depterment/modify",t),this.http.put(this._apiUrl.reraMasterAPI+"depterment/modify",t)}};gt.ctorParameters=()=>[{type:i.a},{type:l.a},{type:ct.a}],gt=a.b([Object(n.B)({providedIn:"root"})],gt);let bt=class{constructor(t){this.ManageUserDepartmentService=t,this.arrayDeptInfo=new Array,this.getAllDeptArry=new Array,this.arrayInfo=new Array,this.modalPopup=!1,this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getDepartment(),this.searchFormDepartment=new s.d({department:new s.c("",[s.h.required])}),this.editeForm=new s.d({deptId:new s.c,deptName:new s.c("",[s.h.required])})}daepartmentFormSubmit(){this.department=this.searchFormDepartment.controls.department.value,this.arrayDeptInfo={userDept:this.department.toUpperCase(),userId:""},this.ManageUserDepartmentService.submitDeptType(this.arrayDeptInfo).subscribe(t=>{this.searchFormDepartment.reset(),this.getDepartment(),this.inputJson.next({popShow:!0,popMsg:"Data Submitted Successfully",popClass:"alert alert-success",popRoute:""}),console.log(t)},t=>{console.log(t)})}getDepartment(){this.ManageUserDepartmentService.getDepartment().subscribe(t=>{console.log("----department--"),this.getAllDeptArry=t.data,this.filterDataArray=this.getAllDeptArry,this.dataArray=this.getAllDeptArry,this.tableSortFilter(null,null,null,"default"),console.log(t)},t=>{console.log(t)})}editDept(t,e){this.modalPopup=!0,this.deptId=t,this.deptName=e}updateClause(){this.modalPopup=!1,this.arrayInfo={deptId:this.editeForm.value.deptId,userDept:this.editeForm.value.deptName.toUpperCase()},console.log(this.arrayInfo),this.ManageUserDepartmentService.updateDeptDetail(this.arrayInfo).subscribe(t=>{this.getDepartment(),console.log(t)},t=>{console.log(t)})}popupClose(){this.modalPopup=!1}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"userDept",label:"Department Name",type:"string"}],actualArray:this.getAllDeptArry,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};bt.ctorParameters=()=>[{type:gt}],bt=a.b([Object(n.n)({selector:"app-manage-user-department",template:a.c(r("Q0Dz")).default,styles:[a.c(r("MdiR")).default]})],bt);let vt=class{constructor(t,e,r){this.http=t,this._apiUrl=e,this.clause=r}gethirearchylist(){return this.http.secureget(this._apiUrl.efileHirearchy+"secure/master/hierarchy/alldata")}updateClauseDetail(t){return this.http.secureput(this._apiUrl.efileHirearchy+"secure/master/hierarchy/modify",t)}submitHirearchy(t){return this.http.securepost(this._apiUrl.efileHirearchy+"secure/master/hierarchy/save",t)}getServiceAllDepartment(){return this.http.secureget(this._apiUrl.efileHirearchy+"secure/master/hierarchy-department/all")}getcategoryslist(){return this.http.secureget(this._apiUrl.efileHirearchy+"secure/master/hierarchy-category/all")}};vt.ctorParameters=()=>[{type:i.a},{type:l.a},{type:ct.a}],vt=a.b([Object(n.B)({providedIn:"root"})],vt);let ft=class{constructor(t,e,r){this.EfileMasterService=t,this.formBuilder=e,this.router=r,this.modifiedArr=new Array,this.arrayInfo=new Array,this.departmentArr=new Array,this.catgoeyArr=new Array,this.modalPopup=!1,this.tooltipJson=new c.a({}),this.inputJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getServiceAllClause(),this.getServiceAllDesignation(),this.searchForm=this.formBuilder.group({}),this.editclause1=this.formBuilder.group({hirearchyId:new s.c,updateHirearchyName:new s.c("",[s.h.required]),updatehirearchyDept:new s.c("",[s.h.required]),updateHirearchyCode:new s.c("",[s.h.required])}),this.searchForm=new s.d({hirearchyName:new s.c("",[s.h.required]),hirearchyDept:new s.c("",[s.h.required]),hirearchyCode:new s.c("",[s.h.required])})}openToolTip(t,e){this.tooltipJson.next({pageX:t.pageX,pageY:t.pageY,code:e})}getServiceAllDesignation(){this.EfileMasterService.getServiceAllDepartment().subscribe(t=>{this.departmentArr=t.data,console.log(this.departmentArr),this.getServiceAllCategory()},t=>{console.log(t)})}getServiceAllCategory(){this.EfileMasterService.getcategoryslist().subscribe(t=>{this.catgoeyArr=t.data,console.log(this.catgoeyArr)})}editeonSubmit(t,e,r){console.log(t),sessionStorage.setItem("userFkId",t),sessionStorage.setItem("catId",e),sessionStorage.setItem("DeptName",r),this.router.navigate(["master/efileuser-master"])}resetResult(){this.getServiceAllClause()}getServiceAllClause(){this.EfileMasterService.gethirearchylist().subscribe(t=>{this.modifiedArr=t.data,this.filterDataArray=this.modifiedArr,this.dataArray=this.modifiedArr,this.tableSortFilter(null,null,null,"default"),console.log(this.modifiedArr)})}editclauseonSubmit(t){console.log(t),this.modalPopup=!0,this.nameClasture=t.nameClasture,this.deptName=t.deptName,this.departCode=t.catagoryDescription,this.id=t.id,this.deptId=t.depfkId,this.clauseInfoObj=t}popupClose(){this.modalPopup=!1}updateClause(){this.modalPopup=!1,this.arrayInfo={nameClasture:this.editclause1.value.updateHirearchyName,deptName:this.editclause1.value.updatehirearchyDept,catagoryDescription:this.editclause1.value.updateHirearchyCode,id:this.editclause1.value.hirearchyId},console.log(this.arrayInfo),this.EfileMasterService.updateClauseDetail(this.arrayInfo).subscribe(t=>{this.getServiceAllClause(),console.log(t)},t=>{console.log(t)})}searchFormSubmit(){this.hirearchyName=this.searchForm.controls.hirearchyName.value,this.hirearchyDept=this.searchForm.controls.hirearchyDept.value,this.hirearchyCode=this.searchForm.controls.hirearchyCode.value,this.arrayInfo={nameClasture:this.hirearchyName,deptName:this.hirearchyDept,catagoryDescription:this.hirearchyCode},this.EfileMasterService.submitHirearchy(this.arrayInfo).subscribe(t=>{this.getServiceAllClause(),this.searchForm.reset(),this.inputJson.next({popShow:!0,popMsg:"Data Submitted Successfully",popClass:"alert alert-success",popRoute:""}),console.log(t)},t=>{console.log(t),this.inputJson.next({popShow:!0,popMsg:t.error.message,popClass:"alert alert-danger",popRoute:""})}),console.log(this.arrayInfo)}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"nameClasture",label:"Catagory",type:"string"},{key:"deptName",label:"Department",type:"string"},{key:"catagoryDescription",label:"Catagory Description",type:"string"}],actualArray:this.modifiedArr,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};ft.ctorParameters=()=>[{type:vt},{type:s.b},{type:u.e}],ft=a.b([Object(n.n)({selector:"app-efile-master",template:a.c(r("x9lO")).default,styles:[a.c(r("YlNj")).default]})],ft);let yt=class{constructor(t,e,r){this.http=t,this._apiUrl=e,this.clause=r}gethirearchylist(){return this.http.secureget(this._apiUrl.efileHirearchy+"secure/master/hierarchy-level/all")}submitHirearchy(t){return this.http.securepost(this._apiUrl.efileHirearchy+"secure/master/hierarchy-level/save",t)}updateLevelDetail(t){return this.http.secureput(this._apiUrl.efileHirearchy+"secure/master/hierarchy-level/modify",t)}};yt.ctorParameters=()=>[{type:i.a},{type:l.a},{type:ct.a}],yt=a.b([Object(n.B)({providedIn:"root"})],yt);let Dt=class{constructor(t,e,r,a){this._validation=t,this.LevelMasterService=e,this.formBuilder=r,this.router=a,this.inputJson=new c.a({}),this.modifiedArr=new Array,this.arrayInfo=new Array,this.modalPopup=!1,this.tooltipJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getServiceAllClause(),this.editeForm=this.formBuilder.group({editeId:new s.c,editeLevelName:new s.c(null,[s.h.required,s.h.pattern(this._validation.alphabetWithoutSpaceRegex)]),editeLevelCode:new s.c(null,[s.h.required,s.h.pattern(this._validation.onlyNumberRegex)])}),this.searchForm=new s.d({levelid:new s.c,levelName:new s.c(null,[s.h.required,s.h.pattern(this._validation.alphabetWithoutSpaceRegex)]),levelCode:new s.c(null,[s.h.required,s.h.pattern(this._validation.onlyNumberRegex)])})}openToolTip(t,e){this.tooltipJson.next({pageX:t.pageX,pageY:t.pageY,code:e})}editclauseonSubmit(t){console.log("data"),console.log(t),this.modalPopup=!0,this.editeLevelCode=t.levelCode,console.log(this.editeLevelCode),this.editeLevelName=t.levelName,this.editeId=t.id}updateClause(){this.modalPopup=!1,this.arrayInfo={levelName:this.editeForm.value.editeLevelName,levelCode:this.editeForm.value.editeLevelCode,id:this.editeForm.value.editeId},console.log(this.arrayInfo),this.LevelMasterService.updateLevelDetail(this.arrayInfo).subscribe(t=>{this.getServiceAllClause(),console.log(t)},t=>{console.log(t)})}popupClose(){this.modalPopup=!1}resetResult(){this.getServiceAllClause()}getServiceAllClause(){this.LevelMasterService.gethirearchylist().subscribe(t=>{this.modifiedArr=t.data,this.filterDataArray=this.modifiedArr,this.dataArray=this.modifiedArr,this.tableSortFilter(null,null,null,"default"),console.log(this.modifiedArr)})}searchFormSubmit(){this.levelName=this.searchForm.controls.levelName.value,this.levelCode=this.searchForm.controls.levelCode.value,this.arrayInfo={levelName:this.levelName,levelCode:this.levelCode},this.LevelMasterService.submitHirearchy(this.arrayInfo).subscribe(t=>{this.getServiceAllClause(),this.searchForm.reset(),this.inputJson.next({popShow:!0,popMsg:"Data Submitted Successfully",popClass:"alert alert-success",popRoute:""}),console.log(t)},t=>{console.log(t)}),console.log(this.arrayInfo)}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"levelName",label:"Level Name",type:"string"},{key:"levelCode",label:"Level Code",type:"string"}],actualArray:this.modifiedArr,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};Dt.ctorParameters=()=>[{type:x.a},{type:yt},{type:s.b},{type:u.e}],Dt=a.b([Object(n.n)({selector:"app-level-master",template:a.c(r("/jcW")).default,styles:[a.c(r("Q5+w")).default]})],Dt);let St=class{constructor(t,e,r){this.http=t,this._apiUrl=e,this.clause=r}getServiceAllLevel(){return this.http.secureget(this._apiUrl.efileHirearchy+"secure/master/hierarchy-level/all")}getServiceAllHirearchyUser(t){return this.http.secureget(this._apiUrl.efileHirearchy+"secure/master/hierarchy-user/HierarchyUserId/"+t)}getEmail(t){return this.http.get(this._apiUrl.reraMasterAPI+"public/getuser-by-email/"+t)}deleteUser(t){return this.http.secureget(this._apiUrl.efileHirearchy+"secure/master/hierarchy-user/delete/"+t)}submitUserDetail(t){return console.log("ok I am calling"),this.http.securepost(this._apiUrl.efileHirearchy+"secure/master/hierarchy-user/save",t)}getUsertypeService(){return this.http.get(this._apiUrl.reraMasterAPI+"role/all")}getCategoryName(t){return this.http.secureget(this._apiUrl.efileHirearchy+"secure/master/hierarchy-category/"+t)}};St.ctorParameters=()=>[{type:i.a},{type:l.a},{type:ct.a}],St=a.b([Object(n.B)({providedIn:"root"})],St);let xt=class{constructor(t,e,r,a){this.EfileMasterService=t,this.EfileuserMasterService=e,this.formBuilder=r,this.router=a,this.modifiedArr=new Array,this.serviceAllUser=new Array,this.levelArr=new Array,this.arrayInfo=new Array,this.userRoleArr=new Array,this.RoleUserNameDataArry=new Array,this.designationArr=new Array,this.checkData=!0,this.showDivEmail=!1,this.hideTeam=!0,this.teamList=new Array,this.inputJson=new c.a({}),this.insertCondition=!0,this.modalPopup=!1,this.deletePopup=!1,this.tooltipJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getServiceAllLevel(),this.getUserRole(),this.userFkId=sessionStorage.getItem("userFkId"),this.categoryId=sessionStorage.getItem("catId"),this.DeptName=sessionStorage.getItem("DeptName"),this.getServiceAllUser(this.userFkId),this.getCategoryName(),console.log(this.userFkId+"--&&&&&&&&&"),this.searchForm=new s.d({userRole:new s.c("",[s.h.required]),teamname:new s.c("",[s.h.required]),level:new s.c("",[s.h.required]),previledge:new s.c("",[s.h.required])}),this.editclause1=new s.d({UpdateUserEmail:new s.c("",[s.h.required]),Updateusername:new s.c("",[s.h.required]),Updateusercode:new s.c("",[s.h.required]),Updatedesignation:new s.c("",[s.h.required]),Updatelevel:new s.c("",[s.h.required]),Updatepreviledge:new s.c("",[s.h.required])}),this.deleteclause1=new s.d({projectDeleteId:new s.c("",[s.h.required])})}openToolTip(t,e){this.tooltipJson.next({pageX:t.pageX,pageY:t.pageY,code:e})}getServiceAllUser(t){console.log(t+"----"),this.EfileuserMasterService.getServiceAllHirearchyUser(t).subscribe(t=>{this.serviceAllUser=t.data,this.filterDataArray=this.serviceAllUser,this.dataArray=this.serviceAllUser,this.tableSortFilter(null,null,null,"default"),console.log(t)},t=>{console.log(t)})}resetResultupdate(t){console.log(t+"--------------"),this.EfileuserMasterService.getEmail(t).subscribe(t=>{console.log(t),this.ModelUpdateUsername=t[0].userName,this.userid=t[0].userId,this.ModelUpdateUsertype=t[0].userType,console.log(this.username)},t=>{console.log(t)})}getCategoryName(){this.EfileuserMasterService.getCategoryName(this.categoryId).subscribe(t=>{this.catgoryName=t.data.categoryName,console.log("###########$$$$$$$$"),console.log(this.catgoryName)},t=>{console.log(t)})}resetResult(t){this.showDivEmail=!1,console.log(t+"--------------"),this.showDivEmail=!1,this.EfileuserMasterService.getEmail(t).subscribe(t=>{console.log(t),this.userName=t[0].userName,this.userid=t[0].userId,this.userType=t[0].userType,this.showDivEmail=!0,console.log(this.username)},t=>{console.log(t)})}getUserRole(){this.EfileuserMasterService.getUsertypeService().subscribe(t=>{console.log(t),this.userRoleArr=t.data,console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@@$$$$4"),console.log(this.userRoleArr)})}getUserName(t){this.hideTeam=!0,this.teamList=[];const e=this.searchForm.get("teamname");this.userRoleArr.findIndex(e=>e.userRole===t.target.value);this.teamList.push({roleName:"TEAM1"},{roleName:"TEAM2"},{roleName:"TEAM3"},{roleName:"TEAM4"},{roleName:"TEAM5"},{roleName:"TEAM6"},{roleName:"TEAM7"},{roleName:"BENCH1"},{roleName:"BENCH2"},{roleName:"BENCH3"},{roleName:"BENCH4"},{roleName:"BENCH5"},{roleName:"DEFAULT"}),e.setValidators(s.h.nullValidator),console.log(this.teamList),e.updateValueAndValidity()}deleteclauseonSubmit(t){this.deletId=t,this.deletePopup=!0}deletePopupsubmit(){this.deletId=this.deleteclause1.value.projectDeleteId,this.deletePopup=!1,this.EfileuserMasterService.deleteUser(this.deletId).subscribe(t=>{this.getServiceAllUser(this.userFkId),console.log(t)},t=>{console.log(t)})}editclauseonSubmit(t){console.log(t),this.modalPopup=!0,this.ModelUpdateUserEmail=t.emailId,this.ModelUpdateUsername=t.userName,this.ModelUpdateUserdesignation=t.userDestignation,this.ModelUpdateUsertype=t.userRole,this.ModelUpdateUserlevel=t.userLevel,this.ModelUpdateUserpriviledge=t.userPrivileged}popupClose(){this.modalPopup=!1}canclePopup(){this.deletePopup=!1}updateClause(){this.resultset="",this.UserEmail=this.editclause1.controls.UpdateUserEmail.value,this.username=this.editclause1.controls.Updateusername.value,this.usercode=this.editclause1.controls.Updateusercode.value,this.designation=this.editclause1.controls.Updatedesignation.value,this.level=this.editclause1.controls.Updatelevel.value,this.previledge=this.editclause1.controls.Updatepreviledge.value,this.arrayInfo={userId:this.userid,fkId:this.userFkId,emailId:this.editclause1.value.UpdateUserEmail,userName:this.editclause1.value.Updateusername,userRole:this.editclause1.value.Updateusercode,userDestignation:this.editclause1.value.Updatedesignation,userLevel:this.editclause1.value.Updatelevel,userPrivileged:this.editclause1.value.Updatepreviledge},this.EfileuserMasterService.getServiceAllHirearchyUser(this.userFkId).subscribe(t=>{this.insertCondition,this.resultset=t.data,this.resultset.forEach(t=>{(this.userFkId==t.fkId&&this.userid==t.userId&&this.level==t.userLevel||this.userFkId==t.fkId&&this.level==t.userLevel||this.userFkId==t.fkId&&this.userid==t.userId)&&(this.insertCondition=!1)}),1==this.insertCondition?(console.log(this.arrayInfo),this.EfileuserMasterService.submitUserDetail(this.arrayInfo).subscribe(t=>{this.getServiceAllUser(this.userFkId)},t=>{console.log(t)})):(this.insertCondition=!0,this.inputJson.next({popShow:!0,popMsg:"User already existing for this level",popClass:"alert alert-danger",popRoute:""}))},t=>{console.log(t)})}getServiceAllLevel(){this.EfileuserMasterService.getServiceAllLevel().subscribe(t=>{this.levelArr=t.data},t=>{console.log(t)})}searchFormSubmit(){this.resultset="",this.userRole=this.searchForm.controls.userRole.value,this.level=this.searchForm.controls.level.value,this.userTeam=this.searchForm.controls.teamname.value,this.previledge=this.searchForm.controls.previledge.value,console.log(this.userRole),this.arrayInfo={fkId:this.userFkId,userLevel:this.level,userTeam:this.userTeam,userPrivileged:this.previledge,userRole:this.userRole},this.EfileuserMasterService.getServiceAllHirearchyUser(this.userFkId).subscribe(t=>{this.insertCondition,this.resultset=t.data,0==t.data.length?(console.log(this.arrayInfo),this.EfileuserMasterService.submitUserDetail(this.arrayInfo).subscribe(t=>{this.getServiceAllUser(this.userFkId),this.searchForm.reset()},t=>{console.log(t)})):(this.resultset.forEach(t=>{this.userFkId==t.fkId&&this.level==t.userLevel&&(this.insertCondition=!1)}),1==this.insertCondition?(console.log(this.arrayInfo),this.EfileuserMasterService.submitUserDetail(this.arrayInfo).subscribe(t=>{this.getServiceAllUser(this.userFkId),this.searchForm.reset()},t=>{console.log(t)})):(this.insertCondition=!0,this.inputJson.next({popShow:!0,popMsg:"User already existing for this level",popClass:"alert alert-danger",popRoute:""})))},t=>{console.log(t)})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"userRole",label:"User Type",type:"string"},{key:"userTeam",label:"User Team",type:"string"},{key:"userLevel",label:"User Level",type:"string"},{key:"userPrivileged",label:"User Privileged",type:"string"},{key:"catgoryName",label:"Category Name",type:"string"},{key:"DeptName",label:"Department Name",type:"string"}],actualArray:this.serviceAllUser,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};xt.ctorParameters=()=>[{type:vt},{type:St},{type:s.b},{type:u.e}],xt=a.b([Object(n.n)({selector:"app-efileuser-master",template:a.c(r("UngO")).default,styles:[a.c(r("358v")).default]})],xt);let Ct=class{constructor(t,e,r){this.http=t,this._apiUrl=e,this.clause=r}gethirearchylist(){return this.http.secureget(this._apiUrl.efileHirearchy+"secure/master/hierarchy-department/all")}updateDesignationDetail(t){return this.http.secureput(this._apiUrl.efileHirearchy+"secure/master/hierarchy-department/modify",t)}submitHirearchy(t){return this.http.securepost(this._apiUrl.efileHirearchy+"secure/master/hierarchy-department/save",t)}getUsertypeService(){return this.http.get(this._apiUrl.reraMasterAPI+"public/all-details-by-usertype-alter")}getUsertypeServiceAllMain(){return this.http.get(this._apiUrl.reraMasterUserAPI+"role/all")}getDeapartment(){return this.http.get(this._apiUrl.reraMasterAPI+"/depterment/all")}};Ct.ctorParameters=()=>[{type:i.a},{type:l.a},{type:ct.a}],Ct=a.b([Object(n.B)({providedIn:"root"})],Ct);let At=class{constructor(t,e,r){this.DepartmentMasterService=t,this.formBuilder=e,this.router=r,this.modifiedArr=new Array,this.arrayInfo=new Array,this.userRoleArr=new Array,this.userDepartment=new Array,this.modalPopup=!1,this.showDivEmail=!1,this.inputJson=new c.a({}),this.tooltipJson=new c.a({}),this.userRoleArrAll=[],this.tableJsonData=new c.a({}),this.paginationCount=10,this.getNameOfRoles=t=>{let e;return e=this.userRoleArrAll.findIndex(e=>e.userRole==t),e>-1?this.userRoleArrAll[e].userRoleName?this.userRoleArrAll[e].userRoleName:this.userRoleArrAll[e].userRoleKey:t},this.getNameOfDepartment=t=>{let e;return e=this.userDepartment.findIndex(e=>e.userDept==t),e>-1?this.userDepartment[e].userDeptKey:t}}ngOnInit(){this.getServiceAllClause(),this.getUserRole(),this.getDeapartment(),this.searchForm=this.formBuilder.group({}),this.editclause1=this.formBuilder.group({designationId:new s.c,updateDepartmentName:new s.c("",[s.h.required]),updateDepartmentDescription:new s.c("",[s.h.required]),Updateprimaryid:new s.c,updaterole:new s.c("",[s.h.required]),rolePreviledge:new s.c("",[s.h.required])}),this.searchForm=new s.d({designationName:new s.c("",[s.h.required]),designationCode:new s.c("",[s.h.required]),primaryid:new s.c,roleid:new s.c("",[s.h.required]),roleprivilege:new s.c("",[s.h.required])})}openToolTip(t,e){this.tooltipJson.next({pageX:t.pageX,pageY:t.pageY,code:e})}getUserRole(){this.DepartmentMasterService.getUsertypeService().subscribe(t=>{this.userRoleArr=t})}getDeapartment(){this.DepartmentMasterService.getDeapartment().subscribe(t=>{this.userDepartment=t.data})}resetResult(){this.getServiceAllClause()}getServiceAllClause(){this.DepartmentMasterService.gethirearchylist().subscribe(t=>{this.modifiedArr=t.data,this.filterDataArray=this.modifiedArr,this.dataArray=this.modifiedArr,this.tableSortFilter(null,null,null,"default")})}editclauseonSubmit(t){this.modalPopup=!0,this.designationCode=t.departmentDescription,this.designationName=t.departmentName,this.primaryid=t.parentId,this.role=t.headUserRole,this.roleprivilege=t.rolePrivilege,this.id=t.id}popupClose(){this.modalPopup=!1}updateClause(){this.modalPopup=!1,this.arrayInfo={departmentName:this.editclause1.value.updateDepartmentName,departmentDescription:this.editclause1.value.updateDepartmentDescription,parentId:this.editclause1.value.Updateprimaryid,headUserRole:this.editclause1.value.updaterole,rolePrivilege:this.editclause1.value.rolePreviledge,id:this.editclause1.value.designationId},this.DepartmentMasterService.updateDesignationDetail(this.arrayInfo).subscribe(t=>{this.getServiceAllClause()},t=>{})}searchFormSubmit(){this.designationName=this.searchForm.controls.designationName.value,this.designationCode=this.searchForm.controls.designationCode.value,this.roleid=this.searchForm.controls.roleid.value,this.rolePrivilege=this.searchForm.controls.roleprivilege.value,this.parentId=this.searchForm.controls.primaryid.value,this.arrayInfo={departmentName:this.designationName,departmentDescription:this.designationCode,headUserRole:this.roleid,rolePrivilege:this.rolePrivilege,parentId:this.parentId},this.DepartmentMasterService.submitHirearchy(this.arrayInfo).subscribe(t=>{this.getServiceAllClause(),this.searchForm.reset(),this.inputJson.next({popShow:!0,popMsg:"Data Submitted Successfully",popClass:"alert alert-success",popRoute:""})},t=>{this.inputJson.next({popShow:!0,popMsg:"Department and Role mapping are already exist in the system.",popClass:"alert alert-danger",popRoute:""})})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"pincode",label:"Department Name",type:"string"},{key:"state_name",label:"Department Description",type:"string"},{key:"district_name",label:"Role",type:"string"},{key:"district_name",label:"Role Privilege",type:"string"}],actualArray:this.modifiedArr,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n})}filterValue(t){this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};At.ctorParameters=()=>[{type:Ct},{type:s.b},{type:u.e}],At=a.b([Object(n.n)({selector:"app-department-master",template:a.c(r("De02")).default,styles:[a.c(r("J+AZ")).default]})],At);let Nt=class{constructor(t,e,r){this.http=t,this._apiUrl=e,this.clause=r}getcategorylist(){return this.http.secureget(this._apiUrl.efileHirearchy+"secure/master/hierarchy-category/all")}submitcategory(t){return console.log(this._apiUrl.efileHirearchy+"secure/master/hierarchy-category/save",t),this.http.securepost(this._apiUrl.efileHirearchy+"secure/master/hierarchy-category/save",t)}updateCategoryDetail(t){return this.http.secureput(this._apiUrl.efileHirearchy+"secure/master/hierarchy-category/modify",t)}};Nt.ctorParameters=()=>[{type:i.a},{type:l.a},{type:ct.a}],Nt=a.b([Object(n.B)({providedIn:"root"})],Nt);let wt=class{constructor(t,e,r){this.EfileCategoryMasterService=t,this.formBuilder=e,this.router=r,this.inputJson=new c.a({}),this.modifiedArr=new Array,this.arrayInfo=new Array,this.modalPopup=!1,this.tooltipJson=new c.a({}),this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getServiceAllClause(),this.editeForm=this.formBuilder.group({editeId:new s.c,editeCategoryName:new s.c("",[s.h.required])}),this.searchForm=new s.d({levelid:new s.c,categoryName:new s.c("",[s.h.required])})}openToolTip(t,e){this.tooltipJson.next({pageX:t.pageX,pageY:t.pageY,code:e})}editclauseonSubmit(t){console.log("data"),console.log(t),this.modalPopup=!0,this.editeCategoryName=t.categoryName,this.editeId=t.id}updateClause(){this.modalPopup=!1,this.arrayInfo={categoryName:this.editeForm.value.editeCategoryName,id:this.editeForm.value.editeId},console.log(this.arrayInfo),this.EfileCategoryMasterService.updateCategoryDetail(this.arrayInfo).subscribe(t=>{this.getServiceAllClause(),console.log(t)},t=>{console.log(t)})}popupClose(){this.modalPopup=!1}resetResult(){this.getServiceAllClause()}getServiceAllClause(){this.EfileCategoryMasterService.getcategorylist().subscribe(t=>{this.modifiedArr=t.data,this.filterDataArray=this.modifiedArr,this.dataArray=this.modifiedArr,this.tableSortFilter(null,null,null,"default"),console.log(this.modifiedArr)})}searchFormSubmit(){this.categoryName=this.searchForm.controls.categoryName.value,this.arrayInfo={categoryName:this.categoryName},console.log(this.arrayInfo),this.EfileCategoryMasterService.submitcategory(this.arrayInfo).subscribe(t=>{this.getServiceAllClause(),this.searchForm.reset(),this.inputJson.next({popShow:!0,popMsg:"Data Submitted Successfully",popClass:"alert alert-success",popRoute:""}),console.log(t)},t=>{console.log(t)})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"categoryName",label:"Category Name",type:"string"}],actualArray:this.modifiedArr,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};wt.ctorParameters=()=>[{type:Nt},{type:s.b},{type:u.e}],wt=a.b([Object(n.n)({selector:"app-efile-category-master",template:a.c(r("fAnj")).default,styles:[a.c(r("ijrn")).default]})],wt);let Ft=class{constructor(t,e,r){this.http=t,this._apiUrl=e,this.clause=r}getTapalcategorylist(){return this.http.secureget(this._apiUrl.efileHirearchy+"secure/master/tapal-category/all")}submitTapalcategory(t){return console.log(this._apiUrl.efileHirearchy+"secure/master/tapal-category/save",t),this.http.securepost(this._apiUrl.efileHirearchy+"secure/master/tapal-category/save",t)}updateDocCategoryDetail(t){return this.http.secureput(this._apiUrl.efileHirearchy+"secure/master/tapal-category/modify",t)}};Ft.ctorParameters=()=>[{type:i.a},{type:l.a},{type:ct.a}],Ft=a.b([Object(n.B)({providedIn:"root"})],Ft);let Pt=class{constructor(t,e,r){this.EtapalCategoryMasterService=t,this.formBuilder=e,this.router=r,this.inputJson=new c.a({}),this.allTapalArr=new Array,this.arrayInfo=new Array,this.tooltipJson=new c.a({}),this.modalPopup=!1,this.tableJsonData=new c.a({}),this.paginationCount=10}ngOnInit(){this.getServiceAllClause(),this.searchForm=new s.d({levelid:new s.c,docCategoryName:new s.c("",[s.h.required])}),this.editeForm=this.formBuilder.group({editeId:new s.c,editeDocCategoryName:new s.c("",[s.h.required])})}openToolTip(t,e){this.tooltipJson.next({pageX:t.pageX,pageY:t.pageY,code:e})}getServiceAllClause(){this.EtapalCategoryMasterService.getTapalcategorylist().subscribe(t=>{this.allTapalArr=t.data,this.filterDataArray=this.allTapalArr,this.dataArray=this.allTapalArr,this.tableSortFilter(null,null,null,"default"),console.log(this.allTapalArr)})}searchFormSubmit(){this.docCategoryName=this.searchForm.controls.docCategoryName.value,this.arrayInfo={typeName:this.docCategoryName},console.log(this.arrayInfo),this.EtapalCategoryMasterService.submitTapalcategory(this.arrayInfo).subscribe(t=>{this.getServiceAllClause(),this.searchForm.reset(),this.inputJson.next({popShow:!0,popMsg:"Data Submitted Successfully",popClass:"alert alert-success",popRoute:""}),console.log(t)},t=>{console.log(t)})}popupClose(){this.modalPopup=!1}resetResult(){this.getServiceAllClause()}editDocCategory(t){console.log("data"),console.log(t),this.modalPopup=!0,this.editeDocCategoryName=t.typeName,this.editeId=t.id}updateDocCategory(){this.modalPopup=!1,this.arrayInfo={id:this.editeForm.value.editeId,typeName:this.editeForm.value.editeDocCategoryName},console.log(this.arrayInfo),this.EtapalCategoryMasterService.updateDocCategoryDetail(this.arrayInfo).subscribe(t=>{this.getServiceAllClause(),console.log(t)},t=>{console.log(t)})}tableSortFilter(t,e,r,a){this.sortData="default"==a?{sortType:"DESC",key:"appSubmissionDate",typ:"date",sort:a}:{sortType:t,key:e,typ:r,sort:a};let n={headers:[{key:"typeName",label:"Doc Category Name",type:"string"}],actualArray:this.allTapalArr,sortData:this.sortData};this.tableHeader=n.headers,this.tableJsonData.next({exportJson:n}),console.log(n)}filterValue(t){console.log(t),this.filterDataArray=t.filterArray,this.sortData=t.sort,this.getPageNo(1)}getPageNo(t){this.currentPageNo=t,this.filterDataArray.length>9&&(this.paginationCount=10*t),0==this.filterDataArray.length&&(this.paginationCount=0),setTimeout(()=>{document.querySelector("#foo1").querySelector(".pagination-next").classList.contains("disabled")&&(this.paginationCount=this.filterDataArray.length)},100)}};Pt.ctorParameters=()=>[{type:Ft},{type:s.b},{type:u.e}],Pt=a.b([Object(n.n)({selector:"app-etapal-category-master",template:a.c(r("leid")).default,styles:[a.c(r("z8HG")).default]})],Pt);const It=[{path:"home/services",component:lt,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"home",component:w,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-district",component:m,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-user",component:C,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-bank",component:p,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-state",component:f,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-district",component:m,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-subdistrict",component:D,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-office",component:b,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-zone",component:N,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"master-enquiry",component:I,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"master-field",component:T,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"enquiry-field-mapping/:enqId",component:U,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"town-planning",component:M,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"all-user-details",component:_,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-role",component:q,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-department",component:J,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-tooltip",component:V,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"project-progress",component:B,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"alteration-progress",component:$,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"extension-progress",component:z,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"pincode-mapping",component:Q,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"sop",component:at,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"master-enquiry/view-mapped-enquiry",component:Y,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"e-sign",component:et,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"master-enquiry/non-mapping-list",component:ot,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"master-data/ifsc-excel-upload",component:dt,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"master-data/lawyer-excel-upload",component:dt,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"master-data/architect-excel-upload",component:dt,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"master-data/pincode-excel-upload",component:dt,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"master-data/townplan-excel-upload",component:dt,canActivate:[F.a],data:{role:["SUPERADMIN"]}},{path:"manage-user-group",component:ht},{path:"manage-user-type",component:mt},{path:"manage-user-department",component:bt},{path:"efile-master",component:ft},{path:"level-master",component:Dt},{path:"department-master",component:At},{path:"efileuser-master",component:xt},{path:"category-master",component:wt},{path:"doc-category-master",component:Pt}];let kt=class{};kt=a.b([Object(n.J)({imports:[u.f.forChild(It)],exports:[u.f]})],kt);var Tt=r("4nBV"),Et=r("KAPe"),Mt=r("xkgV"),_t=r("4Ot8"),Rt=r("ybvR");let Ut=class{constructor(){}ngOnInit(){}};Ut=a.b([Object(n.n)({selector:"app-users-roles",template:a.c(r("lpxc")).default,styles:[a.c(r("dzdi")).default]})],Ut);var Ot=r("UPf0"),qt=r("kdZ/"),Lt=r("C75N");let Jt=class{constructor(){}ngOnInit(){}};Jt=a.b([Object(n.n)({selector:"app-master-lawyer",template:a.c(r("yLJO")).default,styles:[a.c(r("v7Tf")).default]})],Jt);let jt=class{constructor(t,e){this._http=t,this._apiURL=e,this.apiURL=this._apiURL.reraMasterAPI+"/posts/"}postData(t){return this._http.post(this.apiURL,t)}getData(){return this._http.get(this.apiURL)}fileUploadService(t){return this._http.post(this._apiURL.reraMasterAPI+"/addDocument",t)}deleteDataService(t){return this._http.delete(this.apiURL+t)}updateFormService(t){return this._http.put(this.apiURL+t.id,t)}};jt.ctorParameters=()=>[{type:ct.a},{type:l.a}],jt=a.b([Object(n.B)({providedIn:"root"})],jt);var Vt=r("xxuN");let Ht=class{constructor(t,e){this._httpService=t,this._fileUpload=e}ngOnInit(){this.fileId={},this.outputValue={},this.uploadForm=new s.d({fileUploadId:new s.c(""),fileUploadId2:new s.c("")})}formSubmit(){this.uploadForm.invalid?alert("Error"):(console.log(this.uploadForm.value),this._httpService.postData(this.uploadForm.value).subscribe(t=>{this.uploadForm.reset()}))}setValue(t){this.outputValue[t.fid]=t.docid}};Ht.ctorParameters=()=>[{type:jt},{type:Vt.a}],Ht=a.b([Object(n.n)({selector:"app-complaint-section-form",template:a.c(r("bUJK")).default,styles:[a.c(r("3n8O")).default]})],Ht),r.d(e,"masterModule",(function(){return Bt}));let Bt=class{};Bt=a.b([Object(n.J)({declarations:[p,m,b,f,D,C,N,w,I,T,M,_,U,q,J,V,ft,At,Dt,xt,B,$,z,Y,mt,wt,Q,bt,ht,et,Pt,Ut,ot,at,lt,dt,Jt,bt,mt,ht,Ht],imports:[o.b,s.g,kt,Tt.a,Et.a,Mt.a,_t.a,Rt.a,qt.a,Ot.a,Lt.a],exports:[]})],Bt)},"OJ3+":function(t,e,r){"use strict";r.r(e),e.default='\r\n\r\n\r\n<div id="labels" class="card shadow mb-4">\r\n    \x3c!-- .card-body --\x3e\r\n    <div class="card-header"><b>Manage Districts</b></div>\r\n    <div class="card-body asd">\r\n    <div class="row">\r\n    <div class="col-md-12">\r\n\r\n      \r\n      <form [formGroup]="DistrictForm" id="validateFoem">\r\n        <input type="hidden" class="form-control" formControlName="stateId" [(ngModel)]="stateId">\r\n        <input type="hidden" class="form-control" formControlName="stateCode" [(ngModel)]="stateCode">\r\n          <div class="row">\r\n        <div class="form-group col-md-4">\r\n          <label class="control-label">District Name<sup>*</sup></label>\r\n          <input type="text" class="form-control"  placeholder="" formControlName="districtName">\r\n          <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter District Name max twenty character</small></div>\r\n        </div>\r\n        <div class="form-group col-md-4">\r\n          <label class="control-label">District Code<sup>*</sup></label>\r\n          <input type="text" class="form-control"  placeholder="" formControlName="districtCode">\r\n          <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> please enter District Code max four character</small></div>\r\n        </div>\r\n        <div class="form-group col-md-4">\r\n          <label class="control-label">Status<sup>*</sup></label>\r\n<select class="form-control" formControlName="status">\r\n  <option value="">--Select--</option>\r\n  <option value="Active">Active</option>\r\n  <option value="Inactive">Inactive</option>\r\n\r\n</select>\r\n<div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please select Status</small></div>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n      <div class="text-center">\r\n          <button  class="btn btn-primary"  (click)="prevTab()">Back</button>\r\n        <button [disabled]="this.DistrictForm.invalid" class="btn btn-primary"  (click)="formSubmit()"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>  Create District</button>\r\n      \r\n      \r\n         \r\n        </div>\r\n      </form>\r\n      <app-validation-message [message]="inputJson"></app-validation-message>\r\n      <div class="table-responsive">\r\n        <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n        <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n        <table class=" mt-5 mb-0 table table-bordered">\r\n          <thead>\r\n            <tr class="bg-light  text-size-small text-center">\r\n               \r\n                <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                  <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                  <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                </div>\r\n              </th>   \r\n              \r\n              <th colspan="3">Action</th>\r\n\r\n      \r\n            </tr>\r\n        </thead>\r\n          \x3c!-- <thead class="bg-light">\r\n<tr>\r\n  <th>District Name*</th>\r\n  <th>District Code</th>\r\n  <th>Status</th>\r\n <th colspan="3">Action</th>\r\n\r\n\r\n</tr>\r\n</thead> --\x3e\r\n<tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n\r\n      <tr *ngFor="let districtMaster of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }">\r\n<td>{{districtMaster.districtName}}</td>\r\n<td>{{districtMaster.districtCode}}</td>\r\n<td>{{districtMaster.status}}</td>\r\n\r\n\r\n<td><button  (click)="editForm(districtMaster)">Edit</button></td>\r\n<td><input type="button" class="btn btn-primary" value="Add Sub District" (click)="addSubDistrict(districtMaster)"></td>\r\n<td><input type="button" class="btn btn-primary" value="Add Town Plan" (click)="townPlanAuthority(districtMaster)"></td>\r\n\r\n      </tr>\r\n    </tbody>\r\n    <ng-template #no_allData>\r\n      <tbody>\r\n        <tr>\r\n          <td class="error text-center alert alert-danger" colspan="6">No record found!</td>\r\n        </tr>\r\n      </tbody>\r\n    </ng-template>\r\n    </table>\r\n\r\n    <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n      <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <div class="modal fade show" *ngIf="popShow">\r\n    <div class="modal-dialog">\r\n      <div class="modal-content">\r\n\r\n        \x3c!-- Modal Header --\x3e\r\n        <div class="modal-header">\r\n          <h4 class="modal-title">Edit Form</h4>\r\n          <button type="button" class="close" (click)="closePopup()">&times;</button>\r\n        </div>\r\n\r\n        \x3c!-- Modal body --\x3e\r\n        <form class="modal-body" id="validateFoem" [formGroup]="EditPopupForm">\r\n          <input type="hidden" class="form-control" formControlName="districtId" [(ngModel)]="editdistrictId">\r\n          <input type="hidden" class="form-control" formControlName="stateId" [(ngModel)]="editstateId">\r\n\r\n\r\n            <div class="mb-3">\r\n                <label>District Name</label>\r\n                <input type="text" class="form-control" formControlName="districtName" [(ngModel)]="editdistrictName">\r\n                <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter District Name max twenty character</small></div>\r\n              </div>\r\n              <label>District Code</label>\r\n              <div class="mb-3">\r\n                    <input type="text" class="form-control" formControlName="districtCode" [(ngModel)]="editdistrictCode">\r\n\r\n                    <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> please enter District Code max four character</small></div>\r\n                  </div>\r\n            <label>Status</label>\r\n            <div class="mb-3">\r\n\r\n    <select class="form-control" formControlName="status" [(ngModel)]="editstatus">\r\n      <option value="">--Select--</option>\r\n      <option value="Active">Active</option>\r\n      <option value="Inactive">Inactive</option>\r\n    </select>\r\n    <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please select Status</small></div>\r\n\r\n  </div>\r\n        </form>\r\n\r\n        \x3c!-- Modal footer --\x3e\r\n        <div class="modal-footer">\r\n                <button  class="btn btn-success" (click)="formUpdate()" data-dismiss="modal"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Update</button>\r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n   \r\n    <div class="popup-overlay" *ngIf="popShow"></div>'},PFgv:function(t,e,r){"use strict";r.r(e),e.default=""},PXfZ:function(t,e,r){"use strict";r.r(e),e.default=""},PiGg:function(t,e,r){"use strict";r.r(e),e.default=""},PrDS:function(t,e,r){"use strict";r.r(e),e.default='\r\n    <div id="labels" class="card shadow mb-4"> \r\n      \x3c!-- .card-body --\x3e\r\n      <div class="card-header"><b>Manage Department</b></div>\r\n      <div class="card-body asd">\r\n      <div class="row">\r\n      <div class="col-md-12">\r\n\r\n          <form [formGroup]="uploadForm" id="validateFoem">\r\n              <div class="row">\r\n                <div class="form-group col-md-6">\r\n                  <label class="control-label">Department Name<sup>*</sup></label>\r\n                  <input type="text" class="form-control"  placeholder="" formControlName="userDept">\r\n                  <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please type your department</small></div>\r\n                </div>\r\n                \x3c!-- <div class="form-group col-md-6">\r\n                  <label class="control-label">Department Name<sup>*</sup></label>\r\n                <select class="custom-select" id="basic" multiple="multiple">\r\n                  <option value="cheese" selected>Cheese</option>\r\n                  <option value="tomatoes">Tomatoes</option>\r\n                  <option value="mozarella">Mozzarella</option>\r\n                  <option value="mushrooms">Mushrooms</option>\r\n                  <option value="pepperoni">Pepperoni</option>\r\n                  <option value="onions">Onions</option>\r\n               </select>\r\n        </div> --\x3e\r\n      </div>\r\n        <div class="text-center">\r\n          <button [disabled]="this.uploadForm.invalid" class="btn btn-primary"  (click)="formSubmit()"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>  Create Department</button>\r\n        </div>\r\n      \r\n        </form>\r\n        <app-validation-message [message]="inputJson"></app-validation-message>\r\n\r\n    <div class="table-responsive">\r\n      <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n      <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n  <table class=" mt-5 table table-bordered">\r\n    <thead>\r\n      <tr class="bg-light  text-size-small text-center">\r\n        \r\n    <th width="5%">S.No.</th>\r\n        \r\n          <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n            <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n            <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n          </div>\r\n        </th>   \r\n        \r\n        <th>Action</th>\r\n\r\n      </tr>\r\n  </thead>\r\n      \x3c!-- <thead class="bg-light">\r\n  <tr>\r\n    <th width="5%">S.No.</th>\r\n    <th>Department Name</th>\r\n    <th width="20%">Action</th>\r\n  </tr>\r\n  </thead> --\x3e\r\n  <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n\r\n  <tr *ngFor="let depart of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }, let i= index">\r\n                    <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n                    \x3c!-- <td>{{i+1}}</td> --\x3e\r\n  <td>{{depart.userDept}}</td>\r\n  <td>\r\n    <input type="button" class="btn btn-small btn-primary" value="Update" (click)="editForm(depart)"> \r\n    <input type="button" class="btn btn-small btn-primary" value="Delete" (click)="deleteRole(i)">\r\n  </td>\r\n  </tr>\r\n</tbody>\r\n<ng-template #no_allData>\r\n  <tbody>\r\n    <tr>\r\n      <td class="error text-center alert alert-danger" colspan="3">No record found!</td>\r\n    </tr>\r\n  </tbody>\r\n</ng-template>\r\n      </table>\r\n      <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n        <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n      </div>\r\n    </div>\r\n      </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      \x3c!-- /.card-body --\x3e \r\n  \r\n      <div class="modal show" *ngIf="modalPopup">\r\n        <div class="modal-dialog">\r\n          <div class="modal-content">\r\n      \r\n            \x3c!-- Modal Header --\x3e\r\n            <div class="modal-header">\r\n              <h4 class="modal-title">Edit Form</h4>\r\n              <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n            </div>\r\n      \r\n            \x3c!-- Modal body --\x3e\r\n            <form class="modal-body" [formGroup]="EditPopupForm">\r\n              <input type="hidden" class="form-control" formControlName="deptId" [(ngModel)]="deptId">\r\n                <div class="mb-3">\r\n                    <label>Department Name</label>\r\n                    <input type="text" class="form-control" formControlName="userDept" [(ngModel)]="userDept">\r\n                  </div>\r\n                \r\n            </form>\r\n\r\n              \x3c!-- Modal footer --\x3e\r\n              <div class="modal-footer">\r\n                <button  class="btn btn-primary btn-sm" (click)="formUpdate()" data-dismiss="modal"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>Update</button>\r\n             </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      <div class="popup-overlay" *ngIf="modalPopup"></div>\r\n'},Q0Dz:function(t,e,r){"use strict";r.r(e),e.default='<div class="row mb-4 mt-4">\r\n\r\n  \r\n  <div class="container-fluid">\r\n  <div class="col-md-12 text-center mb-2">\r\n      <h2 class="text-dark">Department Listing</h2>\r\n    </div>\r\n    <div class="col-md-12 mb-2">\r\n      <form [formGroup]="searchFormDepartment" (ngSubmit)="daepartmentFormSubmit()" >\r\n  \r\n      <div class="row mb-4">\r\n        <div class="col-md-12">\r\n          <div class="card shadow"> \r\n    \r\n            <div class="card-body">\r\n              <div class="col-md-12">           \r\n                <div class="form-group col-md-3"> \r\n                  <label class="control-label font-weight-bold">Department Name<sup>*</sup> \r\n                  \r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    \r\n                    <input class="form-control" type="text" formControlName="department"  onkeyup="this.value = this.value.toUpperCase();"> \r\n                  </div>\r\n                </div>\r\n\t\t\t\t\r\n                \r\n\r\n              \r\n\r\n\t\t\t\t\r\n\t\t\r\n              </div>\r\n  \r\n              <div class="form-group col-md-12  text-center">\r\n                \x3c!--<button class="btn btn-primary" [disabled]="this.detailsOfAppelForm.invalid" id="submitBtn" (click)="formSubmit()"><i\r\n                  class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>SUBMIT</button>--\x3e\r\n                 \r\n                  <button type="submit" class="btn btn-primary btn-small mt-2" [disabled]="this.searchFormDepartment.invalid" >Submit</button>\r\n \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     </form>\r\n      </div>\r\n  \r\n  <div class="mt-3">\r\n      <div class="col-md-12">\r\n      <div class="card ">\r\n        \r\n        <div class="card-body">\r\n          <div class="row">\r\n            <div class=" col-md-12 table-responsive mb-4">\r\n              <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n              <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n              <table class="table table-bordered">\r\n                <thead>\r\n                  <tr class="bg-light  text-size-small text-center">\r\n               \r\n                    <th>Sr.No.</th>\r\n                    \r\n                      <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                      </div>\r\n                    </th>   \r\n                    \r\n                    <th>Action</th>\r\n              \r\n                  </tr>\r\n              </thead>\r\n                \x3c!-- <thead>\r\n                  <tr class="text-center bg-light  text-size-small">\r\n                    <td>Sr.No.</td>\r\n                    \r\n                    <td>Department Name</td>\r\n                  <td>Action</td>              \r\n                  </tr>\r\n                </thead> --\x3e\r\n                <tbody *ngIf="filterDataArray?.length > 0; else no_allData" >\r\n                 \r\n                  <tr class="text-center" *ngFor="let data of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }, let i= index" >\r\n                      <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n                      \x3c!-- <td>{{i+1}}</td> --\x3e\r\n          <td>{{data.userDept}}</td>  \r\n          <td><button type="button" class="btn btn-small bg-success" (click)=editDept(data.deptId,data.userDept)>Edit</button></td>              \r\n                  </tr>\r\n                \r\n                \x3c!-- <ng-template #norecords>\r\n                  <tr><td colspan=9>No Records Found</td></tr>\r\n                </ng-template> --\x3e\r\n                </tbody>\r\n                \r\n<ng-template #no_allData>\r\n  <tbody>\r\n    <tr>\r\n      <td class="error text-center alert alert-danger" colspan="3">No record found!</td>\r\n    </tr>\r\n  </tbody>\r\n</ng-template>\r\n              </table>\r\n             \r\n<div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n  <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n</div>\r\n             \r\n            </div>\r\n  \r\n           \r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n    </div>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  </div></div>\r\n\r\n\r\n     \r\n<div class="modal show" id="myModal" *ngIf="modalPopup">\r\n  <div class="modal-dialog ">\r\n  <div class="modal-content">\r\n  \x3c!-- Modal Header --\x3e\r\n  <div class="modal-header">\r\n  <h4 class="modal-title">Message</h4>\r\n  <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n  </div>\r\n  \x3c!-- Modal body --\x3e\r\n  <div class="modal-body">\r\n    <form [formGroup]="editeForm">\r\n      <input type="hidden" formControlName="deptId"  [(ngModel)]="deptId">\r\n    \r\n      <div class="form-group col-md-6"> \r\n        <label class="control-label font-weight-bold"> Department Name<sup>*</sup> \r\n         \r\n          </label>\r\n        <div class="input-group mt-2">\r\n\r\n          <input type="text" class="form-control" formControlName="deptName" onkeyup="this.value = this.value.toUpperCase();" [(ngModel)]="deptName">\r\n\r\n           \x3c!-- <input type="text" class="form-control" formControlName="deptName"  [(ngModel)]="deptName" #departments (input)="departments.value=$event.target.value.toUpperCase()"> --\x3e\r\n       \r\n        </div>\r\n        \r\n      </div>\r\n \r\n</form>\r\n  </div>\r\n  \x3c!-- Modal footer --\x3e\r\n  <div class="modal-footer">\r\n  <button type="button" (click)="updateClause()" [disabled]="this.editeForm.invalid" class="btn btn-primary">Update</button>\r\n \r\n  </div>\r\n\r\n  </div>\r\n  </div>\r\n  </div>\r\n\x3c!----Edite Popup strat here--------\x3e\r\n\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n'},"Q5+w":function(t,e,r){"use strict";r.r(e),e.default=""},RCpw:function(t,e,r){"use strict";r.r(e),e.default='\r\n  <form [formGroup]="allUserDetailsForm" id="validateFoem">\r\n      <div id="labels" class="card shadow"> \r\n     \r\n      <div class="row">\r\n      <div class="col-md-12">\r\n      <div class="card shadow "> \r\n\r\n          <div class="card-header"><strong>Users Details</strong></div>\r\n          <div class="card-body">\r\n              <table class="table table-bordered table-striped">\r\n                  <thead>\r\n                    <tr class="bg-light">\r\n                    <th>Type</th>\r\n                    <th>Name</th>\r\n                    <th>User Name</th>\r\n                    <th>Email Id</th>\r\n                    <th>Mobile No</th>\r\n                    <th>Registration No</th>\r\n                    <th>Created On</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n              <tr *ngFor="let b of addUserDetailsArray, let i = index">\r\n              <td>{{b.type}}</td>\r\n              <td>{{b.name}}</td>\r\n              <td>{{b.userName}}</td>\r\n              <td>{{b.emailId}}</td>\r\n             \r\n   </tr>\r\n   </tbody>\r\n   </table>\r\n   </div>\r\n            </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n</form>'},TQc9:function(t,e,r){"use strict";r.r(e),e.default='<div class="row mb-4 mt-4">\r\n\r\n  \r\n  <div class="container-fluid">\r\n  <div class="col-md-12 text-center mb-2">\r\n      <h2 class="text-dark">User Role Listing</h2>\r\n    </div>\r\n    <div class="col-md-12 mb-2">\r\n      <form [formGroup]="searchForm" id="validateFoem" (ngSubmit)="userTypeFormSubmit()" >\r\n  \r\n      <div class="row mb-4">\r\n        <div class="col-md-12">\r\n          <div class="card shadow"> \r\n    \r\n            <div class="card-body">\r\n              <div class="col-md-12">           \r\n                \r\n                <div class="form-group col-md-3"> \r\n                  <label class="control-label font-weight-bold"> Role Name<sup>*</sup> \r\n                  \r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    \r\n                    <input class="form-control" type="text" formControlName="userRoleName">\r\n                  </div>\r\n                </div>\r\n                \r\n                \r\n                <div class="form-group col-md-3"> \r\n                  <label class="control-label font-weight-bold"> Role Code<sup>*</sup> \r\n                  \r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    \r\n                    <input class="form-control" type="text" formControlName="userRole" onkeyup="this.value = this.value.toUpperCase();" >\r\n                  </div>\r\n                </div>\r\n        \r\n                \r\n\t\t\r\n              </div>\r\n  \r\n              <div class="form-group col-md-12  text-center">\r\n               \r\n                  <button type="submit" class="btn btn-primary btn-small mt-2" [disabled]="this.searchForm.invalid" >Submit</button>\r\n \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     </form>\r\n      </div>\r\n  \r\n  <div class="mt-3">\r\n      <div class="col-md-12">\r\n      <div class="card ">\r\n        \r\n        <div class="card-body">\r\n          <div class="row">\r\n            <div class=" col-md-12 table-responsive mb-4">\r\n              <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n              <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n              <table class="table table-bordered">\r\n                <thead>\r\n                  <tr class="bg-light  text-size-small text-center">\r\n               \r\n                    <th>Sr.No.</th>\r\n                    \r\n                      <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                      </div>\r\n                    </th>   \r\n                    \r\n                    <th>Action</th>\r\n              \r\n                  </tr>\r\n              </thead>\r\n                \x3c!-- <thead>\r\n                  <tr class="text-center bg-light  text-size-small">\r\n                    <td>Sr.No.</td>\r\n                    <td>Role Name</td>\r\n                    <td>Role Code</td>\r\n                  <td>Action</td>              \r\n                  </tr>\r\n                </thead> --\x3e\r\n                <tbody   *ngIf="filterDataArray?.length > 0; else no_allData">\r\n                 \r\n                  <tr class="text-center" *ngFor="let data of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }, let i= index" >\r\n                      <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n                      \x3c!-- <td>{{i+1}}</td> --\x3e\r\n                    <td>{{data.userRoleName}}</td>  \r\n                    <td>{{data.userRole}}</td>  \r\n                    <td><button type="button" class="btn btn-small bg-success" (click)=edituserType(data.roleId,data.userRole,data.userRoleName)>Edit</button></td>               \r\n                  </tr>\r\n\x3c!--                 \r\n                <ng-template #norecords>\r\n                  <tr><td colspan=9>No Records Found</td></tr>\r\n                </ng-template> --\x3e\r\n                </tbody>\r\n                                   \r\n<ng-template #no_allData>\r\n  <tbody>\r\n    <tr>\r\n      <td class="error text-center alert alert-danger" colspan="4">No record found!</td>\r\n    </tr>\r\n  </tbody>\r\n</ng-template>\r\n              </table>\r\n                              \r\n<div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n  <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n</div>\r\n         \r\n             \r\n            </div>\r\n  \r\n           \r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n    </div></div></div>\r\n\r\n\r\n          \r\n<div class="modal show" id="myModal" *ngIf="modalPopup">\r\n  <div class="modal-dialog ">\r\n  <div class="modal-content">\r\n  \x3c!-- Modal Header --\x3e\r\n  <div class="modal-header">\r\n  <h4 class="modal-title">Message</h4>\r\n  <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n  </div>\r\n  \x3c!-- Modal body --\x3e\r\n  <div class="modal-body">\r\n    <form [formGroup]="editeForm" id="validateFoem">\r\n      <input type="hidden" formControlName="roleId"  [(ngModel)]="roleId">\r\n    \r\n      <div class="form-group col-md-6"> \r\n        <label class="control-label font-weight-bold"> Role Name<sup>*</sup> \r\n        \r\n          </label>\r\n        <div class="input-group mt-2">\r\n          \r\n          <input class="form-control" type="text" formControlName="userRoleName" [(ngModel)]="userRoleNameroleName">\r\n        </div>\r\n      </div>\r\n      \r\n      <div class="form-group col-md-6"> \r\n        <label class="control-label font-weight-bold">Role Code<sup>*</sup> \r\n         \r\n          </label>\r\n        <div class="input-group mt-2">\r\n\r\n          <input type="text" class="form-control" formControlName="userRole" onkeyup="this.value = this.value.toUpperCase();" [(ngModel)]="roleName">\r\n        </div>\r\n        \r\n      </div>\r\n \r\n</form>\r\n  </div>\r\n  \x3c!-- Modal footer --\x3e\r\n  <div class="modal-footer">\r\n  <button type="button" (click)="updateClause()" [disabled]="this.editeForm.invalid"  class="btn btn-primary">Update</button>\r\n \r\n  </div>\r\n\r\n  </div>\r\n  </div>\r\n  </div>\r\n\x3c!----Edite Popup strat here--------\x3e\r\n\r\n\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n'},U8TT:function(t,e,r){"use strict";r.r(e),e.default=""},UngO:function(t,e,r){"use strict";r.r(e),e.default='<div class="row mb-4 mt-4">\r\n\r\n  <div class="container-fluid">\r\n  <div class="col-md-12 text-center mb-2">\r\n      <h2 class="text-dark">User Listing </h2>\r\n    </div>\r\n    <div class="col-md-12 mb-2">\r\n    <form [formGroup]="searchForm" (ngSubmit)="searchFormSubmit()" >\r\n  \r\n      <div class="row mb-4">\r\n        <div class="col-md-12">\r\n          <div class="card shadow"> \r\n    \r\n            <div class="card-body">\r\n              <div class="col-md-12">           \r\n                <div class="form-group col-md-4"> \r\n\r\n                  <label class="control-label font-weight-bold">User<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_EMAIL\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    <select class="form-control" formControlName="userRole" (change)="getUserName($event)" >\r\n                      <option value="">--Select--</option>\r\n\r\n                      <option *ngFor="let typeName of userRoleArr" [value]="typeName.userRole">{{typeName.userRoleName}}</option>                \r\n                      </select>\r\n                   \r\n                  </div>\r\n                  \r\n                </div>\r\n        \r\n                <div class="form-group col-md-4" *ngIf="hideTeam"> \r\n\r\n                  <label class="control-label font-weight-bold">Team<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_EMAIL\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    <select class="form-control" formControlName="teamname" >\r\n                      <option value="">--Select--</option>\r\n\r\n                      <option *ngFor="let teamName of teamList " [value]="teamName.roleName">{{teamName.roleName}}</option> \r\n\r\n                     \r\n                      </select>\r\n                   \r\n                  </div>\r\n                  \r\n                </div>\r\n\r\n                \x3c!-- <div class="form-group col-md-3" *ngIf="showDivEmail"> \r\n                \r\n\r\n                  <label class="control-label font-weight-bold">User Name<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_NAME\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    <input class="form-control" disabled type="text" formControlName="username"  [(ngModel)]="userName" > \r\n                   \r\n                  </div>\r\n                  \r\n                </div> --\x3e\r\n\r\n                \x3c!-- <div class="form-group col-md-3" *ngIf="showDivEmail"> \r\n                  <label class="control-label font-weight-bold">User Type<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_TYPE\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    <input class="form-control" disabled type="text" formControlName="usercode"  [(ngModel)]="userType" > \r\n                   \r\n                  </div>\r\n                  \r\n                </div>                --\x3e\r\n                \x3c!-- <div class="form-group col-md-3">\r\n                  <label class="control-label font-weight-bold">User Department<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_DESIGNATION\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    <select class="form-control" formControlName="designation"  >\r\n                      <option value="">--Select--</option>\r\n                      <option *ngFor="let typeName of designationArr" [value]="typeName.departmentCode">{{typeName.departmentName}}</option>                   \r\n                      </select>\r\n                  </div>\r\n                </div> --\x3e\r\n                <div class="form-group col-md-4">\r\n\r\n                  <label class="control-label font-weight-bold">User Level<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_LEVEL\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    <select class="form-control" formControlName="level" >\r\n                      <option value="">--Select--</option>\r\n                      <option *ngFor="let typeName of levelArr" [value]="typeName.levelCode">{{typeName.levelName}}</option>\r\n                      </select>\r\n                  </div>\r\n                </div>\r\n                <div class="form-group col-md-4">\r\n                  <label class="control-label font-weight-bold">User Previledges<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_PREVILEDGES\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                  \r\n\r\n                    <select class="form-control" formControlName="previledge" >\r\n                      <option value="">--Select--</option>\r\n                      <option value="YES">YES</option>\r\n                      <option  value="NO">NO</option>\r\n                      </select>\r\n\r\n                  </div>\r\n                </div>\r\n\t\t\r\n              </div>\r\n  \r\n              <div class="form-group col-md-12  text-center">\r\n                \x3c!--<button class="btn btn-primary" [disabled]="this.detailsOfAppelForm.invalid" id="submitBtn" (click)="formSubmit()"><i\r\n                  class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>SUBMIT</button>--\x3e\r\n                 \r\n                <button type="submit" class="btn btn-primary btn-small mt-2" [disabled]="this.searchForm.invalid">Submit</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     </form>\r\n      </div>\r\n  \r\n  <div class="mt-3">\r\n      <div class="col-md-12">\r\n      <div class="card ">\r\n        \r\n        <div class="card-body">\r\n          <div class="row">\r\n            <div class=" col-md-12 table-responsive mb-4">\r\n              <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n              <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n              <table class="table table-bordered">\r\n                <thead>\r\n                  <tr class="bg-light  text-size-small text-center">\r\n                    <th>Sr.No.</th>\r\n                    \r\n                      <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                      </div>\r\n                    </th>   \r\n                    \r\n                    <th>Action</th>\r\n      \r\n                  </tr>\r\n              </thead>\r\n                \x3c!-- <thead>\r\n                  <tr class="text-center bg-light  text-size-small">\r\n                    <td>Sr.No.</td>\r\n                    \r\n                  \r\n                    <td>User Type</td>\r\n                    \r\n                    <td>User Level</td>                    \r\n                    <td >User Privileged</td>\r\n                   <td >Category Name</td>\r\n                     <td >Department Name</td> \r\n                    <td >Action</td>\r\n                  </tr>\r\n                </thead> --\x3e\r\n                <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n                 \r\n                  <tr class="text-center" *ngFor="let data of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }, let i= index" >\r\n                    <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n        \r\n                    \x3c!-- <td>{{i+1}}</td>\r\n\t\t\t\t --\x3e\r\n\t\t\t\t\t<td>{{data.userRole}}</td>\r\n          <td>{{data.userTeam}}</td>\r\n          <td>{{data.userLevel}}</td>\r\n          <td>{{data.userPrivileged}}</td>\r\n          <td>{{this.catgoryName}}</td> \r\n          <td>{{this.DeptName}}</td>\r\n\t\t\t\t<td><a href="javascript:void(0)" style="display: none" class="badge bg-dark text-white pull-right p-1">\r\n\r\n          <i class="icon-edit"  (click)=editclauseonSubmit(data)></i></a>\r\n          <a href="javascript:void(0)" >\r\n            <i class="icon-trash pull-right ml-2" (click)=deleteclauseonSubmit(data.id)></i></a>\r\n        </td>\r\n\t\t\t\r\n                 \r\n                  </tr>\r\n                \r\n                \x3c!-- <ng-template #norecords>\r\n                  <tr><td colspan=9>No Records Found</td></tr>\r\n                </ng-template> --\x3e\r\n                </tbody>\r\n                \r\n\r\n                <ng-template #no_allData>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class="error text-center alert alert-danger" colspan="8">No record found!</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </ng-template>\r\n              </table>\r\n             \r\n              <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n                <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n              </div>\r\n             \r\n            </div>\r\n  \r\n           \r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n    </div></div></div>\r\n    \r\n\x3c!----Edite Popup strat here--------\x3e\r\n<div class="modal show" *ngIf="modalPopup">\r\n  <div class="modal-dialog modal-lg">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Modification</h4>\r\n        <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n      </div>\r\n\r\n      \x3c!-- Modal body --\x3e\r\n      <div class="modal-body">\r\n        <form [formGroup]="editclause1">\r\n         \r\n          <div class="form-group col-md-3"> \r\n            <label class="control-label font-weight-bold">User Email<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_EMAIL\')" >?</span>\r\n              </label>\r\n            <div class="input-group mt-2">\r\n              <input class="form-control" type="text" formControlName="UpdateUserEmail" [(ngModel)]="ModelUpdateUserEmail"value="" #dddd> \r\n              <span  (click)="resetResultupdate(dddd.value)"  class="btn btn-primary">Get User</span>\r\n            </div>\r\n            \r\n          </div>\r\n          <div class="form-group col-md-3" > \r\n            <label class="control-label font-weight-bold">User Name<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_NAME\')" >?</span>\r\n              </label>\r\n            <div class="input-group mt-2">\r\n              <input class="form-control" disabled type="text" formControlName="Updateusername"  [(ngModel)]="ModelUpdateUsername" > \r\n             \r\n            </div>\r\n            \r\n          </div>\r\n\r\n          <div class="form-group col-md-3" >\r\n            <label class="control-label font-weight-bold">User Type<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_TYPE\')" >?</span>\r\n              </label>\r\n            <div class="input-group mt-2">\r\n              <input class="form-control" disabled type="text" formControlName="Updateusercode"  [(ngModel)]="ModelUpdateUsertype" > \r\n             \r\n            </div>\r\n            \r\n          </div>\r\n\r\n          <div class="form-group col-md-3">\r\n            <label class="control-label font-weight-bold">User Designation<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_DESIGNATION\')" >?</span>\r\n              </label>\r\n                  <div class="input-group mt-2">\r\n                    <select class="form-control" formControlName="Updatedesignation" [(ngModel)]="ModelUpdateUserdesignation"  >\r\n                      <option value="">--Select--</option>\r\n                      <option *ngFor="let typeName of designationArr" [value]="typeName.designationCode">{{typeName.designationName}}</option>                   \r\n                      </select>\r\n                  </div>\r\n                </div>\r\n                <div class="form-group col-md-3">\r\n                  <label class="control-label font-weight-bold">User Level<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_LEVEL\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                    <select class="form-control" formControlName="Updatelevel" [(ngModel)]="ModelUpdateUserlevel"  >\r\n                      <option value="">--Select--</option>\r\n                      <option *ngFor="let typeName of levelArr" [value]="typeName.levelCode">{{typeName.levelName}}</option>\r\n                      </select>\r\n                  </div>\r\n                </div>\r\n                <div class="form-group col-md-3">\r\n                  <label class="control-label font-weight-bold">User Previledges<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'EFILE_USER_PREVILEDGES\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                  \r\n\r\n                    <select class="form-control" formControlName="Updatepreviledge" [(ngModel)]="ModelUpdateUserpriviledge" >\r\n                      <option value="">--Select--</option>\r\n                      <option value="YES">YES</option>\r\n                      <option  value="NO">NO</option>\r\n                      </select>\r\n\r\n                  </div>\r\n                </div>\r\n        </form>\r\n      </div>\r\n      \x3c!-- Modal footer --\x3e\r\n      <div class="modal-footer">\r\n\r\n        <button type="button" (click)="updateClause()" class="btn btn-primary">Update</button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<div class="modal show" id="myModal" *ngIf="deletePopup">\r\n  <div class="modal-dialog ">\r\n  <div class="modal-content">\r\n  \x3c!-- Modal Header --\x3e\r\n  <div class="modal-header">\r\n  <h4 class="modal-title">Message</h4>\r\n  <button type="button" class="close" (click)="canclePopup()">&times;</button>\r\n  </div>\r\n  \x3c!-- Modal body --\x3e\r\n  <div class="modal-body">\r\n    <form [formGroup]="deleteclause1">\r\n      <input type="hidden" formControlName="projectDeleteId"  [(ngModel)]="deletId">\r\n     \r\n      \r\n <p>Are you sure you want to delete?</p>\r\n</form>\r\n  </div>\r\n  \x3c!-- Modal footer --\x3e\r\n  <div class="modal-footer">\r\n  <button type="button" (click)="deletePopupsubmit()" class="btn btn-primary">Yes</button>\r\n  <button type="button" (click)="canclePopup()" class="btn btn-primary">No</button>\r\n  </div>\r\n\r\n  </div>\r\n  </div>\r\n  </div>\r\n\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n\x3c!-----Edite Popup end here-----------------\x3e\r\n\r\n\r\n<app-tooltip [tooltipEvent]="tooltipJson"></app-tooltip>\r\n\r\n    <app-validation-message [message]="inputJson"></app-validation-message>'},"V/M2":function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4">\r\n  <div class="d-flex justify-content-between align-items-center">\r\n    <h2>Alteration Progress</h2>\r\n    <div class="tableTotalCount">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n    </div>\r\n  \r\n  \x3c!-- <div class="card-header"><b>Alteration Progress</b></div> --\x3e\r\n  <div class="col-md-12">\r\n    <div class="card-body card_body_fix_height">\r\n      <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n  <div class="table-responsive  pb-2">\r\n    <table class="table table-bordered text-center">\r\n      \r\n      <thead>\r\n        <tr class="bg-light  text-size-small text-center">\r\n            \r\n            <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n              <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n              <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n            </div>\r\n          </th>\r\n        </tr>\r\n    </thead>\r\n      \x3c!-- <thead class="bg-light">\r\n        <tr>\r\n          <th>Acknowledgement No</th>\r\n          <th>Project Name</th>\r\n          <th>Created On</th>\r\n          <th>Status</th>\r\n          <th>TP Junior</th>\r\n          <th>TP Senior</th>\r\n          <th>Finance</th>\r\n          <th>Legal</th>\r\n\r\n        </tr>\r\n      </thead> --\x3e\r\n      <tbody *ngIf="filterDataArray?.length > 0; else noRecordFound">\r\n        <tr *ngFor="let a of filterDataArray | paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo } ">\r\n          <td>{{a.projectAckNo}}</td>\r\n          <td>{{a.projectName}}</td>\r\n          <td class="text-nowrap">{{a.projectCreatedOn}}</td>\r\n          <td>{{a.projectStatus}}</td>\r\n          <td>{{a.projectTeam}}</td>\r\n          <td>{{a.tpsrTeam}}</td>\r\n          <td>{{a.finTeam}}</td>\r\n          <td>{{a.lgTeam}}</td>\r\n        </tr>\r\n      </tbody>\r\n      <ng-template #noRecordFound>\r\n        <tbody>\r\n          <tr>\r\n            <td colspan="12">\r\n              <span class="error">No Record Found.</span>\r\n            </td> \r\n          </tr>\r\n        </tbody>\r\n      </ng-template>\r\n    </table>\r\n    <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n      <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n</div>'},YHnI:function(t,e,r){"use strict";r.r(e),e.default='\r\n<div id="labels" class="card shadow mb-4"> \r\n    \x3c!-- .card-body --\x3e\r\n    <div class="card-header"><b>Manage SubDistricts</b></div>\r\n    <div class="card-body asd">\r\n    <div class="row">\r\n    <div class="col-md-12">\r\n\r\n      <form [formGroup]="SubDistrictForm" id="validateFoem">\r\n          <div class="row">\r\n        <div class="form-group col-md-5">\r\n          <input type="hidden" formControlName="districtId" [(ngModel)]="districtId">\r\n          <input type="hidden" formControlName="districtCode" [(ngModel)]="districtCode">\r\n            <input type="hidden" formControlName="status" [(ngModel)]="status">\r\n            \r\n          <label class="control-label">Sub District Name<sup>*</sup></label>\r\n          <input type="text" class="form-control" id="lbl1" placeholder="" formControlName="subDistrictName">\r\n          <div class="error-box"><small class="error">Please enter Sub District Name max twenty character</small></div>\r\n        </div>\r\n      </div>\r\n      <div class="text-center">\r\n          <button  class="btn btn-primary"  (click)="prevTab()">Back</button>\r\n        <button [disabled]="this.SubDistrictForm.invalid" class="btn btn-primary"  (click)="formSubmit()"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>  Create SubDistrict</button>\r\n      </div>\r\n\r\n     \r\n      </form>\r\n      <app-validation-message [message]="inputJson"></app-validation-message>\r\n    \x3c!-- /.card-body --\x3e \r\n\r\n\r\n    <div class="table-responsive">\r\n      <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n      <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n      <table class=" mt-5 mb-0 table table-bordered">\r\n        <thead>\r\n          <tr class="bg-light  text-size-small text-center">\r\n              \r\n              <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n              </div>\r\n            </th>   \r\n            \r\n            <th>Action</th>\r\n    \r\n    \r\n    \r\n          </tr>\r\n          </thead>\r\n        \x3c!-- <thead class="bg-light">\r\n<tr>\r\n    <th>Subdistrict Name</th>\r\n    <th>Status</th>\r\n    <th>Action</th>\r\n  \r\n  </tr>\r\n</thead> --\x3e\r\n<tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n\r\n  <tr *ngFor="let subdistrictMaster of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }">\r\n      <td>{{subdistrictMaster.subDistrictName}}</td>\r\n      <td>{{subdistrictMaster.status}}</td>\r\n      <td><input type="button" value="Edit" class="btn btn-primary"  (click)="editForm(subdistrictMaster)"></td>\r\n             </tr>\r\n            </tbody>\r\n            <ng-template #no_allData>\r\n              <tbody>\r\n                <tr>\r\n                  <td class="error text-center alert alert-danger" colspan="3">No record found!</td>\r\n                </tr>\r\n              </tbody>\r\n            </ng-template>\r\n    </table>\r\n    <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n      <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n<div class="modal fade show" *ngIf="popShow">\r\n    <div class="modal-dialog">\r\n      <div class="modal-content">\r\n  \r\n        \x3c!-- Modal Header --\x3e\r\n        <div class="modal-header">\r\n          <h4 class="modal-title">Edit Form</h4>\r\n          <button type="button" class="close" (click)="closePop()">&times;</button>\r\n        </div>\r\n  \r\n        \x3c!-- Modal body --\x3e\r\n        <form class="modal-body" id="validateFoem" [formGroup]="EditPopupForm">\r\n          <input type="hidden" class="form-control" formControlName="districtId" [(ngModel)]="editDistrictId">\r\n          <input type="hidden" class="form-control" formControlName="subDistrictId" [(ngModel)]="editSubDistrictId">\r\n\r\n          \r\n            <div class="mb-3">\r\n                <label>Sub District Name</label>\r\n                <input type="text" class="form-control" formControlName="subDistrictName" [(ngModel)]="editSubDistrictName">\r\n                <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter District Name max twenty character</small></div>\r\n              </div>\r\n              \r\n            <label>Status</label>\r\n            <div class="mb-3"> \r\n            \r\n    <select class="form-control" formControlName="status" [(ngModel)]="editStatus">\r\n      <option value="">--Select--</option>\r\n      <option value="ACTIVE">Active</option>\r\n      <option value="INACTIVE">Inactive</option>\r\n    </select>\r\n    <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please select Status</small></div>\r\n    \r\n  </div>\r\n        </form>\r\n  \r\n        \x3c!-- Modal footer --\x3e\r\n        <div class="modal-footer">\r\n                <button  class="btn btn-success" (click)="formUpdate()" data-dismiss="modal"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Update</button>\r\n        </div>\r\n  \r\n    </div>\r\n    </div>\r\n\r\n\r\n    <div class="popup-overlay" *ngIf="popShow"></div>'},YlNj:function(t,e,r){"use strict";r.r(e),e.default=""},ZBQ9:function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4">\r\n  \x3c!-- .card-body --\x3e\r\n  <div class="card-header"><b>Field</b></div>\r\n  <div class="card-body asd">\r\n    <div class="row">\r\n      <div class="col-md-12">\r\n\r\n\r\n        <form [formGroup]="uploadForm" id="validateFoem">\r\n          <div class="row">\r\n            <div class="form-group col-md-4">\r\n\r\n              <label class="control-label">Field Code<sup>*</sup></label>\r\n              <input type="text" class="form-control" placeholder="" readonly formControlName="code" [(ngModel)]="enquiryCode">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  Field code required</small></div>\r\n            </div>\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Field Label<sup>*</sup></label>\r\n              <input type="text" class="form-control" placeholder="" formControlName="lebel">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  Field Label required</small></div>\r\n            </div>\r\n\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Field Type<sup>*</sup></label>\r\n              <select class="form-control" formControlName="type">\r\n                <option value="">--Select--</option>\r\n                <option value="PD">Project Details</option>\r\n              <option value="DD">Developmemt Details</option>\r\n              <option value="TP">Town Planning</option> \r\n              <option value="LD">Land Document</option> \r\n                <option value="DOC">Document Upload</option>\r\n                <option value="FDOC">With Meta Data Document</option>\r\n                <option [disabled]="alreadyInsertedBlock" value="BE">Block Entry</option>\r\n                <option value="BANK">Bank Details</option>\r\n                <option [disabled]="alreadyInsertedForm1" value="F1">Form 1</option>\r\n                <option [disabled]="alreadyInsertedForm2" value="F2">Form 2</option>\r\n                <option [disabled]="alreadyInsertedForm3" value="F3">Form 3</option>\r\n                <option value="OTHERREMARK">Other Remarks</option>\r\n                <option value="AGENT">Agent</option>\r\n                <option value="PE">Extension Details</option>\r\n              </select>\r\n              <div class="error-box"><small class="error">Please select Field type</small></div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class="text-center">\r\n\r\n            <button [disabled]="this.uploadForm.invalid" class="btn btn-primary" (click)="formSubmit()"><i\r\n                class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Submit</button>\r\n\r\n          </div>\r\n\r\n        </form>\r\n\r\n        <app-validation-message [message]="inputJson"></app-validation-message>\r\n        <div class="table-responsive">\r\n          <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n          <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n          <table class="mt-5 mb-0 table table-bordered">  \r\n             <thead>\r\n            <tr class="bg-light  text-size-small text-center">\r\n              \r\n                <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                  <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                  <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                </div>\r\n              </th>   \r\n              \r\n              <th>Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n            \x3c!-- <thead class="bg-light">\r\n              <tr>\r\n                <th>Field Code</th>\r\n                <th>Field Label</th>\r\n                <th>Field Type</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead> --\x3e\r\n            <tbody  *ngIf="filterDataArray?.length > 0; else no_allData">\r\n              <tr *ngFor="let enq of  filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }">\r\n                <td>{{enq.code}}</td>\r\n                <td>{{enq.lebel}}</td>\r\n                <td>{{enq.type}}</td>\r\n                <td><input type="button" class="btn btn-primary" value="Edit" (click)="editData(enq)"></td>\r\n              </tr>\r\n            </tbody>\r\n            <ng-template #no_allData>\r\n              <tbody>\r\n                <tr>\r\n                  <td class="error text-center alert alert-danger" colspan="4">No record found!</td>\r\n                </tr>\r\n              </tbody>\r\n            </ng-template>\r\n          </table>\r\n\r\n          <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n            <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\x3c!-- /.card-body --\x3e\r\n\r\n\r\n<div class="modal show" *ngIf="modalPopup">\r\n  <div class="modal-dialog">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Edit Field</h4>\r\n        <button type="button" class="close" (click)="closePopup()">&times;</button>\r\n      </div>\r\n\r\n      \x3c!-- Modal body --\x3e\r\n      <form class="modal-body" id="validateFoem" [formGroup]="EditPopupForm">\r\n        <input type="hidden" class="form-control" formControlName="id" [(ngModel)]="mainId">\r\n        <input type="hidden" class="form-control" formControlName="enquiryId" [(ngModel)]="enquiryId">\r\n        <div class="row">\r\n          <div class="col-md-12 mb-3">\r\n            <label>Field Code</label>\r\n            <input type="text" class="form-control" formControlName="code" readonly [(ngModel)]="code">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                Field Code at least of four character</small></div>\r\n          </div>\r\n\r\n\r\n          <div class="col-md-12 mb-3">\r\n            <label>Field Label</label>\r\n            <input type="text" class="form-control" formControlName="lebel" [(ngModel)]="lebel">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                Field Label required</small></div>\r\n\r\n          </div>\r\n\r\n\r\n          <div class="col-md-12 mb-3">\r\n            <label>Field Type</label>\r\n            <select class="form-control" formControlName="type" [(ngModel)]="type">\r\n              <option value="">--Select--</option>\r\n              <option value="PD">PD</option>\r\n              <option value="DD">DD</option>\r\n              <option value="TP">TP</option>\r\n              <option value="DOC">Document Upload</option>\r\n              <option value="CDOC">Commencement Commencement </option>\r\n              <option value="FDOC">With Meta Data Document</option>\r\n              <option [disabled]="alreadyInsertedBlock" value="BE">Block Entry</option>\r\n              <option [disabled]="alreadyInsertedForm1" value="F1">Form 1</option>\r\n              <option [disabled]="alreadyInsertedForm2" value="F2">Form 2</option>\r\n              <option [disabled]="alreadyInsertedForm3" value="F3">Form 3</option>\r\n              <option value="OTHERREMARK">Other Remarks</option>\r\n              <option value="AGENT">Agent</option>\r\n              <option value="PE">Extension Details</option>\r\n            </select>\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                Field Type required</small></div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n        \x3c!-- Modal footer --\x3e\r\n        <div class="modal-footer">\r\n\r\n          <button [disabled]="this.EditPopupForm.invalid" class="btn btn-primary" (click)="formUpdate()"\r\n            data-dismiss="modal"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>\r\n            Update</button>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n'},aAi2:function(t,e,r){"use strict";r.r(e),e.default=""},asNB:function(t,e,r){"use strict";r.r(e),e.default='\r\n<div class="col-md-12 text-center mb-4 title_text_2">Office Objection Scrutiny SOP for Complaint Verification</div>\r\n\r\n\r\n<div class="row mt-4">\r\n  <div class="col-md-12">\r\n    <div id="labels" class="card shadow">\r\n\r\n      <div class="card-header">\r\n        <b>Office Objection Scrutiny SOP for Complaint Verification</b>\r\n      </div>\r\n      <div class="card-body ">\r\n        <form [formGroup]="sopContentForm" id="validateFoem">\r\n        <div class="row">\r\n         \r\n          \r\n         \r\n          <div class="form-group col-md-6">\r\n            <label class="control-label">Sop Content<sup>*</sup>\r\n             \r\n            </label>\r\n            <input type="text" class="form-control" formControlName="sopContents">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                Please Enter Sop Content</small></div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n          <div class="form-group col-md-6">\r\n            <label class="control-label">Type<sup>*</sup>\r\n            </label>\r\n                       \r\n              <select class="form-control" formControlName="formType">\r\n                  <option value="">--Select--</option>\r\n              <option value="FORM_A">Form A</option>\r\n              <option value="FORM_B">Form B</option>\r\n              <option value="OFF_COMPLAINT_A">Offline Complaint A</option>\r\n              <option value="OFF_COMPLAINT_B">Offline Complaint B</option>\r\n              <option value="CONCILIATION_FORUM">Concilation</option>\r\n              <option value="OFF_CONCILIATION_FORUM">Concilation Offline</option>\r\n              <option value="REVIEW_FORM_A">Review Form A</option>\r\n              <option value="REVIEW_FORM_B">Review Form B</option>\r\n              <option value="SUOMOTU">SuoMotu</option>\r\n              <option value="RATIFICATION_SOUMOTO">Ratification Suomotu</option>\r\n              <option value="REVIEW_SOUMOTO">Review Suomotu</option>\r\n              <option value="DEFECT_FORM_A">Defect Form A</option>\r\n              <option value="DEFECT_FORM_B">Defect Form B</option>\r\n              <option value="RATIFICATION_FORM_A">Ratification Form A</option>\r\n              <option value="RATIFICATION_FORM_B">Ratification Form B</option>\r\n              <option value="OFF_RATIFICATION_FORM_A">Offline Ratification Form A</option>\r\n              <option value="OFF_RATIFICATION_FORM_B">Offline Ratification Form B</option>\r\n              \x3c!-- <option value="Review">Review</option> --\x3e\r\n              \r\n              </select>\r\n       \r\n            \x3c!-- <input type="text" class="form-control" formControlName="type"> --\x3e\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                Please Enter Form Type</small></div>\r\n          </div>\r\n\r\n           \r\n\r\n          </div>\r\n          <div class="row mt-4">\r\n            <div class="col-md-12 text-center mt-2">\r\n             \r\n              <button class="btn btn-primary" [disabled]="this.sopContentForm.invalid" (click)="formSubmit()"><i\r\n                  class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>Save</button>\r\n            </div>\r\n          </div>\r\n          \r\n       \r\n      </form>\r\n    </div>\r\n      </div>\r\n    \r\n    </div>\r\n\r\n  </div>\r\n<div class="row mt-4">  \r\n  <div class="col-md-12"> \r\n\r\n  \r\n    <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n    <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n<table class="table table-bordered text-center">                 \r\n  <thead>\r\n    <tr class="bg-light  text-size-small text-center">\r\n        \r\n        <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n          <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n          <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n        </div>\r\n      </th>  \r\n      \r\n      <th class="w-10"> Edit</th>\r\n    </tr>\r\n</thead>\r\n\x3c!-- <thead>\r\n  <tr class="bg-gray text-dark"> \r\n    <td>Sop content</td>\r\n    <td>Type</td>\r\n    <td>Edit</td>\r\n   \r\n    \r\n    \r\n  </tr>\r\n</thead> --\x3e\r\n<tbody  *ngIf="filterDataArray?.length > 0; else no_allData">\r\n  <tr *ngFor="let natureList of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo } ">\r\n    <td>{{natureList.sopContents}}</td>\r\n    <td>{{natureList.formType}}</td>\r\n<td><button class="btn btn-primary btn-sm" (click)="editForm(natureList)" data-toggle="modal" data-target="#editPopup">Edit</button></td>\r\n\r\n   \r\n  \r\n  </tr>\r\n  \r\n</tbody>\r\n\x3c!-- <tbody *ngIf="!sopContentList">\r\n  <tr class="text-center">\r\n    <td colspan="3"><div class="alert alert-danger">No Record Found!</div></td>\r\n  </tr>\r\n</tbody> --\x3e\r\n<ng-template #no_allData>\r\n  <tbody>\r\n    <tr>\r\n      <td class="error text-center alert alert-danger" colspan="3">No record found!</td>\r\n    </tr>\r\n  </tbody>\r\n</ng-template>\r\n</table>\r\n<div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n  <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n</div>\r\n\x3c!-- <div class="col-md-12 text-right"><pagination-controls  id="foo5" (pageChange)="nature = $event"></pagination-controls></div> --\x3e\r\n</div>\r\n</div>\r\n<div class="modal show" *ngIf="modalPopup">\r\n<div class="modal-dialog">\r\n  <div class="modal-content">\r\n\r\n    \x3c!-- Modal Header --\x3e\r\n    <div class="modal-header">\r\n      <h4 class="modal-title">Edit Sop content</h4>\r\n      <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n    </div>\r\n\r\n    \x3c!-- Modal body --\x3e\r\n    <form class="modal-body" [formGroup]="EditPopupForm" id="validateFoem">\r\n        <input type="hidden" class="form-control" formControlName="sid" [(ngModel)]="id">\r\n        <div class="mb-3">\r\n            <label>Sop Content</label>\r\n\r\n            <input type="text" class="form-control" formControlName="sopContents" [(ngModel)]="sopContents">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter Nature Complaint</small></div>\r\n    </div>\r\n          <label>Form Type</label>\r\n          <div class="mb-3">    \r\n            <select class="form-control" formControlName="formType" [(ngModel)]="type">\r\n              <option value="">--Select--</option>\r\n              <option value="FORM_A">Form A</option>\r\n              <option value="FORM_B">Form B</option>\r\n              <option value="OFF_COMPLAINT_A">Offline Complaint A</option>\r\n              <option value="OFF_COMPLAINT_B">Offline Complaint B</option>\r\n              <option value="CONCILIATION_FORUM">Concilation</option>\r\n              <option value="OFF_CONCILIATION_FORUM">Concilation Offline</option>\r\n              <option value="REVIEW_FORM_A">Review Form A</option>\r\n              <option value="REVIEW_FORM_B">Review Form B</option>\r\n              <option value="SUOMOTU">SuoMotu</option>\r\n              <option value="RATIFICATION_SOUMOTO">Ratification Suomotu</option>\r\n              <option value="REVIEW_SOUMOTO">Review Suomotu</option>\r\n              <option value="DEFECT_FORM_A">Defect Form A</option>\r\n              <option value="DEFECT_FORM_B">Defect Form B</option>\r\n              <option value="RATIFICATION_FORM_A">Ratification Form A</option>\r\n              <option value="RATIFICATION_FORM_B">Ratification Form B</option>\r\n              <option value="OFF_RATIFICATION_FORM_A">Offline Ratification Form A</option>\r\n              <option value="OFF_RATIFICATION_FORM_B">Offline Ratification Form B</option>\r\n              \x3c!-- <option value="Review">Review</option> --\x3e\r\n          </select>       \r\n                \x3c!-- <input type="text" class="form-control" trolName="type" [(ngModel)]="type"> --\x3e\r\n                <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter type</small></div>\r\n              </div>\r\n\r\n      \r\n      \r\n    \r\n    </form>\r\n\r\n    \x3c!-- Modal footer --\x3e\r\n    <div class="modal-footer">\r\n            <button  class="btn btn-primary btn-sm" (click)="formUpdate()" data-dismiss="modal"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>Update</button>\r\n    </div>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n'},bD79:function(t,e,r){"use strict";r.r(e),e.default='<div class="row mt-4 mb-8">\r\n        <div class="container-fluid">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div class="col-md-12">\r\n\r\n        \x3c!-- <div id="labels" class="card shadow mt-4">\r\n\r\n          <div class="card-header"><b>Master Dashboard</b></div>\r\n          <div class="card-body">\r\n          <div class="row">\r\n\r\n          <div class=" col-md-12 table-responsive mb-4">\r\n\r\n              <table class="table table-bordered">\r\n                      <thead>\r\n                            <tr class="text-center bg-light  text-size-small">\r\n                              <td>Promoter name</td>\r\n                              <td>Start Date</td>\r\n                              <td>End Date</td>\r\n                              <td>Form</td>\r\n                              <td colspan="2">Accept / Reject</td>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                         <tbody>\r\n                            <tr class="text-center">\r\n                              <td>Pravinbhai</td>\r\n                              <td>10-10-2019</td>\r\n                              <td>10-10-2012</td>\r\n                              <td><a href="#">Form A</a> </td>\r\n                              <td><button type="button" class="btn btn-small bg-success">Accept</button> </td>\r\n                              <td><button type="button" class="btn btn-small bg-danger">Reject</button> </td>\r\n\r\n                            </tr>\r\n                             <tr class="text-center">\r\n                              <td>Pravinbhai Rathod</td>\r\n                              <td>10-10-2019</td>\r\n                              <td>10-10-2012</td>\r\n                              <td><a href="#">Form B</a></td>\r\n                               <td><button type="button" class="btn btn-small bg-success">Accept</button> </td>\r\n                              <td><button type="button" class="btn btn-small bg-danger">Reject</button> </td>\r\n\r\n                            </tr>\r\n                       </tbody>\r\n                      </table>\r\n\r\n          </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </div> --\x3e\r\n\r\n        <div class="row mt-4 mb-4">\r\n\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n      </div>'},bUJK:function(t,e,r){"use strict";r.r(e),e.default='<div class="mt-4 container">\r\n<div id="labels" class="card shadow mb-4"> \r\n\x3c!-- .card-body --\x3e\r\n<div class="card-header"><b>Upload Documents</b></div>\r\n<div class="card-body asd">\r\n<div class="row">\r\n<div class="col-md-12">\r\n\r\n<form [formGroup]="uploadForm" id="validateFoem">\r\n    <div class="row">\r\n\r\n\r\n    \r\n      \r\n \r\n  <div class="form-group col-md-4">\r\n      <input type="hidden"  value="{{outputValue.panCard}}" formControlName="fileUploadId">\r\n      <app-file-upload (myEvent)="setValue($event)" [parm]="{fileId:\'panCard\',docId:123,show:false}"></app-file-upload>\r\n      \r\n    </div>\r\n\r\n<div class="form-group col-md-4">\r\n\r\n    <input type="hidden" value="{{outputValue.voterId}}" formControlName="fileUploadId2">\r\n\r\n \r\n\r\n    <app-file-upload (myEvent)="setValue($event)" [parm]="{fileId:\'voterId\',docId:321,show:false}"></app-file-upload>\r\n  </div>\r\n\r\n</div>\r\n<div class="text-center">\r\n  <input type="button" class="btn btn-primary" data-dismiss="modal" value="Submit" (click)="formSubmit()">\r\n</div>\r\n\r\n</form>\r\n'},dzdi:function(t,e,r){"use strict";r.r(e),e.default=""},e4Bs:function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4">\r\n\r\n  <div class="d-flex justify-content-between align-items-center">\r\n    <h2>Extension Progress</h2>\r\n    <div class="tableTotalCount">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n    </div>\r\n  \x3c!-- <div class="card-header"><b>Extension Progress</b>\r\n   \r\n  </div> --\x3e\r\n  <div class="col-md-12">\r\n    <div class="card-body card_body_fix_height">\r\n      <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n  <div class="table-responsive pb-2">\r\n    <table class="table table-bordered text-center">\r\n      \r\n      <thead>\r\n        <tr class="bg-light  text-size-small text-center">\r\n            \r\n            <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n              <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n              <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n            </div>\r\n          </th>\r\n        </tr>\r\n    </thead>\r\n      \x3c!-- <thead class="bg-light">\r\n        <tr>\r\n          <th>Acknowledgement No</th>\r\n          <th>Project Name</th>\r\n          <th>Created On</th>\r\n          <th>Status</th>\r\n          <th>TP Junior</th>\r\n          <th>TP Senior</th>\r\n          <th>Finance</th>\r\n          <th>Legal</th>\r\n        </tr>\r\n      </thead> --\x3e\r\n      <tbody *ngIf="filterDataArray?.length > 0; else noRecordFound">\r\n        <tr *ngFor="let a of filterDataArray | paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo } ">\r\n          <td>{{a.projectAckNo}}</td>\r\n          <td>{{a.projectName}}</td>\r\n          <td class="text-nowrap">{{a.projectCreatedOn}}</td>\r\n          <td>{{a.projectStatus}}</td>\r\n          <td>{{a.projectTeam}}</td>\r\n          <td>{{a.tpsrTeam}}</td>\r\n          <td>{{a.finTeam}}</td>\r\n          <td>{{a.lgTeam}}</td>\r\n        </tr>\r\n      </tbody>\r\n      <ng-template #noRecordFound>\r\n        <tbody>\r\n          <tr>\r\n            <td colspan="12">\r\n              <span class="error">No Record Found.</span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </ng-template>\r\n    </table>\r\n    <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n      <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n</div>\r\n'},etRc:function(t,e,r){"use strict";r.r(e),e.default='\r\n    <div id="labels" class="card shadow mb-4"> \r\n        \x3c!-- .card-body --\x3e\r\n        <div class="card-header"><b>e-Sign</b></div>\r\n        <div class="card-body asd">\r\n        <div class="row">\r\n        <div class="col-md-12">\r\n\x3c!-- <input type="button" class="btn btn-primary" value="eSign Test" (click)="eSignTest(\'PmaPAbWMy6yyhd6aKYqb2Pk8XarzrjkYBl8Dhcug8czDirXaK8abx7XgXMwydZniWAPDgC2oLu00id30\')"> --\x3e\r\n          \r\n      <form [formGroup]="eSignForm" id="validateFoem">\r\n        <div class="row">\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Authority Name<sup>*</sup></label>\r\n              <input type="text" class="form-control" id="lbl1" placeholder="" formControlName="authorityName">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter State Name max twenty character</small></div>\r\n            </div>\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Serial Number<sup>*</sup></label>\r\n              <input type="text" class="form-control" id="lbl1" placeholder="" formControlName="srlNo">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter State Name max twenty character</small></div>\r\n            </div>\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Email adress<sup>*</sup></label>\r\n              <input type="text" class="form-control" id="lbl1" placeholder="" formControlName="emailAddr">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter State Name max twenty character</small></div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n<div class="text-center">\r\n        <button [disabled]="this.eSignForm.invalid" class="btn btn-primary"  (click)="formSubmit()"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Submit</button>\r\n      </div>\r\n      </form>  \r\n      \r\n    \r\n      <div class="table-responsive">\r\n      \r\n\r\n        <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n        <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n          <table class=" mt-5 mb-0 table table-bordered">                     \r\n            <thead>\r\n              <tr class="bg-light  text-size-small text-center">\r\n                \r\n                  <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                    <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                    <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                  </div>\r\n                </th>  \r\n    <th>Status</th>\r\n                \r\n                <th class="w-10"> Action</th>\r\n              </tr>\r\n          </thead>\r\n           \x3c!-- <thead class="bg-light">\r\n  <tr>\r\n   \r\n    <th>Authority Name</th>\r\n    <th>Serial Number</th>\r\n    <th>Status</th>\r\n    <th>Email Address</th>\r\n    <th>Action</th>\r\n  </tr>\r\n  </thead> --\x3e\r\n  <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n   <tr *ngFor="let a of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }">\r\n  <td>{{a.authorityName}}</td>\r\n  <td>{{a.srlNo}}</td>\r\n  <td>{{a.emailAddr}}</td>\r\n  <td><label class="switch">\r\n    <input type="checkbox" [checked]="a.status == \'ACTIVE\' " (click)="statusChanged(a,$event)">\r\n    <span class="slider round"></span>\r\n  </label></td>\r\n  <td><input type="button" class="btn btn-primary" value="Edit" (click)="editData(a)"></td>\r\n        </tr>\r\n      </tbody>  \r\n      <ng-template #no_allData>\r\n        <tbody>\r\n          <tr>\r\n            <td class="error text-center alert alert-danger" colspan="5">No record found!</td>\r\n          </tr>\r\n        </tbody>\r\n      </ng-template>\r\n      </table>\r\n\r\n      <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n        <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n      </div>\r\n      </div>\r\n      </div>\r\n  \r\n\r\n      \r\n\r\n \r\n      \r\n \r\n      </div>\r\n      \r\n \r\n     \r\n      </div>\r\n      </div>\r\n    \r\n    \x3c!-- /.card-body --\x3e \r\n\r\n    \r\n  \r\n\r\n  <div class="modal show" *ngIf="editPopup">\r\n    <div class="modal-dialog">\r\n      <div class="modal-content">\r\n  \r\n        \x3c!-- Modal Header --\x3e\r\n        <div class="modal-header">\r\n          <h4 class="modal-title">Edit Form</h4>\r\n          <button type="button" (click)="closePop()" class="close" data-dismiss="modal">&times;</button>\r\n        </div>\r\n  \r\n        \x3c!-- Modal body --\x3e\r\n        <form class="modal-body" [formGroup]="eSignFormEdit" id="validateFoem">\r\n            <input type="hidden" class="form-control" id="lbl1" placeholder="" [(ngModel)]="editDataValue.authId" formControlName="authId">\r\n            <div class="row">\r\n                <div class="form-group col-md-12">\r\n                  <label class="control-label">Authority Name<sup>*</sup></label>\r\n                  <input type="text" [(ngModel)]="editDataValue.authorityName" class="form-control" id="lbl1" placeholder="" formControlName="authorityName">\r\n                  <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter State Name max twenty character</small></div>\r\n                </div>\r\n                <div class="form-group col-md-12">\r\n                  <label class="control-label">Serial Number<sup>*</sup></label>\r\n                  <input type="text" [(ngModel)]="editDataValue.srlNo" class="form-control" id="lbl1" placeholder="" formControlName="srlNo">\r\n                  <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter State Name max twenty character</small></div>\r\n                </div>\r\n                <div class="form-group col-md-12">\r\n                  <label class="control-label">Email adress<sup>*</sup></label>\r\n                  <input type="text" [(ngModel)]="editDataValue.emailAddr" class="form-control" id="lbl1" placeholder="" formControlName="emailAddr">\r\n                  <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Please enter State Name max twenty character</small></div>\r\n                </div>\r\n    \r\n    \r\n            </div>\r\n\r\n      \r\n        </form>\r\n  \r\n        \x3c!-- Modal footer --\x3e\r\n        <div class="modal-footer">\r\n                <button  class="btn btn-success" (click)="editDataPost()" data-dismiss="modal"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Update</button>\r\n        </div>\r\n  \r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n  <app-validation-message [message]="inputJson"></app-validation-message>\r\n  <app-esign (myEvent)="getEsignValue($event)" [eSignData]="eSignUid"></app-esign>'},fAnj:function(t,e,r){"use strict";r.r(e),e.default='<div class="row mb-4 mt-4">\r\n\r\n  <div class="container-fluid">\r\n  <div class="col-md-12 text-center mb-2">\r\n      <h2 class="text-dark">Category Listing</h2>\r\n    </div>\r\n    <div class="col-md-12 mb-2">\r\n    <form [formGroup]="searchForm" (ngSubmit)="searchFormSubmit()" >\r\n  \r\n      <div class="row mb-4">\r\n        <div class="col-md-12">\r\n          <div class="card shadow"> \r\n    \r\n            <div class="card-body">\r\n              <div class="col-md-12">           \r\n                <div class="form-group col-md-3"> \r\n                  <label class="control-label font-weight-bold">Category Name<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'ETAPAL_CATEGORY_NAME\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                  <input class="form-control " formControlName="categoryName" type="text" value="search">\r\n                  </div>\r\n                </div>\r\n\t\t\t\t\r\n               \r\n\t\t\t\t\r\n\t\t\r\n              </div>\r\n  \r\n              <div class="form-group col-md-12  text-center">\r\n                \x3c!--<button class="btn btn-primary" [disabled]="this.detailsOfAppelForm.invalid" id="submitBtn" (click)="formSubmit()"><i\r\n                  class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>SUBMIT</button>--\x3e\r\n                 \r\n                <button type="submit" class="btn btn-primary btn-small mt-2" [disabled]="this.searchForm.invalid" >Submit</button>\r\n \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     </form>\r\n      </div>\r\n  \r\n  <div class="mt-3">\r\n      <div class="col-md-12">\r\n      <div class="card ">\r\n        \r\n        <div class="card-body">\r\n          <div class="row">\r\n            <div class=" col-md-12 table-responsive mb-4">\r\n              <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n              <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n              <table class="table table-bordered">\r\n                  <thead>\r\n                <tr class="bg-light  text-size-small text-center">\r\n                  <th>Sr.No.</th>\r\n                  \r\n                    <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                      <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                      <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                    </div>\r\n                  </th>   \r\n                  \r\n                  <th>Action</th>\r\n    \r\n                </tr>\r\n            </thead>\r\n                \x3c!-- <thead>\r\n                  <tr class="text-center bg-light  text-size-small">\r\n                    <td>Sr.No.</td>\r\n                    \r\n                    <td>Category Name</td>\r\n                   \r\n                    \r\n                    <td>Action</td>                    \r\n                   \r\n                  </tr>\r\n                </thead> --\x3e\r\n                <tbody *ngIf="filterDataArray?.length > 0; else no_allData" >\r\n                 \r\n                  <tr class="text-center" *ngFor="let data of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }; let i= index" >\r\n                    <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n                    \x3c!-- <td>{{i+1}}</td> --\x3e\r\n\t\t\t\t\t<td>{{data.categoryName}}</td>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<td><button type="button" class="btn btn-small bg-success" (click)=editclauseonSubmit(data)>Edit</button></td>\r\n\t\t\t\r\n                   \r\n                  </tr>\r\n\x3c!--                 \r\n                <ng-template #norecords>\r\n                  <tr><td colspan=9>No Records Found</td></tr>\r\n                </ng-template> --\x3e\r\n                </tbody>\r\n                \r\n                <ng-template #no_allData>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class="error text-center alert alert-danger" colspan="3">No record found!</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </ng-template>\r\n              </table>\r\n              <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n                <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n              </div>\r\n\r\n             \r\n            </div>\r\n  \r\n           \r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n    </div></div></div>\r\n\r\n\r\n     \r\n\x3c!----Edite Popup strat here--------\x3e\r\n<div class="modal show" *ngIf="modalPopup">\r\n  <div class="modal-dialog modal-lg">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Modifications</h4>\r\n        <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n      </div>\r\n  \x3c!-- Modal body --\x3e\r\n      <div class="modal-body">\r\n        <form [formGroup]="editeForm" id="xyz" >\r\n          <input type="hidden" formControlName="editeId" [(ngModel)]="editeId">\r\n          <div class="form-group col-md-3">\r\n            <label class="control-label font-weight-bold">Category Name<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'ETAPAL_CATEGORY_NAME\')" >?</span>\r\n              </label>\r\n            <div class="input-group mt-2">\r\n            <input class="form-control " formControlName="editeCategoryName" type="text"  [(ngModel)]="editeCategoryName">\r\n            </div>\r\n           \r\n          </div>\r\n        \r\n        \r\n\r\n        </form>\r\n      </div>\r\n      \x3c!-- Modal footer --\x3e\r\n      <div class="modal-footer">\r\n\r\n        <button type="button" (click)="updateClause()" class="btn btn-primary">Update</button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n<app-tooltip [tooltipEvent]="tooltipJson"></app-tooltip>\r\n'},fKb7:function(t,e,r){"use strict";r.r(e),e.default=""},fTWn:function(t,e,r){"use strict";r.r(e),e.default=""},gDpk:function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4">\r\n  \x3c!-- .card-body --\x3e\r\n  <div class="card-header"><b>SOP\'s</b>\r\n  </div>\r\n  <span class="text-right"><a href="javascript:void(0)" (click)="viewMappedEnquiries()">View Mapped Enquiries</a> \r\n    \x3c!-- | <a href="javascript:void(0)" (click)="manageSOPs()">Manage SOP\'s</a> --\x3e\r\n  </span>\r\n  <div class="card-body asd">\r\n    <div class="row">\r\n      <div class="col-md-12">\r\n\r\n\r\n        <form [formGroup]="uploadForm" id="validateFoem">\r\n          <div class="row">\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">SOP Code<sup>*</sup></label>\r\n              <input type="text" class="form-control" placeholder="" readonly formControlName="code" [(ngModel)]="sopCode">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                SOP code required</small></div>\r\n            </div>\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Department<sup>*</sup></label>\r\n              <select class="form-control" formControlName="department">\r\n                <option value="">--Select--</option>\r\n                <option value="Finance">Finance</option>\r\n                <option value="TP">TP</option>\r\n                <option value="Legal">Legal</option>\r\n                <option value="Admin">Admin</option>\r\n                <option value="REGULATORY">Regulatory Officer</option>\r\n              </select>\r\n              <div class="error-box"><small class="error">Please select SOP type</small></div>\r\n            </div>\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Process Type<sup>*</sup></label>\r\n              <select class="form-control" formControlName="type">\r\n                <option value="">--Select--</option>\r\n                \x3c!-- <option value="PROJECT_QUA_ONLINE">Quarter</option> --\x3e\r\n                <option value="PROJECT_ALT_ONLINE">Alteration</option>\r\n                <option value="PROJECT_EXT_ONLINE">Extension</option>\r\n                <option value="PROJECT_REG_ONLINE">Registration</option>\r\n                <option value="PROJECT_ALT_15_ONLINE">Section 15 Stage 1</option>\r\n                <option value="PROJECT_ALT_15_ONLINE_2">Section 15 Stage 2</option>\r\n                <option value="AGENT_ONLINE">Agent Enquiry</option>\r\n              </select>\r\n              <div class="error-box"><small class="error">Please select SOP type</small></div>\r\n            </div>\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">SOP Description<sup>*</sup></label>\r\n              <input type="text" class="form-control" placeholder="" formControlName="description">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                SOP description required</small></div>\r\n            </div>\r\n            <div class="form-group col-md-4 d-none">\r\n              <label class="control-label">Enquiry Sequence</label>\r\n              <input type="text" class="form-control" placeholder="" formControlName="enqSeq">\r\n            </div>\r\n\r\n          </div>\r\n          <div class="text-center">\r\n\r\n            <button [disabled]="this.uploadForm.invalid" class="btn btn-primary" (click)="formSubmit()"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Submit</button>\r\n\r\n          </div>\r\n\r\n        </form>\r\n        <app-validation-message [message]="inputJson"></app-validation-message>\r\n\r\n     \r\n        <div class="table-responsive mt-3">\r\n          \r\n          <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n          <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n          <table class="mb-0 table table-bordered"> <thead>\r\n            <tr class="bg-light  text-size-small text-center">\r\n              \r\n                <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                  <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                  <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                </div>\r\n              </th>   \r\n              \r\n              <th colspan="3">Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n            \x3c!-- <thead class="bg-light">\r\n              <tr>\r\n                <th>SOP Code</th>\r\n                <th>SOP Description</th>\r\n                <th>SOP Type</th>\r\n                <th>Department</th>\r\n                <th colspan="3">Action</th>\r\n              </tr>\r\n            </thead> --\x3e\r\n            <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n              <tr *ngFor="let enq of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }">\r\n                <td>{{enq.code}}</td>\r\n                <td>{{enq.description}}</td>\r\n                <td>{{enq.type}}</td>\r\n                <td>{{enq?.enqSeq}}</td>\r\n                <td>{{enq?.department}}</td>\r\n                <td>\r\n                  <input type="button" class="btn btn-primary" value="Edit" (click)="editData(enq)">\r\n                </td>\r\n                <td>\r\n                  \r\n                  <input type="button" (click)="mapping(enq.enqId)" value="Map" class="btn btn-primary">\r\n                </td>\r\n                <td>\r\n                  \r\n                  <input type="button" (click)="showConfirmation(enq.enqId,enq.description)" value="Delete" class="btn btn-primary link-text">\r\n                </td>\r\n              </tr>\r\n\r\n            </tbody>\r\n            <ng-template #no_allData>\r\n              <tbody>\r\n                <tr>\r\n                  <td class="error text-center alert alert-danger" colspan="7">No record found!</td>\r\n                </tr>\r\n              </tbody>\r\n            </ng-template>\r\n          </table>\r\n\r\n          <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n            <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\x3c!-- /.card-body --\x3e\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class="modal show" *ngIf="modalPopup">\r\n  <div class="modal-dialog">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Edit SOP</h4>\r\n        <button type="button" class="close" (click)="closePopup()">&times;</button>\r\n      </div>\r\n\r\n      \x3c!-- Modal body --\x3e\r\n      <form class="modal-body" id="validateFoem" [formGroup]="EditPopupForm">\r\n        <input type="hidden" class="form-control" formControlName="enqId" [(ngModel)]="enqId">\r\n        <div class="row">\r\n          <div class="col-md-12 mb-3">\r\n            <label>SOP Code</label>\r\n            <input type="text" class="form-control" readonly formControlName="code" [(ngModel)]="code">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n              SOP Code at least of four character</small></div>\r\n          </div>\r\n          <div class="col-md-12 mb-3">\r\n            <label>SOP Department</label>\r\n            <select class="form-control" formControlName="department" [(ngModel)]="department">\r\n              <option value="">--Select--</option>\r\n              <option value="Finance">Finance</option>\r\n              <option value="TP">TP</option>\r\n              <option value="Legal">Legal</option>\r\n              <option value="Admin">Admin</option>\r\n              <option value="REGULATORY">Regulatory Officer</option>\r\n              \r\n            </select>\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n              SOP Department required</small></div>\r\n\r\n          </div>\r\n          <div class="col-md-12 mb-3">\r\n            <label>Process Type</label>\r\n            <select class="form-control" formControlName="type" [(ngModel)]="type">\r\n              <option value="">--Select--</option>\r\n              \x3c!-- <option value="PROJECT_QUA_ONLINE">Quarter</option> --\x3e\r\n              <option value="PROJECT_ALT_ONLINE">Alteration</option>\r\n              <option value="PROJECT_EXT_ONLINE">Extension</option>\r\n              <option value="PROJECT_REG_ONLINE">Registration</option>\r\n              <option value="PROJECT_ALT_15_ONLINE">Section 15 Stage 1</option>\r\n              <option value="PROJECT_ALT_15_ONLINE_2">Section 15 Stage 2</option>\r\n              <option value="AGENT_ONLINE">Agent Enquiry</option>\r\n            </select>\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                Process Type required</small></div>\r\n\r\n          </div>\r\n          <div class="col-md-12 mb-3">\r\n            <label>SOP Description</label>\r\n            <input type="text" class="form-control" formControlName="description" [(ngModel)]="description">\r\n            <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n              SOP Description required</small></div>\r\n\r\n          </div>\r\n          <div class="col-md-12 mb-3">\r\n            <label class="control-label">Enquiry Sequence</label>\r\n            <input type="text" class="form-control" placeholder="" formControlName="enqSeq" [(ngModel)]="enqSeq">\r\n          </div>\r\n        </div>\r\n\r\n        \x3c!-- Modal footer --\x3e\r\n        <div class="modal-footer">\r\n\r\n          <button [disabled]="this.EditPopupForm.invalid" class="btn btn-primary" (click)="formUpdate()"\r\n            data-dismiss="modal"><i class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>\r\n            Update</button>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n<app-confirmation-box (outEm)="confirmationEvent($event)" [showMessage]="confirmationEventB"></app-confirmation-box>'},"gbF+":function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4">\r\n  \x3c!-- .card-body --\x3e\r\n  <div class="card-header"><b>Manage States</b></div>\r\n  <div class="card-body asd">\r\n    <div class="row">\r\n      <div class="col-md-12">\r\n\r\n\r\n        <form [formGroup]="StateForm" id="validateFoem">\r\n          <div class="row">\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">State/UT Name<sup>*</sup></label>\r\n              <input type="text" class="form-control" id="lbl1" placeholder="" formControlName="stateUtName">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  Please enter State Name max twenty character</small></div>\r\n            </div>\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">State/UT Code<sup>*</sup></label>\r\n              <input type="text" class="form-control" id="lbl1" placeholder="" formControlName="stateUtCode">\r\n              <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n                  Please enter State Code max four character</small></div>\r\n            </div>\r\n\r\n            <div class="form-group col-md-4">\r\n              <label class="control-label">Status<sup>*</sup></label>\r\n              <select class="form-control" formControlName="status">\r\n                <option value="">--Select--</option>\r\n                <option value="ACTIVE">Active</option>\r\n                <option value="INACTIVE">Inactive</option>\r\n\r\n              </select>\r\n              <div class="error-box"><small class="error">Please select State</small></div>\r\n            </div>\r\n\r\n            <div class="form-group col-md-4">\r\n\r\n              <input type="hidden" class="form-control" id="lbl1" placeholder="" formControlName="stateUtId">\r\n\r\n            </div>\r\n          </div>\r\n          <div class="text-center">\r\n            <button [disabled]="this.StateForm.invalid" class="btn btn-primary" (click)="formSubmit()"><i\r\n                class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Submit</button>\r\n          </div>\r\n        </form>\r\n        <hr> \r\n        <div class="table-responsive">\r\n\r\n         \r\n          <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n          <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n          <table class=" mt-5 mb-0 table table-bordered">              \r\n            <thead>\r\n              <tr class="bg-light  text-size-small text-center">\r\n                  <th>S.No.</th>\r\n                  <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                    <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                    <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                  </div>\r\n                </th>  \r\n                \r\n                <th class="w-10"> Action</th>\r\n              </tr>\r\n          </thead>\r\n            \x3c!-- <thead class="bg-light">\r\n              <tr>\r\n                <th>Sr No.</th>\r\n                <th>State Name</th>\r\n                <th>State Code</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead> --\x3e\r\n            <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n              <tr *ngFor="let stateMaster of  filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }; let ic = index">\r\n                    <td class="tabel-text-right">{{((currentPageNo-1)*10)+(ic+1) }} </td>\r\n                    \x3c!-- <td>{{ip+1}}</td> --\x3e\r\n                <td>{{stateMaster.stateUtName}}</td>\r\n                <td>{{stateMaster.stateUtCode}}</td>\r\n                <td>{{stateMaster.status}}</td>\r\n\r\n\r\n                \x3c!--<td><a [routerLink]="[\'/master/manage-state\',stateMaster.stateUtId]">Edit</a></td>--\x3e\r\n                <td><button (click)="editForm(stateMaster)" class="btn btn-primary">Edit</button> <input type="button"\r\n                    (click)="addDistrict(stateMaster)" value="Add District" class="btn btn-primary"></td>\r\n\r\n\r\n\r\n              </tr>\r\n            </tbody>\r\n            <ng-template #no_allData>\r\n              <tbody>\r\n                <tr>\r\n                  <td class="error text-center alert alert-danger" colspan="5">No record found!</td>\r\n                </tr>\r\n              </tbody>\r\n            </ng-template>\r\n          </table>\r\n          <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n            <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n\x3c!-- /.card-body --\x3e\r\n\r\n\r\n\r\n\r\n<div class="modal fade show" *ngIf="popShow">\r\n  <div class="modal-dialog">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Edit Form</h4>\r\n        <button type="button" class="close" (click)="closePop()">&times;</button>\r\n      </div>\r\n\r\n      \x3c!-- Modal body --\x3e\r\n      <form class="modal-body" [formGroup]="EditPopupForm" id="validateFoem">\r\n        <input type="hidden" class="form-control" formControlName="stateUtId" [(ngModel)]="editstateUtId">\r\n        <div class="mb-3">\r\n          <label>State Name</label>\r\n          <input type="text" class="form-control" formControlName="stateUtName" [(ngModel)]="editstateUtName">\r\n          <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n              Please enter State Name max twenty character</small></div>\r\n        </div>\r\n        <label>State Code</label>\r\n        <div class="mb-3">\r\n          <input type="text" class="form-control" formControlName="stateUtCode" [(ngModel)]="editstateUtCode">\r\n          <div class="error-box"><small class="error"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\r\n              Please enter State Code max four character</small></div>\r\n        </div>\r\n        <div class="mb-3">\r\n          <label class="control-label">Status<sup>*</sup></label>\r\n          <select class="form-control" formControlName="status" [(ngModel)]="editstatus">\r\n            <option value="">--Select--</option>\r\n            <option value="ACTIVE">Active</option>\r\n            <option value="INACTIVE">Inactive</option>\r\n\r\n\r\n\r\n          </select>\r\n\r\n          <div class="error-box"><small class="error">Please select State</small></div>\r\n        </div>\r\n\r\n\r\n\r\n      </form>\r\n\r\n      \x3c!-- Modal footer --\x3e\r\n      <div class="modal-footer">\r\n        <button class="btn btn-success" (click)="formUpdate()" data-dismiss="modal"><i\r\n            class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i> Update</button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="popup-overlay" *ngIf="popShow"></div>\r\n<app-validation-message [message]="inputJson"></app-validation-message>'},hAjZ:function(t,e,r){"use strict";r.r(e),e.default=""},iKVH:function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4">\r\n  <div class="d-flex justify-content-between align-items-center">\r\n    <h2>Project Progress</h2>\r\n    <div class="tableTotalCount">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n    </div>\r\n  \r\n  \x3c!-- <div class="card-header"><b>Project Progress</b></div> --\x3e\r\n  <div class="col-md-12">\r\n    <div class="card-body card_body_fix_height">\r\n      <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n  <div class="table-responsive pb-2">\r\n    <table class="table table-bordered text-center">\r\n      \r\n      <thead>\r\n        <tr class="bg-light  text-size-small text-center">\r\n            \r\n            <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n              <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n              <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n            </div>\r\n          </th>\r\n        </tr>\r\n    </thead>\r\n      \x3c!-- <thead class="bg-light">\r\n        <tr>\r\n          <th>Acknowledgement No</th>\r\n          <th>Project Name</th>\r\n          <th>Created On</th>\r\n          <th>Status</th>\r\n          <th>TP Junior</th>\r\n          <th>TP Senior</th>\r\n          <th>Finance</th>\r\n          <th>Legal</th>\r\n\r\n        </tr>\r\n      </thead> --\x3e\r\n      <tbody *ngIf="filterDataArray?.length > 0; else noRecordFound">\r\n        <tr *ngFor="let a of filterDataArray | paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo } ">\r\n          <td>{{a.projectAckNo}}</td>\r\n          <td>{{a.projectName}}</td>\r\n          <td class="text-nowrap">{{a.projectCreatedOn}}</td>\r\n          <td>{{a.projectStatus}}</td>\r\n          <td>{{a.projectTeam}}</td>\r\n          <td>{{a.tpsrTeam}}</td>\r\n          <td>{{a.finTeam}}</td>\r\n          <td>{{a.lgTeam}}</td>\r\n        </tr>\r\n      </tbody>\r\n      <ng-template #noRecordFound>\r\n        <tbody>\r\n          <tr>\r\n            <td colspan="12">\r\n              <span class="error ">No Record Found.</span>\r\n            </td> \r\n          </tr>\r\n        </tbody>\r\n      </ng-template>\r\n    </table>\r\n    <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n      <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n</div>'},ijrn:function(t,e,r){"use strict";r.r(e),e.default=""},kkhc:function(t,e,r){"use strict";r.r(e),e.default='<div id="labels" class="card shadow mb-4">\r\n  \x3c!-- .card-body --\x3e\r\n  <div class="card-header"><b>Enquiry Field mapping</b></div>\r\n  <div class="card-body asd">\r\n    <div class="row">\r\n      <div class="col-md-12">\r\n\r\n        <div class="table-responsive">\r\n          <table class="mt-5 mb-0 table table-bordered">\r\n            <thead class="bg-light">\r\n              <tr>\r\n                <th>Enquiry Code</th>\r\n                <th>Enquiry Description</th>\r\n                <th>Enquiry Type</th>\r\n                <th>Department</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{{allEnqData?.code}}</td>\r\n                <td>{{allEnqData?.description}}</td>\r\n                <td>{{allEnqData?.type}}</td>\r\n                <td>{{allEnqData?.department}}</td>\r\n\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n\r\n        <br />\r\n        <div class="table-responsive">\r\n          <h3>Mapped Enquiries</h3>\r\n          <table class="mt-5 mb-0 table table-bordered">\r\n            <thead class="bg-light">\r\n              <tr>\r\n                <th>Sr No.</th>\r\n                <th>Field Code</th>\r\n                <th>Field Label</th>\r\n                <th>Field Type</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf="mappedEnquiries.length > 0; else _notMapped">\r\n              <tr *ngFor="let en of mappedEnquiries; let ip = index">\r\n                <td>{{ip+1}}</td>\r\n                <td>{{en?.code}}</td>\r\n                <td>{{en?.lebel}}</td>\r\n                <td>{{en?.type}}</td>\r\n                <td>\r\n                  <a href="javascript:void(0);" class="link-text" (click)="showConfirmation(en.id);">Delete</a>\r\n                </td>\r\n              </tr>\r\n              \r\n            </tbody>\r\n            <ng-template #_notMapped>\r\n              <tr>\r\n                <td colspan="5" class="red text-center">No Record found.</td>\r\n              </tr>\r\n            </ng-template>\r\n          </table>\r\n\r\n        </div>\r\n        <br>\r\n        <div class="row">\r\n     \r\n\r\n          <div class="form-group col-md-4">\r\n            <label class="control-label">Field</label>\r\n\r\n            \x3c!-- <input class="form-control border-secondary py-2" type="search" #Field> --\x3e\r\n            <select class="form-control" #type (click)="formSearch(type.value)">\r\n              <option value="">--Select--</option>\r\n              <option value="PD">Project Details</option>\r\n              <option value="DD">Developmemt Details</option>\r\n              <option value="TP">Town Planning</option> \r\n              <option value="LD">Land Document</option> \r\n              <option value="DOC">DOC</option>\r\n              <option value="CDOC">CDOC</option>\r\n              <option value="FDOC">With Meta Data Document</option>\r\n              <option value="BE">Block Entry</option>\r\n              <option value="BANK">Bank Details</option>\r\n              <option value="F1">F1</option>\r\n              <option value="F2">F2</option>\r\n              <option value="F3">F3</option>\r\n              <option value="OTHERREMARK">Other Remarks</option>\r\n              <option value="AGENT">Agent</option>\r\n              <option value="PE">Extension Details</option>\r\n            </select>\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <app-validation-message [message]="inputJson"></app-validation-message>\r\n        <div class="table-responsive">\r\n          <table class="mt-5 mb-0 table table-bordered">\r\n            <thead class="bg-light">\r\n              <tr>\r\n                <th>Field Code</th>\r\n                <th>Field Label</th>\r\n                <th>Field Type</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor="let field of allData">\r\n                <td>{{field.code}}</td>\r\n                <td>{{field.lebel}}</td>\r\n                <td>{{field.type}}</td>\r\n                <td> <input type="button" (click)="mapping(field)" value="Map" class="btn btn-primary"></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\x3c!-- /.card-body --\x3e\r\n<app-confirmation-box (outEm)="confirmationEvent($event)" [showMessage]="confirmationEventB"></app-confirmation-box>'},l5Nd:function(t,e,r){"use strict";r.r(e),e.default=""},leid:function(t,e,r){"use strict";r.r(e),e.default='<div class="row mb-4 mt-4">\r\n\r\n  <div class="container-fluid">\r\n  <div class="col-md-12 text-center mb-2">\r\n      <h2 class="text-dark">Document Category Listing</h2>\r\n    </div>\r\n    <div class="col-md-12 mb-2">\r\n    <form [formGroup]="searchForm" (ngSubmit)="searchFormSubmit()" >\r\n  \r\n      <div class="row mb-4">\r\n        <div class="col-md-12">\r\n          <div class="card shadow"> \r\n    \r\n            <div class="card-body">\r\n              <div class="col-md-12">           \r\n                <div class="form-group col-md-3"> \r\n                  <label class="control-label font-weight-bold">Doc Category Name<sup>*</sup> \r\n                    <span class="tooltip-open" (click)="openToolTip($event, \'ETAPAL_CATEGORY_NAME\')" >?</span>\r\n                    </label>\r\n                  <div class="input-group mt-2">\r\n                  <input class="form-control " formControlName="docCategoryName" type="text" value="search">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n              <div class="form-group col-md-12  text-center">   \r\n                <button type="submit" class="btn btn-primary btn-small mt-2" [disabled]="this.searchForm.invalid" >Submit</button>\r\n \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     </form>\r\n      </div>\r\n  \r\n  <div class="mt-3">\r\n      <div class="col-md-12">\r\n      <div class="card ">\r\n        \r\n        <div class="card-body">\r\n          <div class="row">\r\n            <div class=" col-md-12 table-responsive mb-4">\r\n              <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n              <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n              <table class="table table-bordered">\r\n                <thead>\r\n                  <tr class="bg-light  text-size-small text-center">\r\n                    <th>Sr.No.</th>\r\n                    \r\n                      <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                        <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                      </div>\r\n                    </th>   \r\n                    \r\n                    <th>Action</th>\r\n      \r\n                  </tr>\r\n              </thead>\r\n                \x3c!-- <thead>\r\n                  <tr class="text-center bg-light  text-size-small">\r\n                    <td>Sr.No.</td>\r\n                    \r\n                    <td>Doc Category Name</td>\r\n                   \r\n                    \r\n                    <td>Action</td>                    \r\n                   \r\n                  </tr>\r\n                </thead> --\x3e\r\n                <tbody  *ngIf="filterDataArray?.length > 0; else no_allData">\r\n                 \r\n                  <tr class="text-center" *ngFor="let data of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }, let i= index" >\r\n               \r\n                    <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n                    \x3c!-- <td>{{i+1}}</td> --\x3e\r\n\t\t\t\t\t<td>{{data.typeName}}</td>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<td><button type="button" class="btn btn-small bg-success" (click)=editDocCategory(data)>Edit</button></td>\r\n\t\t\t\r\n                   \r\n                  </tr>\r\n                \r\n                \x3c!-- <ng-template #norecords>\r\n                  <tr><td colspan=9>No Records Found</td></tr>\r\n                </ng-template> --\x3e\r\n                </tbody>\r\n                \r\n                <ng-template #no_allData>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class="error text-center alert alert-danger" colspan="3">No record found!</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </ng-template>\r\n              </table>\r\n             \r\n              <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n                <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n              </div>\r\n            </div>\r\n  \r\n           \r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n    </div></div></div>\r\n\r\n\r\n     \r\n\x3c!----Edite Popup strat here--------\x3e\r\n<div class="modal show" *ngIf="modalPopup">\r\n  <div class="modal-dialog modal-lg">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Modifications</h4>\r\n        <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n      </div>\r\n  \x3c!-- Modal body --\x3e\r\n      <div class="modal-body">\r\n        <form [formGroup]="editeForm" id="xyz" >\r\n          <input type="hidden" formControlName="editeId" [(ngModel)]="editeId">\r\n          <div class="form-group col-md-3">\r\n            <label class="control-label font-weight-bold">Doc Category Name<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'ETAPAL_CATEGORY_NAME\')" >?</span>\r\n              </label>\r\n            <div class="input-group mt-2">\r\n            <input class="form-control " formControlName="editeDocCategoryName" type="text"  [(ngModel)]="editeDocCategoryName">\r\n            </div>\r\n           \r\n          </div>\r\n        \r\n        \r\n\r\n        </form>\r\n      </div>\r\n      \x3c!-- Modal footer --\x3e\r\n      <div class="modal-footer">\r\n\r\n        <button type="button" (click)="updateDocCategory()" class="btn btn-primary">Update</button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n<app-tooltip [tooltipEvent]="tooltipJson"></app-tooltip>\r\n'},lpxc:function(t,e,r){"use strict";r.r(e),e.default="<p>users-roles works!</p>\r\n"},"poq+":function(t,e,r){"use strict";r.r(e),e.default=""},snCF:function(t,e,r){"use strict";r.r(e),e.default=""},"ui/f":function(t,e,r){"use strict";r.r(e),e.default=""},v7Tf:function(t,e,r){"use strict";r.r(e),e.default=""},vBct:function(t,e,r){"use strict";r.r(e),e.default=""},vXNJ:function(t,e,r){"use strict";r.r(e),e.default=""},x9lO:function(t,e,r){"use strict";r.r(e),e.default='<div class="row mb-4 mt-4">\r\n\r\n  <div class="container-fluid">\r\n    <div class="col-md-12 text-center mb-2">\r\n      <h2 class="text-dark">Hirearchy Listing</h2>\r\n    </div>\r\n    <div class="col-md-12 mb-2">\r\n      <form [formGroup]="searchForm" (ngSubmit)="searchFormSubmit()">\r\n\r\n        <div class="row mb-4">\r\n          <div class="col-md-12">\r\n            <div class="card shadow">\r\n\r\n              <div class="card-body">\r\n                <div class="col-md-12">\r\n                  <div class="form-group col-md-4">\r\n                 \r\n                    <label class="control-label font-weight-bold">Catagory Name<sup>*</sup> \r\n                      <span class="tooltip-open" (click)="openToolTip($event, \'ETAPAL_CATEGORY_NAME\')" >?</span>\r\n                      </label>\r\n                    <div class="input-group mt-2">\r\n                    \r\n\r\n                      <select class="form-control" formControlName="hirearchyName"  >\r\n                        <option value="">--Select--</option>\r\n                        <option *ngFor="let typeName of catgoeyArr" [value]="typeName.id">{{typeName.categoryName}}</option>                   \r\n                        </select>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group col-md-4">\r\n                  \r\n\r\n                    <label class="control-label font-weight-bold"> Department<sup>*</sup> \r\n                      <span class="tooltip-open" (click)="openToolTip($event, \'ETAPAL_CATEGORY_DEPARTMENT\')" >?</span>\r\n                      </label>\r\n                    <div class="input-group mt-2">\r\n\r\n                      <select class="form-control" formControlName="hirearchyDept"  >\r\n                        <option value="">--Select--</option>\r\n                        <option *ngFor="let typeName of departmentArr" [value]="typeName.id">{{typeName.departmentName}} - {{typeName.headUserRole}} - {{typeName.departmentDescription}}</option>                   \r\n                        </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group col-md-4">\r\n                    <label class="control-label font-weight-bold">Catagory Description<sup>*</sup> \r\n                      <span class="tooltip-open" (click)="openToolTip($event, \'ETAPAL_CATEGORY_DESCRIPTION\')" >?</span>\r\n                      </label>\r\n                    <div class="input-group mt-2">\r\n                      <input class="form-control " type="text" formControlName="hirearchyCode" value="search">\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div class="form-group col-md-12  text-center">\r\n                  \x3c!--<button class="btn btn-primary" [disabled]="this.detailsOfAppelForm.invalid" id="submitBtn" (click)="formSubmit()"><i\r\n                  class="fa fa-spinner fa-spin text-white" *ngIf="loader" aria-hidden="true"></i>SUBMIT</button>--\x3e\r\n                  <button type="submit" class="btn btn-primary btn-small mt-2" [disabled]="this.searchForm.invalid">Submit</button>\r\n                 \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </form>\r\n    </div>\r\n\r\n    <div class="mt-3">\r\n      <div class="col-md-12">\r\n        <div class="card ">\r\n\r\n          <div class="card-body">\r\n            <div class="row">\r\n              <div class=" col-md-12 table-responsive mb-4">\r\n                <div class="tabel-text-right font-weight-bold">Total Result - {{paginationCount}}/{{filterDataArray?.length}}</div>\r\n                <app-filter-table [filterTableData]="{\'tableJson\':tableJsonData}" (myEvent)="filterValue($event)"></app-filter-table>\r\n                <table class="table table-bordered">\r\n                  <thead>\r\n                    <tr class="bg-light  text-size-small text-center">\r\n                      <th>Sr.No.</th>\r\n                      \r\n                        <th *ngFor="let th of tableHeader">{{th.label}} <div class="sortTable">\r\n                          <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'ASC\' && sortData.key==th.key}" (click)="tableSortFilter(\'ASC\', th.key, th.type,\'sort\')" class="upArrow"><i class="fas fa-arrow-up"></i></a>\r\n                          <a href="javascript:void(0)" [ngClass]="{\'active\':sortData.sortType==\'DESC\' && sortData.key==th.key}" (click)="tableSortFilter(\'DESC\', th.key, th.type,\'sort\')" class="downArrow"><i class="fas fa-arrow-down"></i></a>\r\n                        </div>\r\n                      </th>   \r\n                      \r\n                      <th>View</th>\r\n        \r\n                    </tr>\r\n                </thead>\r\n                  \x3c!-- <thead>\r\n                    <tr class="text-center bg-light  text-size-small">\r\n                      <td>Sr.No.</td>\r\n\r\n                      <td>Catagory </td>\r\n                      <td> Department</td>\r\n                      <td>Catagory Description</td> \r\n                      <td> View</td>\r\n                    </tr>\r\n                  </thead> --\x3e\r\n                  <tbody *ngIf="filterDataArray?.length > 0; else no_allData">\r\n\r\n                    <tr class="text-center" *ngFor="let dataObj of filterDataArray| paginate: { id: \'foo1\', itemsPerPage: 10, currentPage: currentPageNo }, let i= index">\r\n                    <td class="tabel-text-right">{{((currentPageNo-1)*10)+(i+1) }} </td>\r\n                    \x3c!-- <td>{{i+1}}</td> --\x3e\r\n                      <td>{{dataObj.nameClasture}}</td>\r\n                      <td>{{dataObj.deptName}}</td>\r\n                      <td>{{dataObj.catagoryDescription}}</td>\r\n                      \x3c!-- <td> \r\n                                           \r\n                          <button type="button" class="btn btn-small bg-success" (click)=editclauseonSubmit(dataObj)>Edit</button>\r\n                        \r\n                        </td> --\x3e\r\n\r\n                      <td><button type="button" class="btn btn-small bg-success"\r\n                          (click)=editeonSubmit(dataObj.id,dataObj.nameClasture,dataObj.deptName)>View</button></td>\r\n                    </tr>\r\n\x3c!-- \r\n                    <ng-template #norecords>\r\n                      <tr>\r\n                        <td colspan=9>No Records Found</td>\r\n                      </tr>\r\n                    </ng-template> --\x3e\r\n                  </tbody>\r\n\r\n                  <ng-template #no_allData>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td class="error text-center alert alert-danger" colspan="5">No record found!</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </ng-template>\r\n                </table>\r\n\r\n                <div class="col-md-12 text-right" *ngIf="filterDataArray?.length > 0">\r\n                  <pagination-controls id="foo1" (pageChange)="getPageNo($event)"></pagination-controls>\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\x3c!----Edite Popup strat here--------\x3e\r\n<div class="modal show" *ngIf="modalPopup">\r\n  <div class="modal-dialog modal-lg">\r\n    <div class="modal-content">\r\n\r\n      \x3c!-- Modal Header --\x3e\r\n      <div class="modal-header">\r\n        <h4 class="modal-title">Modification</h4>\r\n        <button type="button" class="close" (click)="popupClose()">&times;</button>\r\n      </div>\r\n\r\n      \x3c!-- Modal body --\x3e\r\n      <div class="modal-body">\r\n        <form [formGroup]="editclause1">\r\n          <input type="hidden" formControlName="hirearchyId" [(ngModel)]="id">\r\n          <div class="form-group col-md-4">\r\n            <label class="control-label font-weight-bold">Catagory Name<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'HIREARCHY_NAME\')" >?</span>\r\n              </label>\r\n              \r\n            <div class="input-group mt-2">\r\n            \r\n\r\n                <select class="form-control" formControlName="updateHirearchyName" [(ngModel)]="nameClasture" >\r\n                  <option value="">--Select--</option>\r\n                  <option *ngFor="let typeName of catgoeyArr" [value]="typeName.id">{{typeName.categoryName}}</option>                   \r\n                  </select>\r\n\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div class="form-group col-md-4">\r\n            <label class="control-label font-weight-bold"> Department<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'HIREARCHY_DEPARTMENT\')" >?</span>\r\n              </label>\r\n            <div class="input-group mt-2">\r\n              <select class="form-control" formControlName="updatehirearchyDept" [(ngModel)]="deptId" >\r\n                <option value="">--Select--</option>\r\n                <option *ngFor="let typeName of departmentArr" [value]="typeName.deptId">{{typeName.userDept}}</option>                   \r\n                </select>\r\n            </div>\r\n          </div>\r\n          <div class="form-group col-md-4">\r\n            <label class="control-label font-weight-bold">Catagory Description<sup>*</sup> \r\n              <span class="tooltip-open" (click)="openToolTip($event, \'HIREARCHY_CODE\')" >?</span>\r\n              </label>\r\n            <div class="input-group mt-2">\r\n              <input class="form-control " type="text" formControlName="updateHirearchyCode"\r\n                [(ngModel)]="departCode">\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n      \x3c!-- Modal footer --\x3e\r\n      <div class="modal-footer">\r\n\r\n        <button type="button" (click)="updateClause()" class="btn btn-primary">Update</button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="popup-overlay" *ngIf="modalPopup"></div>\r\n<app-validation-message [message]="inputJson"></app-validation-message>\r\n<app-tooltip [tooltipEvent]="tooltipJson"></app-tooltip>\r\n\x3c!-----Edite Popup end here-----------------\x3e'},yLJO:function(t,e,r){"use strict";r.r(e),e.default="<p>master-lawyer works!</p>\r\n"},ySLn:function(t,e,r){"use strict";r.r(e),e.default=""},z8HG:function(t,e,r){"use strict";r.r(e),e.default=""}}]);